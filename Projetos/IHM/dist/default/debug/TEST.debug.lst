

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 29 10:58:20 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67  0000                     
    68                           ; Version 2.05
    69                           ; Generated 20/12/2018 GMT
    70                           ; 
    71                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F46K20 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   104  0000                     
   105 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   106  0000                     
   107 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   108  0000                     
   109                           	psect	idataCOMRAM
   110  000EB0                     __pidataCOMRAM:
   111                           	opt callstack 0
   112                           
   113                           ;initializer for Ws0010Init@F3174
   114  000EB0  00                 	db	0
   115  000EB1  00                 	db	0
   116  000EB2  00                 	db	0
   117  000EB3  00                 	db	0
   118  000EB4  00                 	db	0
   119  000EB5  22                 	db	34
   120  000EB6  22                 	db	34
   121  000EB7  88                 	db	136
   122  000EB8  00                 	db	0
   123  000EB9  CC                 	db	204
   124  000EBA  11                 	db	17
   125  000EBB  FF                 	db	255
   126  000EBC  00                 	db	0
   127  000EBD  66                 	db	102
   128                           
   129                           ;initializer for Ws0010Bufu16@F3238
   130  000EBE  0000               	dw	0
   131  000EC0  0001               	dw	1
   132  000EC2  000A               	dw	10
   133  000EC4  0064               	dw	100
   134  000EC6  03E8               	dw	1000
   135  000EC8  2710               	dw	10000
   136                           
   137                           ;initializer for Ws0010Bufu8@F3223
   138  000ECA  00                 	db	0
   139  000ECB  01                 	db	1
   140  000ECC  0A                 	db	10
   141  000ECD  64                 	db	100
   142                           
   143                           	psect	idataBANK0
   144  000E12                     __pidataBANK0:
   145                           	opt callstack 0
   146                           
   147                           ;initializer for Ws0010Bufu32@F3253
   148  000E12  0000               	dw	0
   149  000E14  0000               	dw	0
   150  000E16  0001               	dw	1
   151  000E18  0000               	dw	0
   152  000E1A  000A               	dw	10
   153  000E1C  0000               	dw	0
   154  000E1E  0064               	dw	100
   155  000E20  0000               	dw	0
   156  000E22  03E8               	dw	1000
   157  000E24  0000               	dw	0
   158  000E26  2710               	dw	10000
   159  000E28  0000               	dw	0
   160  000E2A  86A0               	dw	34464
   161  000E2C  0001               	dw	1
   162  000E2E  4240               	dw	16960
   163  000E30  000F               	dw	15
   164  000E32  9680               	dw	38528
   165  000E34  0098               	dw	152
   166  000E36  E100               	dw	57600
   167  000E38  05F5               	dw	1525
   168  000E3A  CA00               	dw	51712
   169  000E3C  3B9A               	dw	15258
   170                           
   171                           	psect	mediumconst
   172  00F8C4                     __pmediumconst:
   173                           	opt callstack 0
   174  00F8C4  00                 	db	0
   175  00F8C5                     _ascii_table4x6:
   176                           	opt callstack 0
   177  00F8C5  00                 	db	0
   178  00F8C6  00                 	db	0
   179  00F8C7  00                 	db	0
   180  00F8C8  00                 	db	0
   181  00F8C9  00                 	db	0
   182  00F8CA  00                 	db	0
   183  00F8CB  2E                 	db	46
   184  00F8CC  00                 	db	0
   185  00F8CD  00                 	db	0
   186  00F8CE  06                 	db	6
   187  00F8CF  00                 	db	0
   188  00F8D0  06                 	db	6
   189  00F8D1  00                 	db	0
   190  00F8D2  3E                 	db	62
   191  00F8D3  14                 	db	20
   192  00F8D4  3E                 	db	62
   193  00F8D5  00                 	db	0
   194  00F8D6  28                 	db	40
   195  00F8D7  7E                 	db	126
   196  00F8D8  14                 	db	20
   197  00F8D9  00                 	db	0
   198  00F8DA  12                 	db	18
   199  00F8DB  08                 	db	8
   200  00F8DC  24                 	db	36
   201  00F8DD  00                 	db	0
   202  00F8DE  34                 	db	52
   203  00F8DF  2A                 	db	42
   204  00F8E0  3C                 	db	60
   205  00F8E1  00                 	db	0
   206  00F8E2  06                 	db	6
   207  00F8E3  02                 	db	2
   208  00F8E4  00                 	db	0
   209  00F8E5  00                 	db	0
   210  00F8E6  1C                 	db	28
   211  00F8E7  22                 	db	34
   212  00F8E8  00                 	db	0
   213  00F8E9  00                 	db	0
   214  00F8EA  22                 	db	34
   215  00F8EB  1C                 	db	28
   216  00F8EC  00                 	db	0
   217  00F8ED  00                 	db	0
   218  00F8EE  2A                 	db	42
   219  00F8EF  1C                 	db	28
   220  00F8F0  2A                 	db	42
   221  00F8F1  00                 	db	0
   222  00F8F2  08                 	db	8
   223  00F8F3  1C                 	db	28
   224  00F8F4  08                 	db	8
   225  00F8F5  00                 	db	0
   226  00F8F6  60                 	db	96
   227  00F8F7  20                 	db	32
   228  00F8F8  00                 	db	0
   229  00F8F9  00                 	db	0
   230  00F8FA  08                 	db	8
   231  00F8FB  08                 	db	8
   232  00F8FC  08                 	db	8
   233  00F8FD  00                 	db	0
   234  00F8FE  00                 	db	0
   235  00F8FF  20                 	db	32
   236  00F900  00                 	db	0
   237  00F901  00                 	db	0
   238  00F902  30                 	db	48
   239  00F903  08                 	db	8
   240  00F904  06                 	db	6
   241  00F905  3C                 	db	60
   242  00F906  42                 	db	66
   243  00F907  42                 	db	66
   244  00F908  3C                 	db	60
   245  00F909  00                 	db	0
   246  00F90A  44                 	db	68
   247  00F90B  7E                 	db	126
   248  00F90C  40                 	db	64
   249  00F90D  62                 	db	98
   250  00F90E  52                 	db	82
   251  00F90F  4A                 	db	74
   252  00F910  44                 	db	68
   253  00F911  42                 	db	66
   254  00F912  42                 	db	66
   255  00F913  4A                 	db	74
   256  00F914  34                 	db	52
   257  00F915  0E                 	db	14
   258  00F916  08                 	db	8
   259  00F917  08                 	db	8
   260  00F918  7E                 	db	126
   261  00F919  4E                 	db	78
   262  00F91A  4A                 	db	74
   263  00F91B  4A                 	db	74
   264  00F91C  32                 	db	50
   265  00F91D  3C                 	db	60
   266  00F91E  4A                 	db	74
   267  00F91F  4A                 	db	74
   268  00F920  32                 	db	50
   269  00F921  02                 	db	2
   270  00F922  72                 	db	114
   271  00F923  1A                 	db	26
   272  00F924  0E                 	db	14
   273  00F925  34                 	db	52
   274  00F926  4A                 	db	74
   275  00F927  4A                 	db	74
   276  00F928  34                 	db	52
   277  00F929  44                 	db	68
   278  00F92A  4A                 	db	74
   279  00F92B  4A                 	db	74
   280  00F92C  3C                 	db	60
   281  00F92D  00                 	db	0
   282  00F92E  00                 	db	0
   283  00F92F  28                 	db	40
   284  00F930  00                 	db	0
   285  00F931  00                 	db	0
   286  00F932  60                 	db	96
   287  00F933  28                 	db	40
   288  00F934  00                 	db	0
   289  00F935  00                 	db	0
   290  00F936  18                 	db	24
   291  00F937  24                 	db	36
   292  00F938  42                 	db	66
   293  00F939  28                 	db	40
   294  00F93A  28                 	db	40
   295  00F93B  28                 	db	40
   296  00F93C  28                 	db	40
   297  00F93D  42                 	db	66
   298  00F93E  24                 	db	36
   299  00F93F  18                 	db	24
   300  00F940  00                 	db	0
   301  00F941  00                 	db	0
   302  00F942  02                 	db	2
   303  00F943  2A                 	db	42
   304  00F944  04                 	db	4
   305  00F945  00                 	db	0
   306  00F946  3E                 	db	62
   307  00F947  22                 	db	34
   308  00F948  2E                 	db	46
   309  00F949  7C                 	db	124
   310  00F94A  0A                 	db	10
   311  00F94B  0A                 	db	10
   312  00F94C  7C                 	db	124
   313  00F94D  7E                 	db	126
   314  00F94E  4A                 	db	74
   315  00F94F  4A                 	db	74
   316  00F950  34                 	db	52
   317  00F951  3C                 	db	60
   318  00F952  42                 	db	66
   319  00F953  42                 	db	66
   320  00F954  42                 	db	66
   321  00F955  7E                 	db	126
   322  00F956  42                 	db	66
   323  00F957  42                 	db	66
   324  00F958  3C                 	db	60
   325  00F959  7E                 	db	126
   326  00F95A  4A                 	db	74
   327  00F95B  4A                 	db	74
   328  00F95C  42                 	db	66
   329  00F95D  7E                 	db	126
   330  00F95E  0A                 	db	10
   331  00F95F  0A                 	db	10
   332  00F960  02                 	db	2
   333  00F961  3C                 	db	60
   334  00F962  42                 	db	66
   335  00F963  4A                 	db	74
   336  00F964  3A                 	db	58
   337  00F965  7E                 	db	126
   338  00F966  08                 	db	8
   339  00F967  08                 	db	8
   340  00F968  7E                 	db	126
   341  00F969  00                 	db	0
   342  00F96A  42                 	db	66
   343  00F96B  7E                 	db	126
   344  00F96C  42                 	db	66
   345  00F96D  20                 	db	32
   346  00F96E  40                 	db	64
   347  00F96F  40                 	db	64
   348  00F970  3E                 	db	62
   349  00F971  7E                 	db	126
   350  00F972  08                 	db	8
   351  00F973  08                 	db	8
   352  00F974  76                 	db	118
   353  00F975  7E                 	db	126
   354  00F976  40                 	db	64
   355  00F977  40                 	db	64
   356  00F978  40                 	db	64
   357  00F979  7E                 	db	126
   358  00F97A  0C                 	db	12
   359  00F97B  0C                 	db	12
   360  00F97C  7E                 	db	126
   361  00F97D  7E                 	db	126
   362  00F97E  04                 	db	4
   363  00F97F  08                 	db	8
   364  00F980  7E                 	db	126
   365  00F981  3C                 	db	60
   366  00F982  42                 	db	66
   367  00F983  42                 	db	66
   368  00F984  3C                 	db	60
   369  00F985  7E                 	db	126
   370  00F986  0A                 	db	10
   371  00F987  0A                 	db	10
   372  00F988  04                 	db	4
   373  00F989  1C                 	db	28
   374  00F98A  22                 	db	34
   375  00F98B  22                 	db	34
   376  00F98C  5C                 	db	92
   377  00F98D  7E                 	db	126
   378  00F98E  0A                 	db	10
   379  00F98F  0A                 	db	10
   380  00F990  74                 	db	116
   381  00F991  4E                 	db	78
   382  00F992  4A                 	db	74
   383  00F993  4A                 	db	74
   384  00F994  3A                 	db	58
   385  00F995  00                 	db	0
   386  00F996  02                 	db	2
   387  00F997  7E                 	db	126
   388  00F998  02                 	db	2
   389  00F999  7E                 	db	126
   390  00F99A  40                 	db	64
   391  00F99B  40                 	db	64
   392  00F99C  7E                 	db	126
   393  00F99D  3E                 	db	62
   394  00F99E  40                 	db	64
   395  00F99F  40                 	db	64
   396  00F9A0  3E                 	db	62
   397  00F9A1  7E                 	db	126
   398  00F9A2  20                 	db	32
   399  00F9A3  20                 	db	32
   400  00F9A4  7E                 	db	126
   401  00F9A5  76                 	db	118
   402  00F9A6  08                 	db	8
   403  00F9A7  08                 	db	8
   404  00F9A8  76                 	db	118
   405  00F9A9  06                 	db	6
   406  00F9AA  48                 	db	72
   407  00F9AB  38                 	db	56
   408  00F9AC  06                 	db	6
   409  00F9AD  62                 	db	98
   410  00F9AE  52                 	db	82
   411  00F9AF  4A                 	db	74
   412  00F9B0  46                 	db	70
   413  00F9B1  00                 	db	0
   414  00F9B2  7E                 	db	126
   415  00F9B3  42                 	db	66
   416  00F9B4  00                 	db	0
   417  00F9B5  00                 	db	0
   418  00F9B6  06                 	db	6
   419  00F9B7  08                 	db	8
   420  00F9B8  30                 	db	48
   421  00F9B9  00                 	db	0
   422  00F9BA  42                 	db	66
   423  00F9BB  7E                 	db	126
   424  00F9BC  00                 	db	0
   425  00F9BD  00                 	db	0
   426  00F9BE  04                 	db	4
   427  00F9BF  02                 	db	2
   428  00F9C0  04                 	db	4
   429  00F9C1  40                 	db	64
   430  00F9C2  40                 	db	64
   431  00F9C3  40                 	db	64
   432  00F9C4  40                 	db	64
   433  00F9C5  00                 	db	0
   434  00F9C6  02                 	db	2
   435  00F9C7  06                 	db	6
   436  00F9C8  00                 	db	0
   437  00F9C9  00                 	db	0
   438  00F9CA  30                 	db	48
   439  00F9CB  28                 	db	40
   440  00F9CC  38                 	db	56
   441  00F9CD  00                 	db	0
   442  00F9CE  3E                 	db	62
   443  00F9CF  28                 	db	40
   444  00F9D0  10                 	db	16
   445  00F9D1  00                 	db	0
   446  00F9D2  10                 	db	16
   447  00F9D3  28                 	db	40
   448  00F9D4  28                 	db	40
   449  00F9D5  00                 	db	0
   450  00F9D6  10                 	db	16
   451  00F9D7  28                 	db	40
   452  00F9D8  3E                 	db	62
   453  00F9D9  00                 	db	0
   454  00F9DA  18                 	db	24
   455  00F9DB  38                 	db	56
   456  00F9DC  28                 	db	40
   457  00F9DD  00                 	db	0
   458  00F9DE  08                 	db	8
   459  00F9DF  3C                 	db	60
   460  00F9E0  0A                 	db	10
   461  00F9E1  00                 	db	0
   462  00F9E2  58                 	db	88
   463  00F9E3  48                 	db	72
   464  00F9E4  78                 	db	120
   465  00F9E5  00                 	db	0
   466  00F9E6  3E                 	db	62
   467  00F9E7  08                 	db	8
   468  00F9E8  30                 	db	48
   469  00F9E9  00                 	db	0
   470  00F9EA  00                 	db	0
   471  00F9EB  3A                 	db	58
   472  00F9EC  00                 	db	0
   473  00F9ED  00                 	db	0
   474  00F9EE  40                 	db	64
   475  00F9EF  7A                 	db	122
   476  00F9F0  00                 	db	0
   477  00F9F1  00                 	db	0
   478  00F9F2  3E                 	db	62
   479  00F9F3  10                 	db	16
   480  00F9F4  28                 	db	40
   481  00F9F5  00                 	db	0
   482  00F9F6  00                 	db	0
   483  00F9F7  3E                 	db	62
   484  00F9F8  00                 	db	0
   485  00F9F9  00                 	db	0
   486  00F9FA  38                 	db	56
   487  00F9FB  18                 	db	24
   488  00F9FC  38                 	db	56
   489  00F9FD  00                 	db	0
   490  00F9FE  38                 	db	56
   491  00F9FF  08                 	db	8
   492  00FA00  30                 	db	48
   493  00FA01  00                 	db	0
   494  00FA02  10                 	db	16
   495  00FA03  28                 	db	40
   496  00FA04  10                 	db	16
   497  00FA05  00                 	db	0
   498  00FA06  78                 	db	120
   499  00FA07  28                 	db	40
   500  00FA08  10                 	db	16
   501  00FA09  00                 	db	0
   502  00FA0A  10                 	db	16
   503  00FA0B  28                 	db	40
   504  00FA0C  78                 	db	120
   505  00FA0D  00                 	db	0
   506  00FA0E  38                 	db	56
   507  00FA0F  08                 	db	8
   508  00FA10  00                 	db	0
   509  00FA11  00                 	db	0
   510  00FA12  20                 	db	32
   511  00FA13  38                 	db	56
   512  00FA14  08                 	db	8
   513  00FA15  00                 	db	0
   514  00FA16  08                 	db	8
   515  00FA17  3C                 	db	60
   516  00FA18  28                 	db	40
   517  00FA19  00                 	db	0
   518  00FA1A  38                 	db	56
   519  00FA1B  20                 	db	32
   520  00FA1C  38                 	db	56
   521  00FA1D  00                 	db	0
   522  00FA1E  18                 	db	24
   523  00FA1F  20                 	db	32
   524  00FA20  18                 	db	24
   525  00FA21  00                 	db	0
   526  00FA22  38                 	db	56
   527  00FA23  30                 	db	48
   528  00FA24  38                 	db	56
   529  00FA25  00                 	db	0
   530  00FA26  28                 	db	40
   531  00FA27  10                 	db	16
   532  00FA28  28                 	db	40
   533  00FA29  00                 	db	0
   534  00FA2A  58                 	db	88
   535  00FA2B  20                 	db	32
   536  00FA2C  18                 	db	24
   537  00FA2D  00                 	db	0
   538  00FA2E  08                 	db	8
   539  00FA2F  38                 	db	56
   540  00FA30  20                 	db	32
   541  00FA31  00                 	db	0
   542  00FA32  08                 	db	8
   543  00FA33  3E                 	db	62
   544  00FA34  22                 	db	34
   545  00FA35  00                 	db	0
   546  00FA36  00                 	db	0
   547  00FA37  3E                 	db	62
   548  00FA38  00                 	db	0
   549  00FA39  00                 	db	0
   550  00FA3A  22                 	db	34
   551  00FA3B  3E                 	db	62
   552  00FA3C  08                 	db	8
   553  00FA3D  04                 	db	4
   554  00FA3E  02                 	db	2
   555  00FA3F  04                 	db	4
   556  00FA40  02                 	db	2
   557  00FA41                     __end_of_ascii_table4x6:
   558                           	opt callstack 0
   559  00FA41                     _ascii_table5x7:
   560                           	opt callstack 0
   561  00FA41  00                 	db	0
   562  00FA42  00                 	db	0
   563  00FA43  00                 	db	0
   564  00FA44  00                 	db	0
   565  00FA45  00                 	db	0
   566  00FA46  00                 	db	0
   567  00FA47  00                 	db	0
   568  00FA48  5F                 	db	95
   569  00FA49  00                 	db	0
   570  00FA4A  00                 	db	0
   571  00FA4B  00                 	db	0
   572  00FA4C  07                 	db	7
   573  00FA4D  00                 	db	0
   574  00FA4E  07                 	db	7
   575  00FA4F  00                 	db	0
   576  00FA50  14                 	db	20
   577  00FA51  7F                 	db	127
   578  00FA52  14                 	db	20
   579  00FA53  7F                 	db	127
   580  00FA54  14                 	db	20
   581  00FA55  24                 	db	36
   582  00FA56  2A                 	db	42
   583  00FA57  7F                 	db	127
   584  00FA58  2A                 	db	42
   585  00FA59  12                 	db	18
   586  00FA5A  23                 	db	35
   587  00FA5B  13                 	db	19
   588  00FA5C  08                 	db	8
   589  00FA5D  64                 	db	100
   590  00FA5E  62                 	db	98
   591  00FA5F  36                 	db	54
   592  00FA60  49                 	db	73
   593  00FA61  55                 	db	85
   594  00FA62  22                 	db	34
   595  00FA63  50                 	db	80
   596  00FA64  00                 	db	0
   597  00FA65  05                 	db	5
   598  00FA66  03                 	db	3
   599  00FA67  00                 	db	0
   600  00FA68  00                 	db	0
   601  00FA69  00                 	db	0
   602  00FA6A  1C                 	db	28
   603  00FA6B  22                 	db	34
   604  00FA6C  41                 	db	65
   605  00FA6D  00                 	db	0
   606  00FA6E  00                 	db	0
   607  00FA6F  41                 	db	65
   608  00FA70  22                 	db	34
   609  00FA71  1C                 	db	28
   610  00FA72  00                 	db	0
   611  00FA73  08                 	db	8
   612  00FA74  2A                 	db	42
   613  00FA75  1C                 	db	28
   614  00FA76  2A                 	db	42
   615  00FA77  08                 	db	8
   616  00FA78  08                 	db	8
   617  00FA79  08                 	db	8
   618  00FA7A  3E                 	db	62
   619  00FA7B  08                 	db	8
   620  00FA7C  08                 	db	8
   621  00FA7D  00                 	db	0
   622  00FA7E  50                 	db	80
   623  00FA7F  30                 	db	48
   624  00FA80  00                 	db	0
   625  00FA81  00                 	db	0
   626  00FA82  08                 	db	8
   627  00FA83  08                 	db	8
   628  00FA84  08                 	db	8
   629  00FA85  08                 	db	8
   630  00FA86  08                 	db	8
   631  00FA87  00                 	db	0
   632  00FA88  30                 	db	48
   633  00FA89  30                 	db	48
   634  00FA8A  00                 	db	0
   635  00FA8B  00                 	db	0
   636  00FA8C  20                 	db	32
   637  00FA8D  10                 	db	16
   638  00FA8E  08                 	db	8
   639  00FA8F  04                 	db	4
   640  00FA90  02                 	db	2
   641  00FA91  3E                 	db	62
   642  00FA92  51                 	db	81
   643  00FA93  49                 	db	73
   644  00FA94  45                 	db	69
   645  00FA95  3E                 	db	62
   646  00FA96  00                 	db	0
   647  00FA97  42                 	db	66
   648  00FA98  7F                 	db	127
   649  00FA99  40                 	db	64
   650  00FA9A  00                 	db	0
   651  00FA9B  42                 	db	66
   652  00FA9C  61                 	db	97
   653  00FA9D  51                 	db	81
   654  00FA9E  49                 	db	73
   655  00FA9F  46                 	db	70
   656  00FAA0  21                 	db	33
   657  00FAA1  41                 	db	65
   658  00FAA2  45                 	db	69
   659  00FAA3  4B                 	db	75
   660  00FAA4  31                 	db	49
   661  00FAA5  18                 	db	24
   662  00FAA6  14                 	db	20
   663  00FAA7  12                 	db	18
   664  00FAA8  7F                 	db	127
   665  00FAA9  10                 	db	16
   666  00FAAA  27                 	db	39
   667  00FAAB  45                 	db	69
   668  00FAAC  45                 	db	69
   669  00FAAD  45                 	db	69
   670  00FAAE  39                 	db	57
   671  00FAAF  3C                 	db	60
   672  00FAB0  4A                 	db	74
   673  00FAB1  49                 	db	73
   674  00FAB2  49                 	db	73
   675  00FAB3  30                 	db	48
   676  00FAB4  01                 	db	1
   677  00FAB5  71                 	db	113
   678  00FAB6  09                 	db	9
   679  00FAB7  05                 	db	5
   680  00FAB8  03                 	db	3
   681  00FAB9  36                 	db	54
   682  00FABA  49                 	db	73
   683  00FABB  49                 	db	73
   684  00FABC  49                 	db	73
   685  00FABD  36                 	db	54
   686  00FABE  06                 	db	6
   687  00FABF  49                 	db	73
   688  00FAC0  49                 	db	73
   689  00FAC1  29                 	db	41
   690  00FAC2  1E                 	db	30
   691  00FAC3  00                 	db	0
   692  00FAC4  36                 	db	54
   693  00FAC5  36                 	db	54
   694  00FAC6  00                 	db	0
   695  00FAC7  00                 	db	0
   696  00FAC8  00                 	db	0
   697  00FAC9  56                 	db	86
   698  00FACA  36                 	db	54
   699  00FACB  00                 	db	0
   700  00FACC  00                 	db	0
   701  00FACD  00                 	db	0
   702  00FACE  08                 	db	8
   703  00FACF  14                 	db	20
   704  00FAD0  22                 	db	34
   705  00FAD1  41                 	db	65
   706  00FAD2  14                 	db	20
   707  00FAD3  14                 	db	20
   708  00FAD4  14                 	db	20
   709  00FAD5  14                 	db	20
   710  00FAD6  14                 	db	20
   711  00FAD7  41                 	db	65
   712  00FAD8  22                 	db	34
   713  00FAD9  14                 	db	20
   714  00FADA  08                 	db	8
   715  00FADB  00                 	db	0
   716  00FADC  02                 	db	2
   717  00FADD  01                 	db	1
   718  00FADE  51                 	db	81
   719  00FADF  09                 	db	9
   720  00FAE0  06                 	db	6
   721  00FAE1  32                 	db	50
   722  00FAE2  49                 	db	73
   723  00FAE3  79                 	db	121
   724  00FAE4  41                 	db	65
   725  00FAE5  3E                 	db	62
   726  00FAE6  7E                 	db	126
   727  00FAE7  11                 	db	17
   728  00FAE8  11                 	db	17
   729  00FAE9  11                 	db	17
   730  00FAEA  7E                 	db	126
   731  00FAEB  7F                 	db	127
   732  00FAEC  49                 	db	73
   733  00FAED  49                 	db	73
   734  00FAEE  49                 	db	73
   735  00FAEF  36                 	db	54
   736  00FAF0  3E                 	db	62
   737  00FAF1  41                 	db	65
   738  00FAF2  41                 	db	65
   739  00FAF3  41                 	db	65
   740  00FAF4  22                 	db	34
   741  00FAF5  7F                 	db	127
   742  00FAF6  41                 	db	65
   743  00FAF7  41                 	db	65
   744  00FAF8  22                 	db	34
   745  00FAF9  1C                 	db	28
   746  00FAFA  7F                 	db	127
   747  00FAFB  49                 	db	73
   748  00FAFC  49                 	db	73
   749  00FAFD  49                 	db	73
   750  00FAFE  41                 	db	65
   751  00FAFF  7F                 	db	127
   752  00FB00  09                 	db	9
   753  00FB01  09                 	db	9
   754  00FB02  01                 	db	1
   755  00FB03  01                 	db	1
   756  00FB04  3E                 	db	62
   757  00FB05  41                 	db	65
   758  00FB06  41                 	db	65
   759  00FB07  51                 	db	81
   760  00FB08  32                 	db	50
   761  00FB09  7F                 	db	127
   762  00FB0A  08                 	db	8
   763  00FB0B  08                 	db	8
   764  00FB0C  08                 	db	8
   765  00FB0D  7F                 	db	127
   766  00FB0E  00                 	db	0
   767  00FB0F  41                 	db	65
   768  00FB10  7F                 	db	127
   769  00FB11  41                 	db	65
   770  00FB12  00                 	db	0
   771  00FB13  20                 	db	32
   772  00FB14  40                 	db	64
   773  00FB15  41                 	db	65
   774  00FB16  3F                 	db	63
   775  00FB17  01                 	db	1
   776  00FB18  7F                 	db	127
   777  00FB19  08                 	db	8
   778  00FB1A  14                 	db	20
   779  00FB1B  22                 	db	34
   780  00FB1C  41                 	db	65
   781  00FB1D  7F                 	db	127
   782  00FB1E  40                 	db	64
   783  00FB1F  40                 	db	64
   784  00FB20  40                 	db	64
   785  00FB21  40                 	db	64
   786  00FB22  7F                 	db	127
   787  00FB23  02                 	db	2
   788  00FB24  04                 	db	4
   789  00FB25  02                 	db	2
   790  00FB26  7F                 	db	127
   791  00FB27  7F                 	db	127
   792  00FB28  04                 	db	4
   793  00FB29  08                 	db	8
   794  00FB2A  10                 	db	16
   795  00FB2B  7F                 	db	127
   796  00FB2C  3E                 	db	62
   797  00FB2D  41                 	db	65
   798  00FB2E  41                 	db	65
   799  00FB2F  41                 	db	65
   800  00FB30  3E                 	db	62
   801  00FB31  7F                 	db	127
   802  00FB32  09                 	db	9
   803  00FB33  09                 	db	9
   804  00FB34  09                 	db	9
   805  00FB35  06                 	db	6
   806  00FB36  3E                 	db	62
   807  00FB37  41                 	db	65
   808  00FB38  51                 	db	81
   809  00FB39  21                 	db	33
   810  00FB3A  5E                 	db	94
   811  00FB3B  7F                 	db	127
   812  00FB3C  09                 	db	9
   813  00FB3D  19                 	db	25
   814  00FB3E  29                 	db	41
   815  00FB3F  46                 	db	70
   816  00FB40  46                 	db	70
   817  00FB41  49                 	db	73
   818  00FB42  49                 	db	73
   819  00FB43  49                 	db	73
   820  00FB44  31                 	db	49
   821  00FB45  01                 	db	1
   822  00FB46  01                 	db	1
   823  00FB47  7F                 	db	127
   824  00FB48  01                 	db	1
   825  00FB49  01                 	db	1
   826  00FB4A  3F                 	db	63
   827  00FB4B  40                 	db	64
   828  00FB4C  40                 	db	64
   829  00FB4D  40                 	db	64
   830  00FB4E  3F                 	db	63
   831  00FB4F  1F                 	db	31
   832  00FB50  20                 	db	32
   833  00FB51  40                 	db	64
   834  00FB52  20                 	db	32
   835  00FB53  1F                 	db	31
   836  00FB54  7F                 	db	127
   837  00FB55  20                 	db	32
   838  00FB56  18                 	db	24
   839  00FB57  20                 	db	32
   840  00FB58  7F                 	db	127
   841  00FB59  63                 	db	99
   842  00FB5A  14                 	db	20
   843  00FB5B  08                 	db	8
   844  00FB5C  14                 	db	20
   845  00FB5D  63                 	db	99
   846  00FB5E  03                 	db	3
   847  00FB5F  04                 	db	4
   848  00FB60  78                 	db	120
   849  00FB61  04                 	db	4
   850  00FB62  03                 	db	3
   851  00FB63  61                 	db	97
   852  00FB64  51                 	db	81
   853  00FB65  49                 	db	73
   854  00FB66  45                 	db	69
   855  00FB67  43                 	db	67
   856  00FB68  00                 	db	0
   857  00FB69  00                 	db	0
   858  00FB6A  7F                 	db	127
   859  00FB6B  41                 	db	65
   860  00FB6C  41                 	db	65
   861  00FB6D  02                 	db	2
   862  00FB6E  04                 	db	4
   863  00FB6F  08                 	db	8
   864  00FB70  10                 	db	16
   865  00FB71  20                 	db	32
   866  00FB72  41                 	db	65
   867  00FB73  41                 	db	65
   868  00FB74  7F                 	db	127
   869  00FB75  00                 	db	0
   870  00FB76  00                 	db	0
   871  00FB77  04                 	db	4
   872  00FB78  02                 	db	2
   873  00FB79  01                 	db	1
   874  00FB7A  02                 	db	2
   875  00FB7B  04                 	db	4
   876  00FB7C  40                 	db	64
   877  00FB7D  40                 	db	64
   878  00FB7E  40                 	db	64
   879  00FB7F  40                 	db	64
   880  00FB80  40                 	db	64
   881  00FB81  00                 	db	0
   882  00FB82  01                 	db	1
   883  00FB83  02                 	db	2
   884  00FB84  04                 	db	4
   885  00FB85  00                 	db	0
   886  00FB86  20                 	db	32
   887  00FB87  54                 	db	84
   888  00FB88  54                 	db	84
   889  00FB89  54                 	db	84
   890  00FB8A  78                 	db	120
   891  00FB8B  7F                 	db	127
   892  00FB8C  48                 	db	72
   893  00FB8D  44                 	db	68
   894  00FB8E  44                 	db	68
   895  00FB8F  38                 	db	56
   896  00FB90  38                 	db	56
   897  00FB91  44                 	db	68
   898  00FB92  44                 	db	68
   899  00FB93  44                 	db	68
   900  00FB94  20                 	db	32
   901  00FB95  38                 	db	56
   902  00FB96  44                 	db	68
   903  00FB97  44                 	db	68
   904  00FB98  48                 	db	72
   905  00FB99  7F                 	db	127
   906  00FB9A  38                 	db	56
   907  00FB9B  54                 	db	84
   908  00FB9C  54                 	db	84
   909  00FB9D  54                 	db	84
   910  00FB9E  18                 	db	24
   911  00FB9F  08                 	db	8
   912  00FBA0  7E                 	db	126
   913  00FBA1  09                 	db	9
   914  00FBA2  01                 	db	1
   915  00FBA3  02                 	db	2
   916  00FBA4  08                 	db	8
   917  00FBA5  14                 	db	20
   918  00FBA6  54                 	db	84
   919  00FBA7  54                 	db	84
   920  00FBA8  3C                 	db	60
   921  00FBA9  7F                 	db	127
   922  00FBAA  08                 	db	8
   923  00FBAB  04                 	db	4
   924  00FBAC  04                 	db	4
   925  00FBAD  78                 	db	120
   926  00FBAE  40                 	db	64
   927  00FBAF  44                 	db	68
   928  00FBB0  7D                 	db	125
   929  00FBB1  40                 	db	64
   930  00FBB2  00                 	db	0
   931  00FBB3  20                 	db	32
   932  00FBB4  40                 	db	64
   933  00FBB5  44                 	db	68
   934  00FBB6  3D                 	db	61
   935  00FBB7  00                 	db	0
   936  00FBB8  00                 	db	0
   937  00FBB9  7F                 	db	127
   938  00FBBA  10                 	db	16
   939  00FBBB  28                 	db	40
   940  00FBBC  44                 	db	68
   941  00FBBD  00                 	db	0
   942  00FBBE  41                 	db	65
   943  00FBBF  7F                 	db	127
   944  00FBC0  40                 	db	64
   945  00FBC1  00                 	db	0
   946  00FBC2  7C                 	db	124
   947  00FBC3  04                 	db	4
   948  00FBC4  18                 	db	24
   949  00FBC5  04                 	db	4
   950  00FBC6  78                 	db	120
   951  00FBC7  7C                 	db	124
   952  00FBC8  08                 	db	8
   953  00FBC9  04                 	db	4
   954  00FBCA  04                 	db	4
   955  00FBCB  78                 	db	120
   956  00FBCC  38                 	db	56
   957  00FBCD  44                 	db	68
   958  00FBCE  44                 	db	68
   959  00FBCF  44                 	db	68
   960  00FBD0  38                 	db	56
   961  00FBD1  7C                 	db	124
   962  00FBD2  14                 	db	20
   963  00FBD3  14                 	db	20
   964  00FBD4  14                 	db	20
   965  00FBD5  08                 	db	8
   966  00FBD6  08                 	db	8
   967  00FBD7  14                 	db	20
   968  00FBD8  14                 	db	20
   969  00FBD9  18                 	db	24
   970  00FBDA  7C                 	db	124
   971  00FBDB  7C                 	db	124
   972  00FBDC  08                 	db	8
   973  00FBDD  04                 	db	4
   974  00FBDE  04                 	db	4
   975  00FBDF  08                 	db	8
   976  00FBE0  48                 	db	72
   977  00FBE1  54                 	db	84
   978  00FBE2  54                 	db	84
   979  00FBE3  54                 	db	84
   980  00FBE4  20                 	db	32
   981  00FBE5  04                 	db	4
   982  00FBE6  3F                 	db	63
   983  00FBE7  44                 	db	68
   984  00FBE8  40                 	db	64
   985  00FBE9  20                 	db	32
   986  00FBEA  3C                 	db	60
   987  00FBEB  40                 	db	64
   988  00FBEC  40                 	db	64
   989  00FBED  20                 	db	32
   990  00FBEE  7C                 	db	124
   991  00FBEF  1C                 	db	28
   992  00FBF0  20                 	db	32
   993  00FBF1  40                 	db	64
   994  00FBF2  20                 	db	32
   995  00FBF3  1C                 	db	28
   996  00FBF4  3C                 	db	60
   997  00FBF5  40                 	db	64
   998  00FBF6  30                 	db	48
   999  00FBF7  40                 	db	64
  1000  00FBF8  3C                 	db	60
  1001  00FBF9  44                 	db	68
  1002  00FBFA  28                 	db	40
  1003  00FBFB  10                 	db	16
  1004  00FBFC  28                 	db	40
  1005  00FBFD  44                 	db	68
  1006  00FBFE  0C                 	db	12
  1007  00FBFF  50                 	db	80
  1008  00FC00  50                 	db	80
  1009  00FC01  50                 	db	80
  1010  00FC02  3C                 	db	60
  1011  00FC03  44                 	db	68
  1012  00FC04  64                 	db	100
  1013  00FC05  54                 	db	84
  1014  00FC06  4C                 	db	76
  1015  00FC07  44                 	db	68
  1016  00FC08  00                 	db	0
  1017  00FC09  08                 	db	8
  1018  00FC0A  36                 	db	54
  1019  00FC0B  41                 	db	65
  1020  00FC0C  00                 	db	0
  1021  00FC0D  00                 	db	0
  1022  00FC0E  00                 	db	0
  1023  00FC0F  7F                 	db	127
  1024  00FC10  00                 	db	0
  1025  00FC11  00                 	db	0
  1026  00FC12  00                 	db	0
  1027  00FC13  41                 	db	65
  1028  00FC14  36                 	db	54
  1029  00FC15  08                 	db	8
  1030  00FC16  00                 	db	0
  1031  00FC17  08                 	db	8
  1032  00FC18  08                 	db	8
  1033  00FC19  2A                 	db	42
  1034  00FC1A  1C                 	db	28
  1035  00FC1B  08                 	db	8
  1036  00FC1C  08                 	db	8
  1037  00FC1D  1C                 	db	28
  1038  00FC1E  2A                 	db	42
  1039  00FC1F  08                 	db	8
  1040  00FC20  08                 	db	8
  1041  00FC21  38                 	db	56
  1042  00FC22  44                 	db	68
  1043  00FC23  4C                 	db	76
  1044  00FC24  44                 	db	68
  1045  00FC25  20                 	db	32
  1046  00FC26                     __end_of_ascii_table5x7:
  1047                           	opt callstack 0
  1048  00FC26                     _ascii_table9x16:
  1049                           	opt callstack 0
  1050  00FC26  FC                 	db	252
  1051  00FC27  FE                 	db	254
  1052  00FC28  FF                 	db	255
  1053  00FC29  03                 	db	3
  1054  00FC2A  03                 	db	3
  1055  00FC2B  03                 	db	3
  1056  00FC2C  FF                 	db	255
  1057  00FC2D  FE                 	db	254
  1058  00FC2E  FC                 	db	252
  1059  00FC2F  3F                 	db	63
  1060  00FC30  7F                 	db	127
  1061  00FC31  FF                 	db	255
  1062  00FC32  C0                 	db	192
  1063  00FC33  C0                 	db	192
  1064  00FC34  C0                 	db	192
  1065  00FC35  FF                 	db	255
  1066  00FC36  7F                 	db	127
  1067  00FC37  3F                 	db	63
  1068  00FC38  00                 	db	0
  1069  00FC39  0C                 	db	12
  1070  00FC3A  0E                 	db	14
  1071  00FC3B  FF                 	db	255
  1072  00FC3C  FF                 	db	255
  1073  00FC3D  FF                 	db	255
  1074  00FC3E  00                 	db	0
  1075  00FC3F  00                 	db	0
  1076  00FC40  00                 	db	0
  1077  00FC41  00                 	db	0
  1078  00FC42  C0                 	db	192
  1079  00FC43  C0                 	db	192
  1080  00FC44  FF                 	db	255
  1081  00FC45  FF                 	db	255
  1082  00FC46  FF                 	db	255
  1083  00FC47  C0                 	db	192
  1084  00FC48  C0                 	db	192
  1085  00FC49  00                 	db	0
  1086  00FC4A  0C                 	db	12
  1087  00FC4B  0E                 	db	14
  1088  00FC4C  0F                 	db	15
  1089  00FC4D  03                 	db	3
  1090  00FC4E  03                 	db	3
  1091  00FC4F  83                 	db	131
  1092  00FC50  FF                 	db	255
  1093  00FC51  FE                 	db	254
  1094  00FC52  7C                 	db	124
  1095  00FC53  F0                 	db	240
  1096  00FC54  F8                 	db	248
  1097  00FC55  FC                 	db	252
  1098  00FC56  CE                 	db	206
  1099  00FC57  C7                 	db	199
  1100  00FC58  C3                 	db	195
  1101  00FC59  E1                 	db	225
  1102  00FC5A  E0                 	db	224
  1103  00FC5B  E0                 	db	224
  1104  00FC5C  0C                 	db	12
  1105  00FC5D  0E                 	db	14
  1106  00FC5E  0F                 	db	15
  1107  00FC5F  C3                 	db	195
  1108  00FC60  C3                 	db	195
  1109  00FC61  C3                 	db	195
  1110  00FC62  FF                 	db	255
  1111  00FC63  7E                 	db	126
  1112  00FC64  3C                 	db	60
  1113  00FC65  60                 	db	96
  1114  00FC66  60                 	db	96
  1115  00FC67  E0                 	db	224
  1116  00FC68  C0                 	db	192
  1117  00FC69  C0                 	db	192
  1118  00FC6A  C0                 	db	192
  1119  00FC6B  FF                 	db	255
  1120  00FC6C  7F                 	db	127
  1121  00FC6D  3E                 	db	62
  1122  00FC6E  00                 	db	0
  1123  00FC6F  80                 	db	128
  1124  00FC70  E0                 	db	224
  1125  00FC71  F8                 	db	248
  1126  00FC72  7E                 	db	126
  1127  00FC73  1F                 	db	31
  1128  00FC74  FF                 	db	255
  1129  00FC75  FF                 	db	255
  1130  00FC76  FF                 	db	255
  1131  00FC77  06                 	db	6
  1132  00FC78  07                 	db	7
  1133  00FC79  07                 	db	7
  1134  00FC7A  07                 	db	7
  1135  00FC7B  06                 	db	6
  1136  00FC7C  06                 	db	6
  1137  00FC7D  FF                 	db	255
  1138  00FC7E  FF                 	db	255
  1139  00FC7F  FF                 	db	255
  1140  00FC80  7F                 	db	127
  1141  00FC81  7F                 	db	127
  1142  00FC82  7F                 	db	127
  1143  00FC83  63                 	db	99
  1144  00FC84  63                 	db	99
  1145  00FC85  63                 	db	99
  1146  00FC86  E7                 	db	231
  1147  00FC87  C7                 	db	199
  1148  00FC88  87                 	db	135
  1149  00FC89  30                 	db	48
  1150  00FC8A  70                 	db	112
  1151  00FC8B  F0                 	db	240
  1152  00FC8C  C0                 	db	192
  1153  00FC8D  C0                 	db	192
  1154  00FC8E  C0                 	db	192
  1155  00FC8F  FF                 	db	255
  1156  00FC90  7F                 	db	127
  1157  00FC91  3F                 	db	63
  1158  00FC92  FC                 	db	252
  1159  00FC93  FE                 	db	254
  1160  00FC94  FF                 	db	255
  1161  00FC95  C3                 	db	195
  1162  00FC96  C3                 	db	195
  1163  00FC97  C3                 	db	195
  1164  00FC98  CF                 	db	207
  1165  00FC99  8E                 	db	142
  1166  00FC9A  0C                 	db	12
  1167  00FC9B  3F                 	db	63
  1168  00FC9C  7F                 	db	127
  1169  00FC9D  FF                 	db	255
  1170  00FC9E  C0                 	db	192
  1171  00FC9F  C0                 	db	192
  1172  00FCA0  C0                 	db	192
  1173  00FCA1  FF                 	db	255
  1174  00FCA2  7F                 	db	127
  1175  00FCA3  3F                 	db	63
  1176  00FCA4  07                 	db	7
  1177  00FCA5  07                 	db	7
  1178  00FCA6  07                 	db	7
  1179  00FCA7  03                 	db	3
  1180  00FCA8  C3                 	db	195
  1181  00FCA9  F3                 	db	243
  1182  00FCAA  FF                 	db	255
  1183  00FCAB  3F                 	db	63
  1184  00FCAC  0F                 	db	15
  1185  00FCAD  00                 	db	0
  1186  00FCAE  F0                 	db	240
  1187  00FCAF  FC                 	db	252
  1188  00FCB0  FF                 	db	255
  1189  00FCB1  0F                 	db	15
  1190  00FCB2  03                 	db	3
  1191  00FCB3  00                 	db	0
  1192  00FCB4  00                 	db	0
  1193  00FCB5  00                 	db	0
  1194  00FCB6  3C                 	db	60
  1195  00FCB7  FE                 	db	254
  1196  00FCB8  FF                 	db	255
  1197  00FCB9  C3                 	db	195
  1198  00FCBA  C3                 	db	195
  1199  00FCBB  C3                 	db	195
  1200  00FCBC  FF                 	db	255
  1201  00FCBD  FE                 	db	254
  1202  00FCBE  3C                 	db	60
  1203  00FCBF  3F                 	db	63
  1204  00FCC0  7F                 	db	127
  1205  00FCC1  FF                 	db	255
  1206  00FCC2  C0                 	db	192
  1207  00FCC3  C0                 	db	192
  1208  00FCC4  C0                 	db	192
  1209  00FCC5  FF                 	db	255
  1210  00FCC6  7F                 	db	127
  1211  00FCC7  3F                 	db	63
  1212  00FCC8  FC                 	db	252
  1213  00FCC9  FE                 	db	254
  1214  00FCCA  FF                 	db	255
  1215  00FCCB  03                 	db	3
  1216  00FCCC  03                 	db	3
  1217  00FCCD  03                 	db	3
  1218  00FCCE  FF                 	db	255
  1219  00FCCF  FE                 	db	254
  1220  00FCD0  FC                 	db	252
  1221  00FCD1  30                 	db	48
  1222  00FCD2  71                 	db	113
  1223  00FCD3  F3                 	db	243
  1224  00FCD4  C3                 	db	195
  1225  00FCD5  C3                 	db	195
  1226  00FCD6  C3                 	db	195
  1227  00FCD7  FF                 	db	255
  1228  00FCD8  7F                 	db	127
  1229  00FCD9  3F                 	db	63
  1230  00FCDA  00                 	db	0
  1231  00FCDB  70                 	db	112
  1232  00FCDC  70                 	db	112
  1233  00FCDD  70                 	db	112
  1234  00FCDE  00                 	db	0
  1235  00FCDF  00                 	db	0
  1236  00FCE0  00                 	db	0
  1237  00FCE1  00                 	db	0
  1238  00FCE2  00                 	db	0
  1239  00FCE3  00                 	db	0
  1240  00FCE4  0E                 	db	14
  1241  00FCE5  0E                 	db	14
  1242  00FCE6  0E                 	db	14
  1243  00FCE7  00                 	db	0
  1244  00FCE8  00                 	db	0
  1245  00FCE9  00                 	db	0
  1246  00FCEA  00                 	db	0
  1247  00FCEB  00                 	db	0
  1248  00FCEC  00                 	db	0
  1249  00FCED  70                 	db	112
  1250  00FCEE  50                 	db	80
  1251  00FCEF  70                 	db	112
  1252  00FCF0  00                 	db	0
  1253  00FCF1  00                 	db	0
  1254  00FCF2  00                 	db	0
  1255  00FCF3  00                 	db	0
  1256  00FCF4  00                 	db	0
  1257  00FCF5  00                 	db	0
  1258  00FCF6  0E                 	db	14
  1259  00FCF7  0A                 	db	10
  1260  00FCF8  0E                 	db	14
  1261  00FCF9  00                 	db	0
  1262  00FCFA  00                 	db	0
  1263  00FCFB  00                 	db	0
  1264  00FCFC  00                 	db	0
  1265  00FCFD  00                 	db	0
  1266  00FCFE                     __end_of_ascii_table9x16:
  1267                           	opt callstack 0
  1268  00FCFE                     _LogoClk:
  1269                           	opt callstack 0
  1270  00FCFE  E0                 	db	224
  1271  00FCFF  F8                 	db	248
  1272  00FD00  FC                 	db	252
  1273  00FD01  FE                 	db	254
  1274  00FD02  FE                 	db	254
  1275  00FD03  7F                 	db	127
  1276  00FD04  3F                 	db	63
  1277  00FD05  1F                 	db	31
  1278  00FD06  1F                 	db	31
  1279  00FD07  3F                 	db	63
  1280  00FD08  3E                 	db	62
  1281  00FD09  1E                 	db	30
  1282  00FD0A  0C                 	db	12
  1283  00FD0B  00                 	db	0
  1284  00FD0C  80                 	db	128
  1285  00FD0D  C0                 	db	192
  1286  00FD0E  C0                 	db	192
  1287  00FD0F  E0                 	db	224
  1288  00FD10  E0                 	db	224
  1289  00FD11  E0                 	db	224
  1290  00FD12  E0                 	db	224
  1291  00FD13  E0                 	db	224
  1292  00FD14  E0                 	db	224
  1293  00FD15  C0                 	db	192
  1294  00FD16  80                 	db	128
  1295  00FD17  00                 	db	0
  1296  00FD18  00                 	db	0
  1297  00FD19  E0                 	db	224
  1298  00FD1A  E0                 	db	224
  1299  00FD1B  E0                 	db	224
  1300  00FD1C  E0                 	db	224
  1301  00FD1D  E0                 	db	224
  1302  00FD1E  C0                 	db	192
  1303  00FD1F  E0                 	db	224
  1304  00FD20  E0                 	db	224
  1305  00FD21  E0                 	db	224
  1306  00FD22  E0                 	db	224
  1307  00FD23  E0                 	db	224
  1308  00FD24  C0                 	db	192
  1309  00FD25  E0                 	db	224
  1310  00FD26  E0                 	db	224
  1311  00FD27  E0                 	db	224
  1312  00FD28  E0                 	db	224
  1313  00FD29  E0                 	db	224
  1314  00FD2A  C0                 	db	192
  1315  00FD2B  00                 	db	0
  1316  00FD2C  FE                 	db	254
  1317  00FD2D  FE                 	db	254
  1318  00FD2E  FE                 	db	254
  1319  00FD2F  FE                 	db	254
  1320  00FD30  FE                 	db	254
  1321  00FD31  FE                 	db	254
  1322  00FD32  00                 	db	0
  1323  00FD33  00                 	db	0
  1324  00FD34  00                 	db	0
  1325  00FD35  00                 	db	0
  1326  00FD36  00                 	db	0
  1327  00FD37  00                 	db	0
  1328  00FD38  E4                 	db	228
  1329  00FD39  EE                 	db	238
  1330  00FD3A  FF                 	db	255
  1331  00FD3B  EE                 	db	238
  1332  00FD3C  E4                 	db	228
  1333  00FD3D  00                 	db	0
  1334  00FD3E  E0                 	db	224
  1335  00FD3F  E0                 	db	224
  1336  00FD40  E0                 	db	224
  1337  00FD41  E0                 	db	224
  1338  00FD42  E0                 	db	224
  1339  00FD43  80                 	db	128
  1340  00FD44  C0                 	db	192
  1341  00FD45  E0                 	db	224
  1342  00FD46  E0                 	db	224
  1343  00FD47  E0                 	db	224
  1344  00FD48  C0                 	db	192
  1345  00FD49  00                 	db	0
  1346  00FD4A  FF                 	db	255
  1347  00FD4B  FF                 	db	255
  1348  00FD4C  FF                 	db	255
  1349  00FD4D  FF                 	db	255
  1350  00FD4E  FF                 	db	255
  1351  00FD4F  FF                 	db	255
  1352  00FD50  80                 	db	128
  1353  00FD51  C0                 	db	192
  1354  00FD52  E0                 	db	224
  1355  00FD53  E0                 	db	224
  1356  00FD54  E0                 	db	224
  1357  00FD55  E0                 	db	224
  1358  00FD56  60                 	db	96
  1359  00FD57  20                 	db	32
  1360  00FD58  0F                 	db	15
  1361  00FD59  3F                 	db	63
  1362  00FD5A  7F                 	db	127
  1363  00FD5B  7F                 	db	127
  1364  00FD5C  FF                 	db	255
  1365  00FD5D  FC                 	db	252
  1366  00FD5E  F8                 	db	248
  1367  00FD5F  F8                 	db	248
  1368  00FD60  F8                 	db	248
  1369  00FD61  F8                 	db	248
  1370  00FD62  FC                 	db	252
  1371  00FD63  70                 	db	112
  1372  00FD64  40                 	db	64
  1373  00FD65  0E                 	db	14
  1374  00FD66  3F                 	db	63
  1375  00FD67  7F                 	db	127
  1376  00FD68  FF                 	db	255
  1377  00FD69  FF                 	db	255
  1378  00FD6A  FB                 	db	251
  1379  00FD6B  F1                 	db	241
  1380  00FD6C  FB                 	db	251
  1381  00FD6D  FF                 	db	255
  1382  00FD6E  FF                 	db	255
  1383  00FD6F  7F                 	db	127
  1384  00FD70  3F                 	db	63
  1385  00FD71  0E                 	db	14
  1386  00FD72  00                 	db	0
  1387  00FD73  FF                 	db	255
  1388  00FD74  FF                 	db	255
  1389  00FD75  FF                 	db	255
  1390  00FD76  FF                 	db	255
  1391  00FD77  FF                 	db	255
  1392  00FD78  01                 	db	1
  1393  00FD79  03                 	db	3
  1394  00FD7A  FF                 	db	255
  1395  00FD7B  FF                 	db	255
  1396  00FD7C  FF                 	db	255
  1397  00FD7D  FF                 	db	255
  1398  00FD7E  FF                 	db	255
  1399  00FD7F  01                 	db	1
  1400  00FD80  03                 	db	3
  1401  00FD81  FF                 	db	255
  1402  00FD82  FF                 	db	255
  1403  00FD83  FF                 	db	255
  1404  00FD84  FF                 	db	255
  1405  00FD85  00                 	db	0
  1406  00FD86  FF                 	db	255
  1407  00FD87  FF                 	db	255
  1408  00FD88  FF                 	db	255
  1409  00FD89  FF                 	db	255
  1410  00FD8A  FF                 	db	255
  1411  00FD8B  FF                 	db	255
  1412  00FD8C  F8                 	db	248
  1413  00FD8D  F8                 	db	248
  1414  00FD8E  F8                 	db	248
  1415  00FD8F  F8                 	db	248
  1416  00FD90  F8                 	db	248
  1417  00FD91  00                 	db	0
  1418  00FD92  FF                 	db	255
  1419  00FD93  FF                 	db	255
  1420  00FD94  FF                 	db	255
  1421  00FD95  FF                 	db	255
  1422  00FD96  FF                 	db	255
  1423  00FD97  00                 	db	0
  1424  00FD98  FF                 	db	255
  1425  00FD99  FF                 	db	255
  1426  00FD9A  FF                 	db	255
  1427  00FD9B  FF                 	db	255
  1428  00FD9C  FF                 	db	255
  1429  00FD9D  07                 	db	7
  1430  00FD9E  03                 	db	3
  1431  00FD9F  FF                 	db	255
  1432  00FDA0  FF                 	db	255
  1433  00FDA1  FF                 	db	255
  1434  00FDA2  FF                 	db	255
  1435  00FDA3  00                 	db	0
  1436  00FDA4  FF                 	db	255
  1437  00FDA5  FF                 	db	255
  1438  00FDA6  FF                 	db	255
  1439  00FDA7  FF                 	db	255
  1440  00FDA8  FF                 	db	255
  1441  00FDA9  FF                 	db	255
  1442  00FDAA  3F                 	db	63
  1443  00FDAB  7F                 	db	127
  1444  00FDAC  FF                 	db	255
  1445  00FDAD  FF                 	db	255
  1446  00FDAE  F1                 	db	241
  1447  00FDAF  E0                 	db	224
  1448  00FDB0  C0                 	db	192
  1449  00FDB1  80                 	db	128
  1450  00FDB2                     __end_of_LogoClk:
  1451                           	opt callstack 0
  1452  00FDB2                     STR_5:
  1453  00FDB2  4F                 	db	79	;'O'
  1454  00FDB3  6B                 	db	107	;'k'
  1455  00FDB4  00                 	db	0
  1456  00FDB5                     STR_3:
  1457  00FDB5  42                 	db	66	;'B'
  1458  00FDB6  74                 	db	116	;'t'
  1459  00FDB7  00                 	db	0
  1460  00FDB8                     STR_1:
  1461  00FDB8  43                 	db	67	;'C'
  1462  00FDB9  78                 	db	120	;'x'
  1463  00FDBA  00                 	db	0
  1464  00FDBB                     STR_2:
  1465  00FDBB  53                 	db	83	;'S'
  1466  00FDBC  79                 	db	121	;'y'
  1467  00FDBD  00                 	db	0
  1468  0000                     
  1469                           ; #config settings
  1470  00FDBE  00                 	db	0	; dummy byte at the end
  1471  0000                     
  1472                           	psect	nvCOMRAM
  1473  000051                     __pnvCOMRAM:
  1474                           	opt callstack 0
  1475  000051                     _EUSART_ErrorHandler:
  1476                           	opt callstack 0
  1477  000051                     	ds	2
  1478  000053                     _EUSART_OverrunErrorHandler:
  1479                           	opt callstack 0
  1480  000053                     	ds	2
  1481  000055                     _EUSART_FramingErrorHandler:
  1482                           	opt callstack 0
  1483  000055                     	ds	2
  1484  000057                     _timer0ReloadVal:
  1485                           	opt callstack 0
  1486  000057                     	ds	2
  1487  0000                     _TRISEbits	set	3990
  1488  0000                     _LATEbits	set	3981
  1489  0000                     _PORTDbits	set	3971
  1490  0000                     _LATDbits	set	3980
  1491  0000                     _WPUB	set	3964
  1492  0000                     _ANSELH	set	3967
  1493  0000                     _ANSEL	set	3966
  1494  0000                     _TRISD	set	3989
  1495  0000                     _TRISC	set	3988
  1496  0000                     _TRISB	set	3987
  1497  0000                     _TRISA	set	3986
  1498  0000                     _TRISE	set	3990
  1499  0000                     _LATC	set	3979
  1500  0000                     _LATB	set	3978
  1501  0000                     _LATA	set	3977
  1502  0000                     _LATD	set	3980
  1503  0000                     _LATE	set	3981
  1504  0000                     _OSCTUNE	set	3995
  1505  0000                     _OSCCON	set	4051
  1506  0000                     _RCONbits	set	4048
  1507  0000                     _TXREG	set	4013
  1508  0000                     _RCREG	set	4014
  1509  0000                     _RCSTAbits	set	4011
  1510  0000                     _TXSTAbits	set	4012
  1511  0000                     _PIR1bits	set	3998
  1512  0000                     _SPBRGH	set	4016
  1513  0000                     _SPBRG	set	4015
  1514  0000                     _TXSTA	set	4012
  1515  0000                     _RCSTA	set	4011
  1516  0000                     _BAUDCON	set	4024
  1517  0000                     _T0CON	set	4053
  1518  0000                     _TMR0L	set	4054
  1519  0000                     _TMR0H	set	4055
  1520  0000                     _T0CONbits	set	4053
  1521  0000                     _INTCON2bits	set	4081
  1522  0000                     _INTCONbits	set	4082
  1523                           
  1524                           	psect	cinit
  1525  000A9A                     __pcinit:
  1526                           	opt callstack 0
  1527  000A9A                     start_initialization:
  1528                           	opt callstack 0
  1529  000A9A                     __initialization:
  1530                           	opt callstack 0
  1531                           
  1532                           ; Initialize objects allocated to BANK0 (44 bytes)
  1533                           ; load TBLPTR registers with __pidataBANK0
  1534  000A9A  0E12               	movlw	low __pidataBANK0
  1535  000A9C  6EF6               	movwf	tblptrl,c
  1536  000A9E  0E0E               	movlw	high __pidataBANK0
  1537  000AA0  6EF7               	movwf	tblptrh,c
  1538  000AA2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1539  000AA4  6EF8               	movwf	tblptru,c
  1540  000AA6  EE00  F0C9         	lfsr	0,__pdataBANK0
  1541  000AAA  EE10 F02C          	lfsr	1,44
  1542  000AAE                     copy_data0:
  1543  000AAE  0009               	tblrd		*+
  1544  000AB0  CFF5 FFEE          	movff	tablat,postinc0
  1545  000AB4  50E5               	movf	postdec1,w,c
  1546  000AB6  50E1               	movf	fsr1l,w,c
  1547  000AB8  E1FA               	bnz	copy_data0
  1548                           
  1549                           ; Initialize objects allocated to COMRAM (30 bytes)
  1550                           ; load TBLPTR registers with __pidataCOMRAM
  1551  000ABA  0EB0               	movlw	low __pidataCOMRAM
  1552  000ABC  6EF6               	movwf	tblptrl,c
  1553  000ABE  0E0E               	movlw	high __pidataCOMRAM
  1554  000AC0  6EF7               	movwf	tblptrh,c
  1555  000AC2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1556  000AC4  6EF8               	movwf	tblptru,c
  1557  000AC6  EE00  F001         	lfsr	0,__pdataCOMRAM
  1558  000ACA  EE10 F01E          	lfsr	1,30
  1559  000ACE                     copy_data1:
  1560  000ACE  0009               	tblrd		*+
  1561  000AD0  CFF5 FFEE          	movff	tablat,postinc0
  1562  000AD4  50E5               	movf	postdec1,w,c
  1563  000AD6  50E1               	movf	fsr1l,w,c
  1564  000AD8  E1FA               	bnz	copy_data1
  1565                           
  1566                           ; Clear objects allocated to BANK1 (200 bytes)
  1567  000ADA  EE01  F000         	lfsr	0,__pbssBANK1
  1568  000ADE  0EC8               	movlw	200
  1569  000AE0                     clear_0:
  1570  000AE0  6AEE               	clrf	postinc0,c
  1571  000AE2  06E8               	decf	wreg,f,c
  1572  000AE4  E1FD               	bnz	clear_0
  1573                           
  1574                           ; Clear objects allocated to BANK0 (105 bytes)
  1575  000AE6  EE00  F060         	lfsr	0,__pbssBANK0
  1576  000AEA  0E69               	movlw	105
  1577  000AEC                     clear_1:
  1578  000AEC  6AEE               	clrf	postinc0,c
  1579  000AEE  06E8               	decf	wreg,f,c
  1580  000AF0  E1FD               	bnz	clear_1
  1581                           
  1582                           ; Clear objects allocated to COMRAM (28 bytes)
  1583  000AF2  EE00  F01F         	lfsr	0,__pbssCOMRAM
  1584  000AF6  0E1C               	movlw	28
  1585  000AF8                     clear_2:
  1586  000AF8  6AEE               	clrf	postinc0,c
  1587  000AFA  06E8               	decf	wreg,f,c
  1588  000AFC  E1FD               	bnz	clear_2
  1589  000AFE                     end_of_initialization:
  1590                           	opt callstack 0
  1591  000AFE                     __end_of__initialization:
  1592                           	opt callstack 0
  1593  000AFE  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1594  000B00  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1595  000B02  0100               	movlb	0
  1596  000B04  EF99  F007         	goto	_main	;jump to C main() function
  1597                           
  1598                           	psect	bssCOMRAM
  1599  00001F                     __pbssCOMRAM:
  1600                           	opt callstack 0
  1601  00001F                     _ptr:
  1602                           	opt callstack 0
  1603  00001F                     	ds	2
  1604  000021                     _CounterB:
  1605                           	opt callstack 0
  1606  000021                     	ds	2
  1607  000023                     _CounterA:
  1608                           	opt callstack 0
  1609  000023                     	ds	2
  1610  000025                     _TMR0_InterruptHandler:
  1611                           	opt callstack 0
  1612  000025                     	ds	2
  1613  000027                     PrintLed@flag:
  1614                           	opt callstack 0
  1615  000027                     	ds	1
  1616  000028                     ProcessPeriodic@i:
  1617                           	opt callstack 0
  1618  000028                     	ds	1
  1619  000029                     ProcessPeriodic@RxCks:
  1620                           	opt callstack 0
  1621  000029                     	ds	1
  1622  00002A                     ProcessPeriodic@Mask:
  1623                           	opt callstack 0
  1624  00002A                     	ds	1
  1625  00002B                     ProcessPeriodic@Index:
  1626                           	opt callstack 0
  1627  00002B                     	ds	1
  1628  00002C                     _RunFlag:
  1629                           	opt callstack 0
  1630  00002C                     	ds	1
  1631  00002D                     _CxFlag:
  1632                           	opt callstack 0
  1633  00002D                     	ds	1
  1634  00002E                     _eusartRxLastError:
  1635                           	opt callstack 0
  1636  00002E                     	ds	1
  1637  00002F                     _StrRH:
  1638                           	opt callstack 0
  1639  00002F                     	ds	5
  1640  000034                     _StrTemp:
  1641                           	opt callstack 0
  1642  000034                     	ds	5
  1643  000039                     ProcessPeriodic@RxData:
  1644                           	opt callstack 0
  1645  000039                     	ds	1
  1646  00003A                     ProcessPeriodic@RS485Data:
  1647                           	opt callstack 0
  1648  00003A                     	ds	1
  1649                           
  1650                           	psect	dataCOMRAM
  1651  000001                     __pdataCOMRAM:
  1652                           	opt callstack 0
  1653  000001                     Ws0010Init@F3174:
  1654                           	opt callstack 0
  1655  000001                     	ds	14
  1656  00000F                     Ws0010Bufu16@F3238:
  1657                           	opt callstack 0
  1658  00000F                     	ds	12
  1659  00001B                     Ws0010Bufu8@F3223:
  1660                           	opt callstack 0
  1661  00001B                     	ds	4
  1662                           
  1663                           	psect	bssBANK0
  1664  000060                     __pbssBANK0:
  1665                           	opt callstack 0
  1666  000060                     ProcessPeriodic@StrCommand:
  1667                           	opt callstack 0
  1668  000060                     	ds	45
  1669  00008D                     _ProcessVector:
  1670                           	opt callstack 0
  1671  00008D                     	ds	36
  1672  0000B1                     _AplicationQueue:
  1673                           	opt callstack 0
  1674  0000B1                     	ds	24
  1675                           
  1676                           	psect	dataBANK0
  1677  0000C9                     __pdataBANK0:
  1678                           	opt callstack 0
  1679  0000C9                     Ws0010Bufu32@F3253:
  1680                           	opt callstack 0
  1681  0000C9                     	ds	44
  1682                           
  1683                           	psect	bssBANK1
  1684  000100                     __pbssBANK1:
  1685                           	opt callstack 0
  1686  000100                     _Ws0010_buffer:
  1687                           	opt callstack 0
  1688  000100                     	ds	200
  1689                           
  1690                           	psect	cstackCOMRAM
  1691  00003B                     __pcstackCOMRAM:
  1692                           	opt callstack 0
  1693  00003B                     ??_INTERRUPT_InterruptManagerHigh:
  1694  00003B                     
  1695                           ; 1 bytes @ 0x0
  1696  00003B                     	ds	2
  1697  00003D                     ??_DelayLongo:
  1698  00003D                     ??_TMR0_Initialize:
  1699  00003D                     ?_memcmp:
  1700                           	opt callstack 0
  1701  00003D                     ?_strlen:
  1702                           	opt callstack 0
  1703  00003D                     ?___awdiv:
  1704                           	opt callstack 0
  1705  00003D                     EUSART_Write@txData:
  1706                           	opt callstack 0
  1707  00003D                     Ws0010PutByte@fras:
  1708                           	opt callstack 0
  1709  00003D                     Ws0010BufGotoXY@posy:
  1710                           	opt callstack 0
  1711  00003D                     Ws0010Buf5x7Char@inv:
  1712                           	opt callstack 0
  1713  00003D                     Ws0010BufPatern@count:
  1714                           	opt callstack 0
  1715  00003D                     TMR0_SetInterruptHandler@InterruptHandler:
  1716                           	opt callstack 0
  1717  00003D                     EUSART_SetFramingErrorHandler@interruptHandler:
  1718                           	opt callstack 0
  1719  00003D                     EUSART_SetOverrunErrorHandler@interruptHandler:
  1720                           	opt callstack 0
  1721  00003D                     EUSART_SetErrorHandler@interruptHandler:
  1722                           	opt callstack 0
  1723  00003D                     fifo_init@p_fifo:
  1724                           	opt callstack 0
  1725  00003D                     fifo_queue@p_fifo:
  1726                           	opt callstack 0
  1727  00003D                     fifo_dequeue@p_fifo:
  1728                           	opt callstack 0
  1729  00003D                     GetsRS485@RxData:
  1730                           	opt callstack 0
  1731  00003D                     ___awdiv@dividend:
  1732                           	opt callstack 0
  1733  00003D                     memcmp@vl:
  1734                           	opt callstack 0
  1735  00003D                     memcpy@d1:
  1736                           	opt callstack 0
  1737  00003D                     strlen@s:
  1738                           	opt callstack 0
  1739  00003D                     Ws0010Init@init:
  1740                           	opt callstack 0
  1741                           
  1742                           ; 14 bytes @ 0x2
  1743  00003D                     	ds	1
  1744  00003E                     ??_Ws0010BufGotoXY:
  1745  00003E                     ??_Ws0010Buf5x7Char:
  1746  00003E                     ??_Ws0010PutByte:
  1747  00003E                     Ws0010BufPatern@dado:
  1748                           	opt callstack 0
  1749                           
  1750                           ; 1 bytes @ 0x3
  1751  00003E                     	ds	1
  1752  00003F                     fifo_init@size:
  1753                           	opt callstack 0
  1754  00003F                     fifo_queue@p_data:
  1755                           	opt callstack 0
  1756  00003F                     GetsRS485@Ret:
  1757                           	opt callstack 0
  1758  00003F                     DelayLongo@f:
  1759                           	opt callstack 0
  1760  00003F                     Ws0010BufPatern@i:
  1761                           	opt callstack 0
  1762  00003F                     fifo_dequeue@p_data:
  1763                           	opt callstack 0
  1764  00003F                     ___awdiv@divisor:
  1765                           	opt callstack 0
  1766  00003F                     memcmp@vr:
  1767                           	opt callstack 0
  1768  00003F                     memcpy@s1:
  1769                           	opt callstack 0
  1770  00003F                     strlen@a:
  1771                           	opt callstack 0
  1772                           
  1773                           ; 2 bytes @ 0x4
  1774  00003F                     	ds	1
  1775  000040                     ??_fifo_queue:
  1776  000040                     GetsRS485@RxStatus:
  1777                           	opt callstack 0
  1778  000040                     Ws0010PutByte@end:
  1779                           	opt callstack 0
  1780  000040                     Ws0010BufGotoXY@posx:
  1781                           	opt callstack 0
  1782                           
  1783                           ; 1 bytes @ 0x5
  1784  000040                     	ds	1
  1785  000041                     ??_fifo_dequeue:
  1786  000041                     Ws0010PutGotoXY@posy:
  1787                           	opt callstack 0
  1788  000041                     Ws0010Buf9x16Char@inv:
  1789                           	opt callstack 0
  1790  000041                     ___awdiv@counter:
  1791                           	opt callstack 0
  1792  000041                     PutsRS485@s:
  1793                           	opt callstack 0
  1794  000041                     memcmp@n:
  1795                           	opt callstack 0
  1796  000041                     memcpy@n:
  1797                           	opt callstack 0
  1798                           
  1799                           ; 2 bytes @ 0x6
  1800  000041                     	ds	1
  1801  000042                     ??_Ws0010Buf9x16Char:
  1802  000042                     Ws0010PutGotoXY@posx:
  1803                           	opt callstack 0
  1804  000042                     Ws0010Buf5x7Char@carac:
  1805                           	opt callstack 0
  1806  000042                     ___awdiv@sign:
  1807                           	opt callstack 0
  1808                           
  1809                           ; 1 bytes @ 0x7
  1810  000042                     	ds	1
  1811  000043                     ??_PutsRS485:
  1812  000043                     ??_memcmp:
  1813  000043                     Ws0010Buf5x7Char@j:
  1814                           	opt callstack 0
  1815  000043                     Ws0010Refresh@dado:
  1816                           	opt callstack 0
  1817  000043                     ___awdiv@quotient:
  1818                           	opt callstack 0
  1819  000043                     memcpy@d:
  1820                           	opt callstack 0
  1821                           
  1822                           ; 2 bytes @ 0x8
  1823  000043                     	ds	1
  1824  000044                     fifo_dequeue@result:
  1825                           	opt callstack 0
  1826  000044                     Ws0010Refresh@j:
  1827                           	opt callstack 0
  1828                           
  1829                           ; 1 bytes @ 0x9
  1830  000044                     	ds	1
  1831  000045                     PutsRS485@i:
  1832                           	opt callstack 0
  1833  000045                     Ws0010BufBitmap@Image:
  1834                           	opt callstack 0
  1835  000045                     memcmp@l:
  1836                           	opt callstack 0
  1837  000045                     memcpy@s:
  1838                           	opt callstack 0
  1839                           
  1840                           ; 2 bytes @ 0xA
  1841  000045                     	ds	1
  1842  000046                     Ws0010Buf9x16Char@carac:
  1843                           	opt callstack 0
  1844                           
  1845                           ; 1 bytes @ 0xB
  1846  000046                     	ds	1
  1847  000047                     Ws0010BufBitmap@Size:
  1848                           	opt callstack 0
  1849  000047                     memcpy@tmp:
  1850                           	opt callstack 0
  1851  000047                     Ws0010Buf9x16Char@j:
  1852                           	opt callstack 0
  1853  000047                     memcmp@r:
  1854                           	opt callstack 0
  1855                           
  1856                           ; 2 bytes @ 0xC
  1857  000047                     	ds	1
  1858  000048                     ??_Ws0010BufBitmap:
  1859  000048                     SetProcessFunc@Command:
  1860                           	opt callstack 0
  1861                           
  1862                           ; 2 bytes @ 0xD
  1863  000048                     	ds	1
  1864  000049                     PrintData@StrTemp:
  1865                           	opt callstack 0
  1866                           
  1867                           ; 2 bytes @ 0xE
  1868  000049                     	ds	1
  1869  00004A                     SetProcessFunc@Size:
  1870                           	opt callstack 0
  1871  00004A                     Ws0010BufBitmap@gap:
  1872                           	opt callstack 0
  1873                           
  1874                           ; 1 bytes @ 0xF
  1875  00004A                     	ds	1
  1876  00004B                     Ws0010Init@i:
  1877                           	opt callstack 0
  1878  00004B                     SetProcessFunc@FunctionHandler:
  1879                           	opt callstack 0
  1880  00004B                     PrintData@StrRH:
  1881                           	opt callstack 0
  1882  00004B                     Ws0010BufBitmap@j:
  1883                           	opt callstack 0
  1884                           
  1885                           ; 2 bytes @ 0x10
  1886  00004B                     	ds	2
  1887  00004D                     ??_ProcessPeriodic:
  1888  00004D                     SetProcessFunc@Index:
  1889                           	opt callstack 0
  1890                           
  1891                           ; 1 bytes @ 0x12
  1892  00004D                     	ds	1
  1893  00004E                     
  1894                           ; 1 bytes @ 0x13
  1895  00004E                     	ds	1
  1896  00004F                     ProcessPeriodic@pf:
  1897                           	opt callstack 0
  1898                           
  1899                           ; 2 bytes @ 0x14
  1900  00004F                     	ds	2
  1901  000051                     
  1902                           ; 1 bytes @ 0x16
  1903 ;;
  1904 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1905 ;;
  1906 ;; *************** function _main *****************
  1907 ;; Defined at:
  1908 ;;		line 55 in file "main.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;Total ram usage:        0 bytes
  1927 ;; Hardware stack levels required when called:    9
  1928 ;; This function calls:
  1929 ;;		_ProcessInit
  1930 ;;		_ProcessPeriodic
  1931 ;;		_SYSTEM_Initialize
  1932 ;; This function is called by:
  1933 ;;		Startup code after reset
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text0
  1938  000F32                     __ptext0:
  1939                           	opt callstack 0
  1940  000F32                     _main:
  1941                           	opt callstack 22
  1942                           
  1943                           ;main.c: 58:     SYSTEM_Initialize();
  1944                           
  1945                           ;incstack = 0
  1946  000F32  EC84  F007         	call	_SYSTEM_Initialize	;wreg free
  1947                           
  1948                           ;main.c: 65:     (INTCONbits.GIEH = 1);
  1949  000F36  8EF2               	bsf	4082,7,c	;volatile
  1950                           
  1951                           ;main.c: 68:     (INTCONbits.GIEL = 1);
  1952  000F38  8CF2               	bsf	4082,6,c	;volatile
  1953                           
  1954                           ;main.c: 84:     ProcessInit();
  1955  000F3A  EC40  F004         	call	_ProcessInit	;wreg free
  1956  000F3E                     l2828:
  1957                           
  1958                           ;main.c: 87:     {;main.c: 88:         ProcessPeriodic();
  1959  000F3E  EC16  F000         	call	_ProcessPeriodic	;wreg free
  1960                           
  1961                           ;main.c: 89:     }
  1962  000F42  D7FD               	goto	l2828
  1963  000F44                     __end_of_main:
  1964                           	opt callstack 0
  1965                           
  1966 ;; *************** function _SYSTEM_Initialize *****************
  1967 ;; Defined at:
  1968 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;Total ram usage:        0 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    6
  1989 ;; This function calls:
  1990 ;;		_EUSART_Initialize
  1991 ;;		_INTERRUPT_Initialize
  1992 ;;		_OSCILLATOR_Initialize
  1993 ;;		_PIN_MANAGER_Initialize
  1994 ;;		_TMR0_Initialize
  1995 ;; This function is called by:
  1996 ;;		_main
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text1
  2001  000F08                     __ptext1:
  2002                           	opt callstack 0
  2003  000F08                     _SYSTEM_Initialize:
  2004                           	opt callstack 24
  2005                           
  2006                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2007                           
  2008                           ;incstack = 0
  2009  000F08  ECEA  F007         	call	_INTERRUPT_Initialize	;wreg free
  2010                           
  2011                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2012  000F0C  ECA3  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  2013                           
  2014                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2015  000F10  ECD1  F007         	call	_OSCILLATOR_Initialize	;wreg free
  2016                           
  2017                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  2018  000F14  EC1F  F007         	call	_TMR0_Initialize	;wreg free
  2019                           
  2020                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2021  000F18  EC67  F006         	call	_EUSART_Initialize	;wreg free
  2022  000F1C  0012               	return		;funcret
  2023  000F1E                     __end_of_SYSTEM_Initialize:
  2024                           	opt callstack 0
  2025                           
  2026 ;; *************** function _TMR0_Initialize *****************
  2027 ;; Defined at:
  2028 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;Total ram usage:        2 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    4
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_SYSTEM_Initialize
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text2
  2057  000E3E                     __ptext2:
  2058                           	opt callstack 0
  2059  000E3E                     _TMR0_Initialize:
  2060                           	opt callstack 25
  2061                           
  2062                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  2063                           
  2064                           ;incstack = 0
  2065  000E3E  9CD5               	bcf	4053,6,c	;volatile
  2066                           
  2067                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFD;
  2068  000E40  0EFD               	movlw	253
  2069  000E42  6ED7               	movwf	4055,c	;volatile
  2070                           
  2071                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x8E;
  2072  000E44  0E8E               	movlw	142
  2073  000E46  6ED6               	movwf	4054,c	;volatile
  2074                           
  2075                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  2076  000E48  50D6               	movf	4054,w,c	;volatile
  2077  000E4A  CFD7 F03D          	movff	4055,??_TMR0_Initialize	;volatile
  2078  000E4E  6A3E               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  2079  000E50  C03D  F03E         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  2080  000E54  6A3D               	clrf	??_TMR0_Initialize,c
  2081  000E56  103D               	iorwf	??_TMR0_Initialize,w,c
  2082  000E58  6E57               	movwf	_timer0ReloadVal,c	;volatile
  2083  000E5A  503E               	movf	??_TMR0_Initialize+1,w,c
  2084  000E5C  6E58               	movwf	_timer0ReloadVal+1,c	;volatile
  2085                           
  2086                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  2087  000E5E  94F2               	bcf	4082,2,c	;volatile
  2088                           
  2089                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  2090  000E60  8AF2               	bsf	4082,5,c	;volatile
  2091                           
  2092                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x93;
  2093  000E62  0E93               	movlw	147
  2094  000E64  6ED5               	movwf	4053,c	;volatile
  2095  000E66  0012               	return		;funcret
  2096  000E68                     __end_of_TMR0_Initialize:
  2097                           	opt callstack 0
  2098                           
  2099 ;; *************** function _PIN_MANAGER_Initialize *****************
  2100 ;; Defined at:
  2101 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;Total ram usage:        0 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    4
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_SYSTEM_Initialize
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text3
  2130  000D46                     __ptext3:
  2131                           	opt callstack 0
  2132  000D46                     _PIN_MANAGER_Initialize:
  2133                           	opt callstack 25
  2134                           
  2135                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2136                           
  2137                           ;incstack = 0
  2138  000D46  0E00               	movlw	0
  2139  000D48  6E8D               	movwf	3981,c	;volatile
  2140                           
  2141                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2142  000D4A  0E00               	movlw	0
  2143  000D4C  6E8C               	movwf	3980,c	;volatile
  2144                           
  2145                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2146  000D4E  0E00               	movlw	0
  2147  000D50  6E89               	movwf	3977,c	;volatile
  2148                           
  2149                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2150  000D52  0E00               	movlw	0
  2151  000D54  6E8A               	movwf	3978,c	;volatile
  2152                           
  2153                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2154  000D56  0E00               	movlw	0
  2155  000D58  6E8B               	movwf	3979,c	;volatile
  2156                           
  2157                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x04;
  2158  000D5A  0E04               	movlw	4
  2159  000D5C  6E96               	movwf	3990,c	;volatile
  2160                           
  2161                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xF4;
  2162  000D5E  0EF4               	movlw	244
  2163  000D60  6E92               	movwf	3986,c	;volatile
  2164                           
  2165                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFD;
  2166  000D62  0EFD               	movlw	253
  2167  000D64  6E93               	movwf	3987,c	;volatile
  2168                           
  2169                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBB;
  2170  000D66  0EBB               	movlw	187
  2171  000D68  6E94               	movwf	3988,c	;volatile
  2172                           
  2173                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x02;
  2174  000D6A  0E02               	movlw	2
  2175  000D6C  6E95               	movwf	3989,c	;volatile
  2176                           
  2177                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0x00;
  2178  000D6E  0E00               	movlw	0
  2179  000D70  6E7E               	movwf	3966,c	;volatile
  2180                           
  2181                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x00;
  2182  000D72  0E00               	movlw	0
  2183  000D74  6E7F               	movwf	3967,c	;volatile
  2184                           
  2185                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  2186  000D76  0E00               	movlw	0
  2187  000D78  6E7C               	movwf	3964,c	;volatile
  2188                           
  2189                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  2190  000D7A  8EF1               	bsf	4081,7,c	;volatile
  2191  000D7C  0012               	return		;funcret
  2192  000D7E                     __end_of_PIN_MANAGER_Initialize:
  2193                           	opt callstack 0
  2194                           
  2195 ;; *************** function _OSCILLATOR_Initialize *****************
  2196 ;; Defined at:
  2197 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    4
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_SYSTEM_Initialize
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text4
  2226  000FA2                     __ptext4:
  2227                           	opt callstack 0
  2228  000FA2                     _OSCILLATOR_Initialize:
  2229                           	opt callstack 25
  2230                           
  2231                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x30;
  2232                           
  2233                           ;incstack = 0
  2234  000FA2  0E30               	movlw	48
  2235  000FA4  6ED3               	movwf	4051,c	;volatile
  2236                           
  2237                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x40;
  2238  000FA6  0E40               	movlw	64
  2239  000FA8  6E9B               	movwf	3995,c	;volatile
  2240  000FAA  0012               	return		;funcret
  2241  000FAC                     __end_of_OSCILLATOR_Initialize:
  2242                           	opt callstack 0
  2243                           
  2244 ;; *************** function _INTERRUPT_Initialize *****************
  2245 ;; Defined at:
  2246 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		None
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    4
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_SYSTEM_Initialize
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text5
  2275  000FD4                     __ptext5:
  2276                           	opt callstack 0
  2277  000FD4                     _INTERRUPT_Initialize:
  2278                           	opt callstack 25
  2279                           
  2280                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  2281                           
  2282                           ;incstack = 0
  2283  000FD4  8ED0               	bsf	4048,7,c	;volatile
  2284                           
  2285                           ;mcc_generated_files/interrupt_manager.c: 60:     INTCON2bits.TMR0IP = 1;
  2286  000FD6  84F1               	bsf	4081,2,c	;volatile
  2287  000FD8  0012               	return		;funcret
  2288  000FDA                     __end_of_INTERRUPT_Initialize:
  2289                           	opt callstack 0
  2290                           
  2291 ;; *************** function _EUSART_Initialize *****************
  2292 ;; Defined at:
  2293 ;;		line 65 in file "mcc_generated_files/eusart.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;Total ram usage:        0 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    5
  2314 ;; This function calls:
  2315 ;;		_EUSART_SetErrorHandler
  2316 ;;		_EUSART_SetFramingErrorHandler
  2317 ;;		_EUSART_SetOverrunErrorHandler
  2318 ;; This function is called by:
  2319 ;;		_SYSTEM_Initialize
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text6
  2324  000CCE                     __ptext6:
  2325                           	opt callstack 0
  2326  000CCE                     _EUSART_Initialize:
  2327                           	opt callstack 24
  2328                           
  2329                           ;mcc_generated_files/eusart.c: 70:     BAUDCON = 0x08;
  2330                           
  2331                           ;incstack = 0
  2332  000CCE  0E08               	movlw	8
  2333  000CD0  6EB8               	movwf	4024,c	;volatile
  2334                           
  2335                           ;mcc_generated_files/eusart.c: 73:     RCSTA = 0x90;
  2336  000CD2  0E90               	movlw	144
  2337  000CD4  6EAB               	movwf	4011,c	;volatile
  2338                           
  2339                           ;mcc_generated_files/eusart.c: 76:     TXSTA = 0x24;
  2340  000CD6  0E24               	movlw	36
  2341  000CD8  6EAC               	movwf	4012,c	;volatile
  2342                           
  2343                           ;mcc_generated_files/eusart.c: 79:     SPBRG = 0x11;
  2344  000CDA  0E11               	movlw	17
  2345  000CDC  6EAF               	movwf	4015,c	;volatile
  2346                           
  2347                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x04;
  2348  000CDE  0E04               	movlw	4
  2349  000CE0  6EB0               	movwf	4016,c	;volatile
  2350                           
  2351                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  2352  000CE2  0E00               	movlw	0
  2353  000CE4  6E3D               	movwf	EUSART_SetFramingErrorHandler@interruptHandler,c
  2354  000CE6  0E00               	movlw	0
  2355  000CE8  6E3E               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1,c
  2356  000CEA  ECDB  F007         	call	_EUSART_SetFramingErrorHandler	;wreg free
  2357                           
  2358                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  2359  000CEE  0E00               	movlw	0
  2360  000CF0  6E3D               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler,c
  2361  000CF2  0E00               	movlw	0
  2362  000CF4  6E3E               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1,c
  2363  000CF6  ECD6  F007         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  2364                           
  2365                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  2366  000CFA  0E00               	movlw	0
  2367  000CFC  6E3D               	movwf	EUSART_SetErrorHandler@interruptHandler,c
  2368  000CFE  0E00               	movlw	0
  2369  000D00  6E3E               	movwf	EUSART_SetErrorHandler@interruptHandler+1,c
  2370  000D02  ECE0  F007         	call	_EUSART_SetErrorHandler	;wreg free
  2371                           
  2372                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  2373  000D06  0E00               	movlw	0
  2374  000D08  6E2E               	movwf	_eusartRxLastError,c	;volatile
  2375  000D0A  0012               	return		;funcret
  2376  000D0C                     __end_of_EUSART_Initialize:
  2377                           	opt callstack 0
  2378                           
  2379 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2380 ;; Defined at:
  2381 ;;		line 169 in file "mcc_generated_files/eusart.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  2384 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;Total ram usage:        2 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    4
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		_EUSART_Initialize
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text7
  2411  000FAC                     __ptext7:
  2412                           	opt callstack 0
  2413  000FAC                     _EUSART_SetOverrunErrorHandler:
  2414                           	opt callstack 24
  2415                           
  2416                           ;mcc_generated_files/eusart.c: 170:     EUSART_OverrunErrorHandler = interruptHandler;
  2417                           
  2418                           ;incstack = 0
  2419  000FAC  C03D  F053         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  2420  000FB0  C03E  F054         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  2421  000FB4  0012               	return		;funcret
  2422  000FB6                     __end_of_EUSART_SetOverrunErrorHandler:
  2423                           	opt callstack 0
  2424                           
  2425 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2426 ;; Defined at:
  2427 ;;		line 165 in file "mcc_generated_files/eusart.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  2430 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;Total ram usage:        2 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    4
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_EUSART_Initialize
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text8
  2457  000FB6                     __ptext8:
  2458                           	opt callstack 0
  2459  000FB6                     _EUSART_SetFramingErrorHandler:
  2460                           	opt callstack 24
  2461                           
  2462                           ;mcc_generated_files/eusart.c: 166:     EUSART_FramingErrorHandler = interruptHandler;
  2463                           
  2464                           ;incstack = 0
  2465  000FB6  C03D  F055         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  2466  000FBA  C03E  F056         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  2467  000FBE  0012               	return		;funcret
  2468  000FC0                     __end_of_EUSART_SetFramingErrorHandler:
  2469                           	opt callstack 0
  2470                           
  2471 ;; *************** function _EUSART_SetErrorHandler *****************
  2472 ;; Defined at:
  2473 ;;		line 173 in file "mcc_generated_files/eusart.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  2476 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;Total ram usage:        2 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    4
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_EUSART_Initialize
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           	psect	text9
  2503  000FC0                     __ptext9:
  2504                           	opt callstack 0
  2505  000FC0                     _EUSART_SetErrorHandler:
  2506                           	opt callstack 24
  2507                           
  2508                           ;mcc_generated_files/eusart.c: 174:     EUSART_ErrorHandler = interruptHandler;
  2509                           
  2510                           ;incstack = 0
  2511  000FC0  C03D  F051         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  2512  000FC4  C03E  F052         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  2513  000FC8  0012               	return		;funcret
  2514  000FCA                     __end_of_EUSART_SetErrorHandler:
  2515                           	opt callstack 0
  2516                           
  2517 ;; *************** function _ProcessPeriodic *****************
  2518 ;; Defined at:
  2519 ;;		line 152 in file "Application.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  pf              2   20[COMRAM] PTR unsigned char 
  2524 ;;		 -> ProcessPeriodic@StrCommand(45), 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;Total ram usage:        4 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    8
  2541 ;; This function calls:
  2542 ;;		_GetsRS485
  2543 ;;		_PrintData
  2544 ;;		_PrintLed
  2545 ;;		_SendBT
  2546 ;;		_SendCX
  2547 ;;		_SendSY
  2548 ;;		_fifo_dequeue
  2549 ;;		_fifo_queue
  2550 ;;		_memcmp
  2551 ;; This function is called by:
  2552 ;;		_main
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text10
  2557  00002C                     __ptext10:
  2558                           	opt callstack 0
  2559  00002C                     _ProcessPeriodic:
  2560                           	opt callstack 22
  2561                           
  2562                           ;Application.c: 154:     static int8_t Index, Mask = 0;;Application.c: 155:     uint8_t 
      +                          *pf;;Application.c: 156:     static uint8_t StrCommand[9U * 5U];;Application.c: 157:    
      +                           static uint8_t RS485Data, RxData, RxCks, i;;Application.c: 159:     PrintLed();
  2563                           
  2564                           ;incstack = 0
  2565  00002C  EC47  F006         	call	_PrintLed	;wreg free
  2566                           
  2567                           ;Application.c: 161:     if(PORTDbits.RD0 == 0)
  2568  000030  B083               	btfsc	3971,0,c	;volatile
  2569  000032  D100               	goto	u1640
  2570                           
  2571                           ;Application.c: 162:     {;Application.c: 163:         if(GetsRS485(&RxData) == 1)
  2572  000034  0E39               	movlw	low ProcessPeriodic@RxData
  2573  000036  6E3D               	movwf	GetsRS485@RxData,c
  2574  000038  0E00               	movlw	high ProcessPeriodic@RxData
  2575  00003A  6E3E               	movwf	GetsRS485@RxData+1,c
  2576  00003C  ECD8  F006         	call	_GetsRS485	;wreg free
  2577  000040  06E8               	decf	wreg,f,c
  2578  000042  A4D8               	btfss	status,2,c
  2579  000044  D009               	goto	l2706
  2580                           
  2581                           ;Application.c: 164:         {;Application.c: 165:             fifo_queue(&AplicationQue
      +                          ue, RxData);
  2582  000046  0EB1               	movlw	low _AplicationQueue
  2583  000048  6E3D               	movwf	fifo_queue@p_fifo,c
  2584  00004A  0E00               	movlw	high _AplicationQueue
  2585  00004C  6E3E               	movwf	fifo_queue@p_fifo+1,c
  2586  00004E  C039  F03F         	movff	ProcessPeriodic@RxData,fifo_queue@p_data
  2587  000052  ECEB  F003         	call	_fifo_queue	;wreg free
  2588                           
  2589                           ;Application.c: 166:         }else
  2590  000056  D0EE               	goto	u1640
  2591  000058                     l2706:
  2592                           
  2593                           ;Application.c: 167:         {;Application.c: 168:            if(CxFlag == 1)
  2594  000058  042D               	decf	_CxFlag,w,c
  2595  00005A  A4D8               	btfss	status,2,c
  2596  00005C  D0EB               	goto	u1640
  2597                           
  2598                           ;Application.c: 169:            {;Application.c: 170:                CxFlag = 0;
  2599  00005E  0E00               	movlw	0
  2600  000060  6E2D               	movwf	_CxFlag,c
  2601                           
  2602                           ;Application.c: 171:                fifo_queue(&AplicationQueue, 'C');
  2603  000062  0EB1               	movlw	low _AplicationQueue
  2604  000064  6E3D               	movwf	fifo_queue@p_fifo,c
  2605  000066  0E00               	movlw	high _AplicationQueue
  2606  000068  6E3E               	movwf	fifo_queue@p_fifo+1,c
  2607  00006A  0E43               	movlw	67
  2608  00006C  6E3F               	movwf	fifo_queue@p_data,c
  2609  00006E  ECEB  F003         	call	_fifo_queue	;wreg free
  2610                           
  2611                           ;Application.c: 172:                fifo_queue(&AplicationQueue, 'x');
  2612  000072  0EB1               	movlw	low _AplicationQueue
  2613  000074  6E3D               	movwf	fifo_queue@p_fifo,c
  2614  000076  0E00               	movlw	high _AplicationQueue
  2615  000078  6E3E               	movwf	fifo_queue@p_fifo+1,c
  2616  00007A  0E78               	movlw	120
  2617  00007C  6E3F               	movwf	fifo_queue@p_data,c
  2618  00007E  ECEB  F003         	call	_fifo_queue	;wreg free
  2619                           
  2620                           ;Application.c: 177:     while(fifo_dequeue(&AplicationQueue, &RS485Data) == 1)
  2621                           
  2622                           ;Application.c: 175:     }
  2623  000082  D0D8               	goto	u1640
  2624  000084                     l334:
  2625                           
  2626                           ;Application.c: 178:     {;Application.c: 179:         StrCommand[0] = StrCommand[1];
  2627  000084  C061  F060         	movff	ProcessPeriodic@StrCommand+1,ProcessPeriodic@StrCommand
  2628                           
  2629                           ;Application.c: 180:         StrCommand[1] = StrCommand[2];
  2630  000088  C062  F061         	movff	ProcessPeriodic@StrCommand+2,ProcessPeriodic@StrCommand+1
  2631                           
  2632                           ;Application.c: 181:         StrCommand[2] = StrCommand[3];
  2633  00008C  C063  F062         	movff	ProcessPeriodic@StrCommand+3,ProcessPeriodic@StrCommand+2
  2634                           
  2635                           ;Application.c: 182:         StrCommand[3] = StrCommand[4];
  2636  000090  C064  F063         	movff	ProcessPeriodic@StrCommand+4,ProcessPeriodic@StrCommand+3
  2637                           
  2638                           ;Application.c: 183:         StrCommand[4] = StrCommand[5];
  2639  000094  C065  F064         	movff	ProcessPeriodic@StrCommand+5,ProcessPeriodic@StrCommand+4
  2640                           
  2641                           ;Application.c: 184:         StrCommand[5] = StrCommand[6];
  2642  000098  C066  F065         	movff	ProcessPeriodic@StrCommand+6,ProcessPeriodic@StrCommand+5
  2643                           
  2644                           ;Application.c: 185:         StrCommand[6] = StrCommand[7];
  2645  00009C  C067  F066         	movff	ProcessPeriodic@StrCommand+7,ProcessPeriodic@StrCommand+6
  2646                           
  2647                           ;Application.c: 186:         StrCommand[7] = StrCommand[8];
  2648  0000A0  C068  F067         	movff	ProcessPeriodic@StrCommand+8,ProcessPeriodic@StrCommand+7
  2649                           
  2650                           ;Application.c: 187:         StrCommand[8] = StrCommand[9];
  2651  0000A4  C069  F068         	movff	ProcessPeriodic@StrCommand+9,ProcessPeriodic@StrCommand+8
  2652                           
  2653                           ;Application.c: 188:         StrCommand[9] = RS485Data;
  2654  0000A8  C03A  F069         	movff	ProcessPeriodic@RS485Data,ProcessPeriodic@StrCommand+9
  2655                           
  2656                           ;Application.c: 191:         for(Index = 0; Index < 3U; Index++)
  2657  0000AC  0E00               	movlw	0
  2658  0000AE  6E2B               	movwf	ProcessPeriodic@Index,c
  2659  0000B0                     l2720:
  2660                           
  2661                           ;Application.c: 192:         {;Application.c: 193:             for(Mask = 0; Mask < 9U; 
      +                          Mask++)
  2662  0000B0  0E00               	movlw	0
  2663  0000B2  6E2A               	movwf	ProcessPeriodic@Mask,c
  2664  0000B4                     l2726:
  2665                           
  2666                           ;Application.c: 194:             {;Application.c: 195:                 pf = &StrCommand[
      +                          Mask];
  2667  0000B4  0E60               	movlw	low ProcessPeriodic@StrCommand
  2668  0000B6  242A               	addwf	ProcessPeriodic@Mask,w,c
  2669  0000B8  6E4F               	movwf	ProcessPeriodic@pf,c
  2670  0000BA  6A50               	clrf	ProcessPeriodic@pf+1,c
  2671  0000BC  0E00               	movlw	high ProcessPeriodic@StrCommand
  2672  0000BE  2250               	addwfc	ProcessPeriodic@pf+1,f,c
  2673                           
  2674                           ;Application.c: 197:                 if(memcmp(pf, ProcessVector[Index].Str485Command, P
      +                          rocessVector[Index].CommandSize) == 0)
  2675  0000C0  C04F  F03D         	movff	ProcessPeriodic@pf,memcmp@vl
  2676  0000C4  C050  F03E         	movff	ProcessPeriodic@pf+1,memcmp@vl+1
  2677  0000C8  502B               	movf	ProcessPeriodic@Index,w,c
  2678  0000CA  0D0C               	mullw	12
  2679  0000CC  0E8D               	movlw	low _ProcessVector
  2680  0000CE  24F3               	addwf	prodl,w,c
  2681  0000D0  6E3F               	movwf	memcmp@vr,c
  2682  0000D2  0E00               	movlw	high _ProcessVector
  2683  0000D4  20F4               	addwfc	prodh,w,c
  2684  0000D6  6E40               	movwf	memcmp@vr+1,c
  2685  0000D8  502B               	movf	ProcessPeriodic@Index,w,c
  2686  0000DA  0D0C               	mullw	12
  2687  0000DC  0E96               	movlw	low (_ProcessVector+9)
  2688  0000DE  24F3               	addwf	prodl,w,c
  2689  0000E0  6ED9               	movwf	fsr2l,c
  2690  0000E2  0E00               	movlw	high (_ProcessVector+9)
  2691  0000E4  20F4               	addwfc	prodh,w,c
  2692  0000E6  6EDA               	movwf	fsr2h,c
  2693  0000E8  50DF               	movf	indf2,w,c
  2694  0000EA  6E4D               	movwf	??_ProcessPeriodic& (0+255),c
  2695  0000EC  504D               	movf	??_ProcessPeriodic,w,c
  2696  0000EE  6E41               	movwf	memcmp@n,c
  2697  0000F0  6A42               	clrf	memcmp@n+1,c
  2698  0000F2  EC11  F005         	call	_memcmp	;wreg free
  2699  0000F6  503D               	movf	?_memcmp,w,c
  2700  0000F8  103E               	iorwf	?_memcmp+1,w,c
  2701  0000FA  A4D8               	btfss	status,2,c
  2702  0000FC  D02C               	goto	l2736
  2703                           
  2704                           ;Application.c: 198:                 {;Application.c: 199:                     StrComman
      +                          d[0] = 0;
  2705  0000FE  0E00               	movlw	0
  2706  000100  0100               	movlb	0	; () banked
  2707  000102  6F60               	movwf	ProcessPeriodic@StrCommand& (0+255),b
  2708                           
  2709                           ;Application.c: 200:                     StrCommand[1] = 0;
  2710  000104  0E00               	movlw	0
  2711  000106  6F61               	movwf	(ProcessPeriodic@StrCommand+1)& (0+255),b
  2712                           
  2713                           ;Application.c: 201:                     StrCommand[2] = 0;
  2714  000108  0E00               	movlw	0
  2715  00010A  6F62               	movwf	(ProcessPeriodic@StrCommand+2)& (0+255),b
  2716                           
  2717                           ;Application.c: 202:                     StrCommand[3] = 0;
  2718  00010C  0E00               	movlw	0
  2719  00010E  6F63               	movwf	(ProcessPeriodic@StrCommand+3)& (0+255),b
  2720                           
  2721                           ;Application.c: 203:                     StrCommand[4] = 0;
  2722  000110  0E00               	movlw	0
  2723  000112  6F64               	movwf	(ProcessPeriodic@StrCommand+4)& (0+255),b
  2724                           
  2725                           ;Application.c: 204:                     StrCommand[5] = 0;
  2726  000114  0E00               	movlw	0
  2727  000116  6F65               	movwf	(ProcessPeriodic@StrCommand+5)& (0+255),b
  2728                           
  2729                           ;Application.c: 205:                     StrCommand[6] = 0;
  2730  000118  0E00               	movlw	0
  2731  00011A  6F66               	movwf	(ProcessPeriodic@StrCommand+6)& (0+255),b
  2732                           
  2733                           ;Application.c: 206:                     StrCommand[7] = 0;
  2734  00011C  0E00               	movlw	0
  2735  00011E  6F67               	movwf	(ProcessPeriodic@StrCommand+7)& (0+255),b
  2736                           
  2737                           ;Application.c: 207:                     StrCommand[8] = 0;
  2738  000120  0E00               	movlw	0
  2739  000122  6F68               	movwf	(ProcessPeriodic@StrCommand+8)& (0+255),b
  2740                           
  2741                           ;Application.c: 208:                     StrCommand[9] = 0;
  2742  000124  0E00               	movlw	0
  2743  000126  6F69               	movwf	(ProcessPeriodic@StrCommand+9)& (0+255),b
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;Application.c: 210:                     ProcessVector[Index].PtrFunctionHandler();
  2747  000128  502B               	movf	ProcessPeriodic@Index,w,c
  2748  00012A  0D0C               	mullw	12
  2749  00012C  0E97               	movlw	low (_ProcessVector+10)
  2750  00012E  24F3               	addwf	prodl,w,c
  2751  000130  6ED9               	movwf	fsr2l,c
  2752  000132  0E00               	movlw	high (_ProcessVector+10)
  2753  000134  20F4               	addwfc	prodh,w,c
  2754  000136  6EDA               	movwf	fsr2h,c
  2755  000138  CFDE F04D          	movff	postinc2,??_ProcessPeriodic
  2756  00013C  CFDD F04E          	movff	postdec2,??_ProcessPeriodic+1
  2757  000140  D801               	call	u1558
  2758  000142  D074               	goto	u1630
  2759  000144                     u1558:
  2760  000144  0005               	push	
  2761  000146  6EFA               	movwf	pclath,c
  2762  000148  504D               	movf	??_ProcessPeriodic,w,c
  2763  00014A  6EFD               	movwf	tosl,c
  2764  00014C  504E               	movf	??_ProcessPeriodic+1,w,c
  2765  00014E  6EFE               	movwf	tosh,c
  2766  000150  6AFF               	clrf	tosu,c
  2767  000152  50FA               	movf	pclath,w,c
  2768  000154  0012               	return		;indir
  2769  000156                     l2736:
  2770                           
  2771                           ;Application.c: 214:                 {;Application.c: 215:                     RxCks = 0
      +                          ;
  2772  000156  0E00               	movlw	0
  2773  000158  6E29               	movwf	ProcessPeriodic@RxCks,c
  2774                           
  2775                           ;Application.c: 217:                     if(((StrCommand[2] == '+') || (StrCommand[2] ==
      +                           '-')) && (StrCommand[5] == '.'))
  2776  00015A  0E2B               	movlw	43
  2777  00015C  0100               	movlb	0	; () banked
  2778  00015E  1962               	xorwf	(ProcessPeriodic@StrCommand+2)& (0+255),w,b
  2779  000160  B4D8               	btfsc	status,2,c
  2780  000162  D004               	goto	u1570
  2781                           
  2782                           ; BSR set to: 0
  2783  000164  0E2D               	movlw	45
  2784  000166  1962               	xorwf	(ProcessPeriodic@StrCommand+2)& (0+255),w,b
  2785  000168  A4D8               	btfss	status,2,c
  2786  00016A  D05C               	goto	l2804
  2787  00016C                     u1570:
  2788                           
  2789                           ; BSR set to: 0
  2790  00016C  0E2E               	movlw	46
  2791  00016E  1965               	xorwf	(ProcessPeriodic@StrCommand+5)& (0+255),w,b
  2792  000170  A4D8               	btfss	status,2,c
  2793  000172  D058               	goto	l2804
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;Application.c: 218:                     {;Application.c: 219:                         f
      +                          or(i = 0; i < 8; i++)
  2797  000174  0E00               	movlw	0
  2798  000176  6E28               	movwf	ProcessPeriodic@i,c
  2799  000178                     l2750:
  2800                           
  2801                           ;Application.c: 220:                         {;Application.c: 221:                      
      +                                 RxCks ^= StrCommand[2 + i];
  2802  000178  0E62               	movlw	low (ProcessPeriodic@StrCommand+2)
  2803  00017A  2428               	addwf	ProcessPeriodic@i,w,c
  2804  00017C  6ED9               	movwf	fsr2l,c
  2805  00017E  6ADA               	clrf	fsr2h,c
  2806  000180  0E00               	movlw	high (ProcessPeriodic@StrCommand+2)
  2807  000182  22DA               	addwfc	fsr2h,f,c
  2808  000184  50DF               	movf	indf2,w,c
  2809  000186  1A29               	xorwf	ProcessPeriodic@RxCks,f,c
  2810                           
  2811                           ;Application.c: 222:                         }
  2812  000188  2A28               	incf	ProcessPeriodic@i,f,c
  2813  00018A  0E07               	movlw	7
  2814  00018C  6428               	cpfsgt	ProcessPeriodic@i,c
  2815  00018E  D7F4               	goto	l2750
  2816                           
  2817                           ;Application.c: 223:                         if(RxCks == 0)
  2818  000190  5029               	movf	ProcessPeriodic@RxCks,w,c
  2819  000192  A4D8               	btfss	status,2,c
  2820  000194  D047               	goto	l2804
  2821                           
  2822                           ;Application.c: 224:                         {;Application.c: 225:                      
      +                                 for(i = 0; i < 5; i++)
  2823  000196  0E00               	movlw	0
  2824  000198  6E28               	movwf	ProcessPeriodic@i,c
  2825  00019A                     l2764:
  2826                           
  2827                           ;Application.c: 226:                             {;Application.c: 227:                  
      +                                         StrTemp[i] = StrCommand[2 + i];
  2828  00019A  0E62               	movlw	low (ProcessPeriodic@StrCommand+2)
  2829  00019C  2428               	addwf	ProcessPeriodic@i,w,c
  2830  00019E  6ED9               	movwf	fsr2l,c
  2831  0001A0  6ADA               	clrf	fsr2h,c
  2832  0001A2  0E00               	movlw	high (ProcessPeriodic@StrCommand+2)
  2833  0001A4  22DA               	addwfc	fsr2h,f,c
  2834  0001A6  0E34               	movlw	low _StrTemp
  2835  0001A8  2428               	addwf	ProcessPeriodic@i,w,c
  2836  0001AA  6EE1               	movwf	fsr1l,c
  2837  0001AC  6AE2               	clrf	fsr1h,c
  2838  0001AE  0E00               	movlw	high _StrTemp
  2839  0001B0  22E2               	addwfc	fsr1h,f,c
  2840  0001B2  CFDF FFE7          	movff	indf2,indf1
  2841                           
  2842                           ;Application.c: 228:                             }
  2843  0001B6  2A28               	incf	ProcessPeriodic@i,f,c
  2844  0001B8  0E04               	movlw	4
  2845  0001BA  6428               	cpfsgt	ProcessPeriodic@i,c
  2846  0001BC  D7EE               	goto	l2764
  2847                           
  2848                           ;Application.c: 229:                             for(i = 0; i < 2; i++)
  2849  0001BE  0E00               	movlw	0
  2850  0001C0  6E28               	movwf	ProcessPeriodic@i,c
  2851  0001C2                     l2776:
  2852                           
  2853                           ;Application.c: 230:                             {;Application.c: 231:                  
      +                                         StrRH[i] = StrCommand[7 + i];
  2854  0001C2  0E67               	movlw	low (ProcessPeriodic@StrCommand+7)
  2855  0001C4  2428               	addwf	ProcessPeriodic@i,w,c
  2856  0001C6  6ED9               	movwf	fsr2l,c
  2857  0001C8  6ADA               	clrf	fsr2h,c
  2858  0001CA  0E00               	movlw	high (ProcessPeriodic@StrCommand+7)
  2859  0001CC  22DA               	addwfc	fsr2h,f,c
  2860  0001CE  0E2F               	movlw	low _StrRH
  2861  0001D0  2428               	addwf	ProcessPeriodic@i,w,c
  2862  0001D2  6EE1               	movwf	fsr1l,c
  2863  0001D4  6AE2               	clrf	fsr1h,c
  2864  0001D6  0E00               	movlw	high _StrRH
  2865  0001D8  22E2               	addwfc	fsr1h,f,c
  2866  0001DA  CFDF FFE7          	movff	indf2,indf1
  2867                           
  2868                           ;Application.c: 232:                             }
  2869  0001DE  2A28               	incf	ProcessPeriodic@i,f,c
  2870  0001E0  0E01               	movlw	1
  2871  0001E2  6428               	cpfsgt	ProcessPeriodic@i,c
  2872  0001E4  D7EE               	goto	l2776
  2873                           
  2874                           ;Application.c: 233:                             PrintData((uint8_t*)StrTemp, (uint8_t*)
      +                          StrRH);
  2875  0001E6  0E34               	movlw	low _StrTemp
  2876  0001E8  6E49               	movwf	PrintData@StrTemp,c
  2877  0001EA  0E00               	movlw	high _StrTemp
  2878  0001EC  6E4A               	movwf	PrintData@StrTemp+1,c
  2879  0001EE  0E2F               	movlw	low _StrRH
  2880  0001F0  6E4B               	movwf	PrintData@StrRH,c
  2881  0001F2  0E00               	movlw	high _StrRH
  2882  0001F4  6E4C               	movwf	PrintData@StrRH+1,c
  2883  0001F6  EC28  F001         	call	_PrintData	;wreg free
  2884                           
  2885                           ;Application.c: 235:                             StrCommand[0] = 0;
  2886  0001FA  0E00               	movlw	0
  2887  0001FC  0100               	movlb	0	; () banked
  2888  0001FE  6F60               	movwf	ProcessPeriodic@StrCommand& (0+255),b
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;Application.c: 236:                             StrCommand[1] = 0;
  2892  000200  0E00               	movlw	0
  2893  000202  6F61               	movwf	(ProcessPeriodic@StrCommand+1)& (0+255),b
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;Application.c: 237:                             StrCommand[2] = 0;
  2897  000204  0E00               	movlw	0
  2898  000206  6F62               	movwf	(ProcessPeriodic@StrCommand+2)& (0+255),b
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;Application.c: 238:                             StrCommand[3] = 0;
  2902  000208  0E00               	movlw	0
  2903  00020A  6F63               	movwf	(ProcessPeriodic@StrCommand+3)& (0+255),b
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;Application.c: 239:                             StrCommand[4] = 0;
  2907  00020C  0E00               	movlw	0
  2908  00020E  6F64               	movwf	(ProcessPeriodic@StrCommand+4)& (0+255),b
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;Application.c: 240:                             StrCommand[5] = 0;
  2912  000210  0E00               	movlw	0
  2913  000212  6F65               	movwf	(ProcessPeriodic@StrCommand+5)& (0+255),b
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;Application.c: 241:                             StrCommand[6] = 0;
  2917  000214  0E00               	movlw	0
  2918  000216  6F66               	movwf	(ProcessPeriodic@StrCommand+6)& (0+255),b
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;Application.c: 242:                             StrCommand[7] = 0;
  2922  000218  0E00               	movlw	0
  2923  00021A  6F67               	movwf	(ProcessPeriodic@StrCommand+7)& (0+255),b
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;Application.c: 243:                             StrCommand[8] = 0;
  2927  00021C  0E00               	movlw	0
  2928  00021E  6F68               	movwf	(ProcessPeriodic@StrCommand+8)& (0+255),b
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;Application.c: 244:                             StrCommand[9] = 0;
  2932  000220  0E00               	movlw	0
  2933  000222  6F69               	movwf	(ProcessPeriodic@StrCommand+9)& (0+255),b
  2934  000224                     l2804:
  2935                           
  2936                           ;Application.c: 248:             }
  2937  000224  2A2A               	incf	ProcessPeriodic@Mask,f,c
  2938  000226  0E08               	movlw	8
  2939  000228  642A               	cpfsgt	ProcessPeriodic@Mask,c
  2940  00022A  D744               	goto	l2726
  2941  00022C                     u1630:
  2942                           
  2943                           ;Application.c: 249:         }
  2944  00022C  2A2B               	incf	ProcessPeriodic@Index,f,c
  2945  00022E  0E02               	movlw	2
  2946  000230  642B               	cpfsgt	ProcessPeriodic@Index,c
  2947  000232  D73E               	goto	l2720
  2948  000234                     u1640:
  2949                           
  2950                           ;Application.c: 177:     while(fifo_dequeue(&AplicationQueue, &RS485Data) == 1)
  2951  000234  0EB1               	movlw	low _AplicationQueue
  2952  000236  6E3D               	movwf	fifo_dequeue@p_fifo,c
  2953  000238  0E00               	movlw	high _AplicationQueue
  2954  00023A  6E3E               	movwf	fifo_dequeue@p_fifo+1,c
  2955  00023C  0E3A               	movlw	low ProcessPeriodic@RS485Data
  2956  00023E  6E3F               	movwf	fifo_dequeue@p_data,c
  2957  000240  0E00               	movlw	high ProcessPeriodic@RS485Data
  2958  000242  6E40               	movwf	fifo_dequeue@p_data+1,c
  2959  000244  ECCE  F002         	call	_fifo_dequeue	;wreg free
  2960  000248  06E8               	decf	wreg,f,c
  2961  00024A  A4D8               	btfss	status,2,c
  2962  00024C  0012               	return	
  2963  00024E  D71A               	goto	l334
  2964  000250                     __end_of_ProcessPeriodic:
  2965                           	opt callstack 0
  2966                           
  2967 ;; *************** function _memcmp *****************
  2968 ;; Defined at:
  2969 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memcmp.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  vl              2    2[COMRAM] PTR const void 
  2972 ;;		 -> ProcessPeriodic@StrCommand(45), 
  2973 ;;  vr              2    4[COMRAM] PTR const void 
  2974 ;;		 -> ProcessVector.Str485Command(9), ProcessVector(36), 
  2975 ;;  n               2    6[COMRAM] unsigned int 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  r               2   12[COMRAM] PTR const unsigned char 
  2978 ;;		 -> ProcessVector.Str485Command(9), ProcessVector(36), 
  2979 ;;  l               2   10[COMRAM] PTR const unsigned char 
  2980 ;;		 -> ProcessPeriodic@StrCommand(45), 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  2    2[COMRAM] int 
  2983 ;; Registers used:
  2984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2990 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;Total ram usage:       12 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    4
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_ProcessPeriodic
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text11
  3005  000A22                     __ptext11:
  3006                           	opt callstack 0
  3007  000A22                     _memcmp:
  3008                           	opt callstack 25
  3009                           
  3010                           ;incstack = 0
  3011  000A22  C03D  F045         	movff	memcmp@vl,memcmp@l
  3012  000A26  C03E  F046         	movff	memcmp@vl+1,memcmp@l+1
  3013  000A2A  C03F  F047         	movff	memcmp@vr,memcmp@r
  3014  000A2E  C040  F048         	movff	memcmp@vr+1,memcmp@r+1
  3015  000A32  D007               	goto	l2582
  3016  000A34                     l2580:
  3017  000A34  0641               	decf	memcmp@n,f,c
  3018  000A36  A0D8               	btfss	status,0,c
  3019  000A38  0642               	decf	memcmp@n+1,f,c
  3020  000A3A  4A45               	infsnz	memcmp@l,f,c
  3021  000A3C  2A46               	incf	memcmp@l+1,f,c
  3022  000A3E  4A47               	infsnz	memcmp@r,f,c
  3023  000A40  2A48               	incf	memcmp@r+1,f,c
  3024  000A42                     l2582:
  3025  000A42  5041               	movf	memcmp@n,w,c
  3026  000A44  1042               	iorwf	memcmp@n+1,w,c
  3027  000A46  B4D8               	btfsc	status,2,c
  3028  000A48  D00C               	goto	u1450
  3029  000A4A  C047  FFD9         	movff	memcmp@r,fsr2l
  3030  000A4E  C048  FFDA         	movff	memcmp@r+1,fsr2h
  3031  000A52  C045  FFE1         	movff	memcmp@l,fsr1l
  3032  000A56  C046  FFE2         	movff	memcmp@l+1,fsr1h
  3033  000A5A  50DE               	movf	postinc2,w,c
  3034  000A5C  18E6               	xorwf	postinc1,w,c
  3035  000A5E  B4D8               	btfsc	status,2,c
  3036  000A60  D7E9               	goto	l2580
  3037  000A62                     u1450:
  3038  000A62  5041               	movf	memcmp@n,w,c
  3039  000A64  1042               	iorwf	memcmp@n+1,w,c
  3040  000A66  A4D8               	btfss	status,2,c
  3041  000A68  D005               	goto	l2590
  3042  000A6A  0E00               	movlw	0
  3043  000A6C  6E3E               	movwf	?_memcmp+1,c
  3044  000A6E  0E00               	movlw	0
  3045  000A70  6E3D               	movwf	?_memcmp,c
  3046  000A72  0012               	return	
  3047  000A74                     l2590:
  3048  000A74  C045  FFD9         	movff	memcmp@l,fsr2l
  3049  000A78  C046  FFDA         	movff	memcmp@l+1,fsr2h
  3050  000A7C  50DF               	movf	indf2,w,c
  3051  000A7E  6E43               	movwf	??_memcmp& (0+255),c
  3052  000A80  C047  FFD9         	movff	memcmp@r,fsr2l
  3053  000A84  C048  FFDA         	movff	memcmp@r+1,fsr2h
  3054  000A88  50DF               	movf	indf2,w,c
  3055  000A8A  6E44               	movwf	(??_memcmp+1)& (0+255),c
  3056  000A8C  5044               	movf	??_memcmp+1,w,c
  3057  000A8E  5C43               	subwf	??_memcmp,w,c
  3058  000A90  6E3D               	movwf	?_memcmp,c
  3059  000A92  6A3E               	clrf	?_memcmp+1,c
  3060  000A94  A0D8               	btfss	status,0,c
  3061  000A96  063E               	decf	?_memcmp+1,f,c
  3062  000A98  0012               	return		;funcret
  3063  000A9A                     __end_of_memcmp:
  3064                           	opt callstack 0
  3065                           
  3066 ;; *************** function _fifo_queue *****************
  3067 ;; Defined at:
  3068 ;;		line 46 in file "Queue.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  p_fifo          2    2[COMRAM] PTR struct .
  3071 ;;		 -> AplicationQueue(24), 
  3072 ;;  p_data          1    4[COMRAM] unsigned char 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  result          1    0        unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      unsigned char 
  3077 ;; Registers used:
  3078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3084 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;Total ram usage:        7 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    4
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_ProcessPeriodic
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text12
  3099  0007D6                     __ptext12:
  3100                           	opt callstack 0
  3101  0007D6                     _fifo_queue:
  3102                           	opt callstack 25
  3103                           
  3104                           ;Queue.c: 50:     if (p_fifo->full == 0)
  3105                           
  3106                           ;incstack = 0
  3107  0007D6  EE20 F017          	lfsr	2,23
  3108  0007DA  503D               	movf	fifo_queue@p_fifo,w,c
  3109  0007DC  26D9               	addwf	fsr2l,f,c
  3110  0007DE  503E               	movf	fifo_queue@p_fifo+1,w,c
  3111  0007E0  22DA               	addwfc	fsr2h,f,c
  3112  0007E2  50DF               	movf	indf2,w,c
  3113  0007E4  A4D8               	btfss	status,2,c
  3114  0007E6  0012               	return	
  3115                           
  3116                           ;Queue.c: 51:     {;Queue.c: 52:         p_fifo->v_data[p_fifo->back] = p_data;
  3117  0007E8  EE20 F016          	lfsr	2,22
  3118  0007EC  503D               	movf	fifo_queue@p_fifo,w,c
  3119  0007EE  26D9               	addwf	fsr2l,f,c
  3120  0007F0  503E               	movf	fifo_queue@p_fifo+1,w,c
  3121  0007F2  22DA               	addwfc	fsr2h,f,c
  3122  0007F4  50DF               	movf	indf2,w,c
  3123  0007F6  6E40               	movwf	??_fifo_queue& (0+255),c
  3124  0007F8  5040               	movf	??_fifo_queue,w,c
  3125  0007FA  243D               	addwf	fifo_queue@p_fifo,w,c
  3126  0007FC  6E41               	movwf	(??_fifo_queue+1)& (0+255),c
  3127  0007FE  0E00               	movlw	0
  3128  000800  203E               	addwfc	fifo_queue@p_fifo+1,w,c
  3129  000802  6E42               	movwf	(??_fifo_queue+2)& (0+255),c
  3130  000804  0E01               	movlw	1
  3131  000806  2441               	addwf	??_fifo_queue+1,w,c
  3132  000808  6ED9               	movwf	fsr2l,c
  3133  00080A  0E00               	movlw	0
  3134  00080C  2042               	addwfc	??_fifo_queue+2,w,c
  3135  00080E  6EDA               	movwf	fsr2h,c
  3136  000810  C03F  FFDF         	movff	fifo_queue@p_data,indf2
  3137                           
  3138                           ;Queue.c: 53:         p_fifo->back++;
  3139  000814  EE20 F016          	lfsr	2,22
  3140  000818  503D               	movf	fifo_queue@p_fifo,w,c
  3141  00081A  26D9               	addwf	fsr2l,f,c
  3142  00081C  503E               	movf	fifo_queue@p_fifo+1,w,c
  3143  00081E  22DA               	addwfc	fsr2h,f,c
  3144  000820  2ADF               	incf	indf2,f,c
  3145                           
  3146                           ;Queue.c: 55:         if (p_fifo->back == p_fifo->size)
  3147  000822  C03D  FFD9         	movff	fifo_queue@p_fifo,fsr2l
  3148  000826  C03E  FFDA         	movff	fifo_queue@p_fifo+1,fsr2h
  3149  00082A  EE10 F016          	lfsr	1,22
  3150  00082E  503D               	movf	fifo_queue@p_fifo,w,c
  3151  000830  26E1               	addwf	fsr1l,f,c
  3152  000832  503E               	movf	fifo_queue@p_fifo+1,w,c
  3153  000834  22E2               	addwfc	fsr1h,f,c
  3154  000836  50DE               	movf	postinc2,w,c
  3155  000838  18E6               	xorwf	postinc1,w,c
  3156  00083A  A4D8               	btfss	status,2,c
  3157  00083C  D008               	goto	l2570
  3158                           
  3159                           ;Queue.c: 56:         {;Queue.c: 57:             p_fifo->back = 0;
  3160  00083E  EE20 F016          	lfsr	2,22
  3161  000842  503D               	movf	fifo_queue@p_fifo,w,c
  3162  000844  26D9               	addwf	fsr2l,f,c
  3163  000846  503E               	movf	fifo_queue@p_fifo+1,w,c
  3164  000848  22DA               	addwfc	fsr2h,f,c
  3165  00084A  0E00               	movlw	0
  3166  00084C  6EDF               	movwf	indf2,c
  3167  00084E                     l2570:
  3168                           
  3169                           ;Queue.c: 59:         if (p_fifo->back == p_fifo->front)
  3170  00084E  EE20 F015          	lfsr	2,21
  3171  000852  503D               	movf	fifo_queue@p_fifo,w,c
  3172  000854  26D9               	addwf	fsr2l,f,c
  3173  000856  503E               	movf	fifo_queue@p_fifo+1,w,c
  3174  000858  22DA               	addwfc	fsr2h,f,c
  3175  00085A  EE10 F016          	lfsr	1,22
  3176  00085E  503D               	movf	fifo_queue@p_fifo,w,c
  3177  000860  26E1               	addwf	fsr1l,f,c
  3178  000862  503E               	movf	fifo_queue@p_fifo+1,w,c
  3179  000864  22E2               	addwfc	fsr1h,f,c
  3180  000866  50DE               	movf	postinc2,w,c
  3181  000868  18E6               	xorwf	postinc1,w,c
  3182  00086A  A4D8               	btfss	status,2,c
  3183  00086C  0012               	return	
  3184                           
  3185                           ;Queue.c: 60:         {;Queue.c: 61:             p_fifo->full = 1;
  3186  00086E  EE20 F017          	lfsr	2,23
  3187  000872  503D               	movf	fifo_queue@p_fifo,w,c
  3188  000874  26D9               	addwf	fsr2l,f,c
  3189  000876  503E               	movf	fifo_queue@p_fifo+1,w,c
  3190  000878  22DA               	addwfc	fsr2h,f,c
  3191  00087A  0E01               	movlw	1
  3192  00087C  6EDF               	movwf	indf2,c
  3193  00087E  0012               	return		;funcret
  3194  000880                     __end_of_fifo_queue:
  3195                           	opt callstack 0
  3196                           
  3197 ;; *************** function _fifo_dequeue *****************
  3198 ;; Defined at:
  3199 ;;		line 77 in file "Queue.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  p_fifo          2    2[COMRAM] PTR struct .
  3202 ;;		 -> AplicationQueue(24), 
  3203 ;;  p_data          2    4[COMRAM] PTR unsigned char 
  3204 ;;		 -> ProcessPeriodic@RS485Data(1), 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  result          1    9[COMRAM] unsigned char 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      unsigned char 
  3209 ;; Registers used:
  3210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;Total ram usage:        8 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    4
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_ProcessPeriodic
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text13
  3231  00059C                     __ptext13:
  3232                           	opt callstack 0
  3233  00059C                     _fifo_dequeue:
  3234                           	opt callstack 25
  3235                           
  3236                           ;Queue.c: 77: uint8_t fifo_dequeue(fifo_t* p_fifo, uint8_t* p_data);Queue.c: 78: {;Queue
      +                          .c: 79:     uint8_t result = 0;
  3237                           
  3238                           ;incstack = 0
  3239  00059C  0E00               	movlw	0
  3240  00059E  6E44               	movwf	fifo_dequeue@result,c
  3241                           
  3242                           ;Queue.c: 81:     if (!(p_fifo->back == p_fifo->front) && (p_fifo->full == 0))
  3243  0005A0  EE20 F015          	lfsr	2,21
  3244  0005A4  503D               	movf	fifo_dequeue@p_fifo,w,c
  3245  0005A6  26D9               	addwf	fsr2l,f,c
  3246  0005A8  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3247  0005AA  22DA               	addwfc	fsr2h,f,c
  3248  0005AC  EE10 F016          	lfsr	1,22
  3249  0005B0  503D               	movf	fifo_dequeue@p_fifo,w,c
  3250  0005B2  26E1               	addwf	fsr1l,f,c
  3251  0005B4  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3252  0005B6  22E2               	addwfc	fsr1h,f,c
  3253  0005B8  50DE               	movf	postinc2,w,c
  3254  0005BA  18E6               	xorwf	postinc1,w,c
  3255  0005BC  B4D8               	btfsc	status,2,c
  3256  0005BE  D053               	goto	l2662
  3257  0005C0  EE20 F017          	lfsr	2,23
  3258  0005C4  503D               	movf	fifo_dequeue@p_fifo,w,c
  3259  0005C6  26D9               	addwf	fsr2l,f,c
  3260  0005C8  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3261  0005CA  22DA               	addwfc	fsr2h,f,c
  3262  0005CC  50DF               	movf	indf2,w,c
  3263  0005CE  A4D8               	btfss	status,2,c
  3264  0005D0  D04A               	goto	l2662
  3265                           
  3266                           ;Queue.c: 82:     {;Queue.c: 83:         if (p_fifo->full == 1)
  3267  0005D2  EE20 F017          	lfsr	2,23
  3268  0005D6  503D               	movf	fifo_dequeue@p_fifo,w,c
  3269  0005D8  26D9               	addwf	fsr2l,f,c
  3270  0005DA  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3271  0005DC  22DA               	addwfc	fsr2h,f,c
  3272  0005DE  04DE               	decf	postinc2,w,c
  3273  0005E0  A4D8               	btfss	status,2,c
  3274  0005E2  D008               	goto	l2654
  3275                           
  3276                           ;Queue.c: 84:         {;Queue.c: 85:             p_fifo->full = 0;
  3277  0005E4  EE20 F017          	lfsr	2,23
  3278  0005E8  503D               	movf	fifo_dequeue@p_fifo,w,c
  3279  0005EA  26D9               	addwf	fsr2l,f,c
  3280  0005EC  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3281  0005EE  22DA               	addwfc	fsr2h,f,c
  3282  0005F0  0E00               	movlw	0
  3283  0005F2  6EDF               	movwf	indf2,c
  3284  0005F4                     l2654:
  3285                           
  3286                           ;Queue.c: 87:         *p_data = p_fifo->v_data[p_fifo->front];
  3287  0005F4  EE20 F015          	lfsr	2,21
  3288  0005F8  503D               	movf	fifo_dequeue@p_fifo,w,c
  3289  0005FA  26D9               	addwf	fsr2l,f,c
  3290  0005FC  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3291  0005FE  22DA               	addwfc	fsr2h,f,c
  3292  000600  50DF               	movf	indf2,w,c
  3293  000602  6E41               	movwf	??_fifo_dequeue& (0+255),c
  3294  000604  5041               	movf	??_fifo_dequeue,w,c
  3295  000606  243D               	addwf	fifo_dequeue@p_fifo,w,c
  3296  000608  6E42               	movwf	(??_fifo_dequeue+1)& (0+255),c
  3297  00060A  0E00               	movlw	0
  3298  00060C  203E               	addwfc	fifo_dequeue@p_fifo+1,w,c
  3299  00060E  6E43               	movwf	(??_fifo_dequeue+2)& (0+255),c
  3300  000610  0E01               	movlw	1
  3301  000612  2442               	addwf	??_fifo_dequeue+1,w,c
  3302  000614  6ED9               	movwf	fsr2l,c
  3303  000616  0E00               	movlw	0
  3304  000618  2043               	addwfc	??_fifo_dequeue+2,w,c
  3305  00061A  6EDA               	movwf	fsr2h,c
  3306  00061C  C03F  FFE1         	movff	fifo_dequeue@p_data,fsr1l
  3307  000620  C040  FFE2         	movff	fifo_dequeue@p_data+1,fsr1h
  3308  000624  CFDF FFE7          	movff	indf2,indf1
  3309                           
  3310                           ;Queue.c: 88:         p_fifo->front++;
  3311  000628  EE20 F015          	lfsr	2,21
  3312  00062C  503D               	movf	fifo_dequeue@p_fifo,w,c
  3313  00062E  26D9               	addwf	fsr2l,f,c
  3314  000630  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3315  000632  22DA               	addwfc	fsr2h,f,c
  3316  000634  2ADF               	incf	indf2,f,c
  3317                           
  3318                           ;Queue.c: 91:         if (p_fifo->front == (p_fifo->size))
  3319  000636  C03D  FFD9         	movff	fifo_dequeue@p_fifo,fsr2l
  3320  00063A  C03E  FFDA         	movff	fifo_dequeue@p_fifo+1,fsr2h
  3321  00063E  EE10 F015          	lfsr	1,21
  3322  000642  503D               	movf	fifo_dequeue@p_fifo,w,c
  3323  000644  26E1               	addwf	fsr1l,f,c
  3324  000646  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3325  000648  22E2               	addwfc	fsr1h,f,c
  3326  00064A  50DE               	movf	postinc2,w,c
  3327  00064C  18E6               	xorwf	postinc1,w,c
  3328  00064E  A4D8               	btfss	status,2,c
  3329  000650  D008               	goto	l2660
  3330                           
  3331                           ;Queue.c: 92:         {;Queue.c: 93:             p_fifo->front = 0;
  3332  000652  EE20 F015          	lfsr	2,21
  3333  000656  503D               	movf	fifo_dequeue@p_fifo,w,c
  3334  000658  26D9               	addwf	fsr2l,f,c
  3335  00065A  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3336  00065C  22DA               	addwfc	fsr2h,f,c
  3337  00065E  0E00               	movlw	0
  3338  000660  6EDF               	movwf	indf2,c
  3339  000662                     l2660:
  3340                           
  3341                           ;Queue.c: 95:         result = 1;
  3342  000662  0E01               	movlw	1
  3343  000664  6E44               	movwf	fifo_dequeue@result,c
  3344  000666                     l2662:
  3345                           
  3346                           ;Queue.c: 97:     return (result);
  3347  000666  5044               	movf	fifo_dequeue@result,w,c
  3348  000668  0012               	return		;funcret
  3349  00066A                     __end_of_fifo_dequeue:
  3350                           	opt callstack 0
  3351                           
  3352 ;; *************** function _SendBT *****************
  3353 ;; Defined at:
  3354 ;;		line 98 in file "Application.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;Total ram usage:        0 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    6
  3375 ;; This function calls:
  3376 ;;		_PutsRS485
  3377 ;; This function is called by:
  3378 ;;		_ProcessInit
  3379 ;;		_ProcessPeriodic
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text14
  3384  000F54                     __ptext14:
  3385                           	opt callstack 0
  3386  000F54                     _SendBT:
  3387                           	opt callstack 23
  3388                           
  3389                           ;Application.c: 101:     PutsRS485((char*)"Bt");
  3390                           
  3391                           ;incstack = 0
  3392  000F54  0EB5               	movlw	low STR_3
  3393  000F56  6E41               	movwf	PutsRS485@s,c
  3394  000F58  0EFD               	movlw	high STR_3
  3395  000F5A  6E42               	movwf	PutsRS485@s+1,c
  3396  000F5C  ECAF  F005         	call	_PutsRS485	;wreg free
  3397  000F60  0012               	return		;funcret
  3398  000F62                     __end_of_SendBT:
  3399                           	opt callstack 0
  3400                           
  3401 ;; *************** function _SendCX *****************
  3402 ;; Defined at:
  3403 ;;		line 81 in file "Application.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    6
  3424 ;; This function calls:
  3425 ;;		_PutsRS485
  3426 ;; This function is called by:
  3427 ;;		_ProcessInit
  3428 ;;		_ProcessPeriodic
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text15
  3433  000F62                     __ptext15:
  3434                           	opt callstack 0
  3435  000F62                     _SendCX:
  3436                           	opt callstack 23
  3437                           
  3438                           ;Application.c: 83:     PutsRS485((char*)"Cx");
  3439                           
  3440                           ;incstack = 0
  3441  000F62  0EB8               	movlw	low STR_1
  3442  000F64  6E41               	movwf	PutsRS485@s,c
  3443  000F66  0EFD               	movlw	high STR_1
  3444  000F68  6E42               	movwf	PutsRS485@s+1,c
  3445  000F6A  ECAF  F005         	call	_PutsRS485	;wreg free
  3446  000F6E  0012               	return		;funcret
  3447  000F70                     __end_of_SendCX:
  3448                           	opt callstack 0
  3449                           
  3450 ;; *************** function _SendSY *****************
  3451 ;; Defined at:
  3452 ;;		line 89 in file "Application.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;		None
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;Total ram usage:        0 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    6
  3473 ;; This function calls:
  3474 ;;		_PutsRS485
  3475 ;; This function is called by:
  3476 ;;		_ProcessInit
  3477 ;;		_ProcessPeriodic
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text16
  3482  000F70                     __ptext16:
  3483                           	opt callstack 0
  3484  000F70                     _SendSY:
  3485                           	opt callstack 23
  3486                           
  3487                           ;Application.c: 92:     PutsRS485((char*)"Sy");
  3488                           
  3489                           ;incstack = 0
  3490  000F70  0EBB               	movlw	low STR_2
  3491  000F72  6E41               	movwf	PutsRS485@s,c
  3492  000F74  0EFD               	movlw	high STR_2
  3493  000F76  6E42               	movwf	PutsRS485@s+1,c
  3494  000F78  ECAF  F005         	call	_PutsRS485	;wreg free
  3495  000F7C  0012               	return		;funcret
  3496  000F7E                     __end_of_SendSY:
  3497                           	opt callstack 0
  3498                           
  3499 ;; *************** function _PutsRS485 *****************
  3500 ;; Defined at:
  3501 ;;		line 19 in file "Rs485.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  s               2    6[COMRAM] PTR unsigned char 
  3504 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  i               2   10[COMRAM] int 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;Total ram usage:        6 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    5
  3523 ;; This function calls:
  3524 ;;		_EUSART_Write
  3525 ;;		_EUSART_is_tx_done
  3526 ;;		_strlen
  3527 ;; This function is called by:
  3528 ;;		_SendCX
  3529 ;;		_SendSY
  3530 ;;		_SendBT
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text17
  3535  000B5E                     __ptext17:
  3536                           	opt callstack 0
  3537  000B5E                     _PutsRS485:
  3538                           	opt callstack 23
  3539                           
  3540                           ;incstack = 0
  3541                           ;Rs485.c: 19: void PutsRS485( char* s );Rs485.c: 20: {;Rs485.c: 21:     do { LATDbits.LA
      +                          TD0 = 1; } while(0);
  3542  000B5E  808C               	bsf	3980,0,c	;volatile
  3543                           
  3544                           ;Rs485.c: 23:     for( int i = 0; i < strlen(s); i++ )
  3545  000B60  0E00               	movlw	0
  3546  000B62  6E46               	movwf	PutsRS485@i+1,c
  3547  000B64  0E00               	movlw	0
  3548  000B66  6E45               	movwf	PutsRS485@i,c
  3549  000B68  D011               	goto	l2260
  3550  000B6A                     l2256:
  3551                           
  3552                           ;Rs485.c: 24:     {;Rs485.c: 25:         EUSART_Write(s[i]);
  3553  000B6A  5045               	movf	PutsRS485@i,w,c
  3554  000B6C  2441               	addwf	PutsRS485@s,w,c
  3555  000B6E  6E43               	movwf	??_PutsRS485& (0+255),c
  3556  000B70  5046               	movf	PutsRS485@i+1,w,c
  3557  000B72  2042               	addwfc	PutsRS485@s+1,w,c
  3558  000B74  6E44               	movwf	(??_PutsRS485+1)& (0+255),c
  3559  000B76  C043  FFF6         	movff	??_PutsRS485,tblptrl
  3560  000B7A  C044  FFF7         	movff	??_PutsRS485+1,tblptrh
  3561  000B7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3562  000B7E  6AF8               	clrf	tblptru,c
  3563  000B80                     	endif
  3564  000B80                     	if	0	;tblptru may be non-zero
  3565  000B80                     	endif
  3566  000B80  0008               	tblrd		*
  3567  000B82  50F5               	movf	tablat,w,c
  3568  000B84  ECC5  F007         	call	_EUSART_Write
  3569                           
  3570                           ;Rs485.c: 26:     }
  3571  000B88  4A45               	infsnz	PutsRS485@i,f,c
  3572  000B8A  2A46               	incf	PutsRS485@i+1,f,c
  3573  000B8C                     l2260:
  3574  000B8C  C041  F03D         	movff	PutsRS485@s,strlen@s
  3575  000B90  C042  F03E         	movff	PutsRS485@s+1,strlen@s+1
  3576  000B94  ECF1  F006         	call	_strlen	;wreg free
  3577  000B98  503D               	movf	?_strlen,w,c
  3578  000B9A  5C45               	subwf	PutsRS485@i,w,c
  3579  000B9C  503E               	movf	?_strlen+1,w,c
  3580  000B9E  5846               	subwfb	PutsRS485@i+1,w,c
  3581  000BA0  A0D8               	btfss	status,0,c
  3582  000BA2  D7E3               	goto	l2256
  3583  000BA4                     u1080:
  3584                           
  3585                           ;Rs485.c: 28:     while(!EUSART_is_tx_done())
  3586  000BA4  ECBF  F007         	call	_EUSART_is_tx_done	;wreg free
  3587  000BA8  0900               	iorlw	0
  3588  000BAA  B4D8               	btfsc	status,2,c
  3589  000BAC  D7FB               	goto	u1080
  3590                           
  3591                           ;Rs485.c: 33:     do { LATDbits.LATD0 = 0; } while(0);
  3592  000BAE  908C               	bcf	3980,0,c	;volatile
  3593  000BB0  0012               	return		;funcret
  3594  000BB2                     __end_of_PutsRS485:
  3595                           	opt callstack 0
  3596                           
  3597 ;; *************** function _strlen *****************
  3598 ;; Defined at:
  3599 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  s               2    2[COMRAM] PTR const unsigned char 
  3602 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  a               2    4[COMRAM] PTR const unsigned char 
  3605 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  2    2[COMRAM] unsigned int 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;Total ram usage:        4 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    4
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_PutsRS485
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text18
  3630  000DE2                     __ptext18:
  3631                           	opt callstack 0
  3632  000DE2                     _strlen:
  3633                           	opt callstack 23
  3634                           
  3635                           ;incstack = 0
  3636  000DE2  C03D  F03F         	movff	strlen@s,strlen@a
  3637  000DE6  C03E  F040         	movff	strlen@s+1,strlen@a+1
  3638  000DEA  D002               	goto	l2222
  3639  000DEC                     l2220:
  3640  000DEC  4A3D               	infsnz	strlen@s,f,c
  3641  000DEE  2A3E               	incf	strlen@s+1,f,c
  3642  000DF0                     l2222:
  3643  000DF0  C03D  FFF6         	movff	strlen@s,tblptrl
  3644  000DF4  C03E  FFF7         	movff	strlen@s+1,tblptrh
  3645  000DF8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3646  000DF8  6AF8               	clrf	tblptru,c
  3647  000DFA                     	endif
  3648  000DFA                     	if	0	;tblptru may be non-zero
  3649  000DFA                     	endif
  3650  000DFA  0008               	tblrd		*
  3651  000DFC  50F5               	movf	tablat,w,c
  3652  000DFE  0900               	iorlw	0
  3653  000E00  A4D8               	btfss	status,2,c
  3654  000E02  D7F4               	goto	l2220
  3655  000E04  503F               	movf	strlen@a,w,c
  3656  000E06  5C3D               	subwf	strlen@s,w,c
  3657  000E08  6E3D               	movwf	?_strlen,c
  3658  000E0A  5040               	movf	strlen@a+1,w,c
  3659  000E0C  583E               	subwfb	strlen@s+1,w,c
  3660  000E0E  6E3E               	movwf	?_strlen+1,c
  3661  000E10  0012               	return		;funcret
  3662  000E12                     __end_of_strlen:
  3663                           	opt callstack 0
  3664                           
  3665 ;; *************** function _EUSART_is_tx_done *****************
  3666 ;; Defined at:
  3667 ;;		line 103 in file "mcc_generated_files/eusart.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      _Bool 
  3674 ;; Registers used:
  3675 ;;		wreg
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    4
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_PutsRS485
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text19
  3696  000F7E                     __ptext19:
  3697                           	opt callstack 0
  3698  000F7E                     _EUSART_is_tx_done:
  3699                           	opt callstack 23
  3700                           
  3701                           ;mcc_generated_files/eusart.c: 105:     return TXSTAbits.TRMT;
  3702                           
  3703                           ;incstack = 0
  3704  000F7E  A2AC               	btfss	4012,1,c	;volatile
  3705  000F80  D002               	goto	u1020
  3706  000F82  0E01               	movlw	1
  3707  000F84  0012               	return	
  3708  000F86                     u1020:
  3709  000F86  0E00               	movlw	0
  3710  000F88  0012               	return		;funcret
  3711  000F8A                     __end_of_EUSART_is_tx_done:
  3712                           	opt callstack 0
  3713                           
  3714 ;; *************** function _EUSART_Write *****************
  3715 ;; Defined at:
  3716 ;;		line 131 in file "mcc_generated_files/eusart.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  txData          1    wreg     unsigned char 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  txData          1    2[COMRAM] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;Total ram usage:        1 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    4
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_PutsRS485
  3741 ;;		_putch
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text20
  3746  000F8A                     __ptext20:
  3747                           	opt callstack 0
  3748  000F8A                     _EUSART_Write:
  3749                           	opt callstack 23
  3750                           
  3751                           ;incstack = 0
  3752                           ;EUSART_Write@txData stored from wreg
  3753  000F8A  6E3D               	movwf	EUSART_Write@txData,c
  3754  000F8C                     
  3755                           ;mcc_generated_files/eusart.c: 133:     while(0 == PIR1bits.TX1IF)
  3756                           
  3757                           ;mcc_generated_files/eusart.c: 134:     {;mcc_generated_files/eusart.c: 135:     }
  3758  000F8C  A89E               	btfss	3998,4,c	;volatile
  3759  000F8E  D7FE               	goto	l2210
  3760                           
  3761                           ;mcc_generated_files/eusart.c: 137:     TXREG = txData;
  3762  000F90  C03D  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  3763  000F94  0012               	return		;funcret
  3764  000F96                     __end_of_EUSART_Write:
  3765                           	opt callstack 0
  3766                           
  3767 ;; *************** function _PrintLed *****************
  3768 ;; Defined at:
  3769 ;;		line 253 in file "Application.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;		None
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;Total ram usage:        0 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    5
  3790 ;; This function calls:
  3791 ;;		_Ws0010Buf5x7Char
  3792 ;;		_Ws0010BufGotoXY
  3793 ;; This function is called by:
  3794 ;;		_ProcessPeriodic
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text21
  3799  000C8E                     __ptext21:
  3800                           	opt callstack 0
  3801  000C8E                     _PrintLed:
  3802                           	opt callstack 24
  3803                           
  3804                           ;Application.c: 255:     static uint8_t flag;;Application.c: 256:     if(RunFlag == 1)
  3805                           
  3806                           ;incstack = 0
  3807  000C8E  042C               	decf	_RunFlag,w,c
  3808  000C90  A4D8               	btfss	status,2,c
  3809  000C92  0012               	return	
  3810                           
  3811                           ;Application.c: 257:     {;Application.c: 258:         RunFlag = 0;
  3812  000C94  0E00               	movlw	0
  3813  000C96  6E2C               	movwf	_RunFlag,c
  3814                           
  3815                           ;Application.c: 259:         if(flag == 1)
  3816  000C98  0427               	decf	PrintLed@flag,w,c
  3817  000C9A  A4D8               	btfss	status,2,c
  3818  000C9C  D00B               	goto	l2540
  3819                           
  3820                           ;Application.c: 260:         {;Application.c: 261:             Ws0010BufGotoXY(1, 1);
  3821  000C9E  0E01               	movlw	1
  3822  000CA0  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  3823  000CA2  0E01               	movlw	1
  3824  000CA4  EC34  F007         	call	_Ws0010BufGotoXY
  3825                           
  3826                           ;Application.c: 262:             Ws0010Buf5x7Char('o', 0);
  3827  000CA8  0E00               	movlw	0
  3828  000CAA  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  3829  000CAC  0E6F               	movlw	111
  3830  000CAE  EC61  F002         	call	_Ws0010Buf5x7Char
  3831                           
  3832                           ;Application.c: 263:         }
  3833  000CB2  D005               	goto	l2542
  3834  000CB4                     l2540:
  3835                           
  3836                           ;Application.c: 265:         {;Application.c: 266:             Ws0010Buf5x7Char('+', 0);
  3837  000CB4  0E00               	movlw	0
  3838  000CB6  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  3839  000CB8  0E2B               	movlw	43
  3840  000CBA  EC61  F002         	call	_Ws0010Buf5x7Char
  3841  000CBE                     l2542:
  3842                           
  3843                           ;Application.c: 268:         flag = ! flag;
  3844  000CBE  5027               	movf	PrintLed@flag,w,c
  3845  000CC0  A4D8               	btfss	status,2,c
  3846  000CC2  D002               	goto	u1370
  3847  000CC4  0E01               	movlw	1
  3848  000CC6  D001               	goto	u1380
  3849  000CC8                     u1370:
  3850  000CC8  0E00               	movlw	0
  3851  000CCA                     u1380:
  3852  000CCA  6E27               	movwf	PrintLed@flag,c
  3853  000CCC  0012               	return		;funcret
  3854  000CCE                     __end_of_PrintLed:
  3855                           	opt callstack 0
  3856                           
  3857 ;; *************** function _PrintData *****************
  3858 ;; Defined at:
  3859 ;;		line 272 in file "Application.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  StrTemp         2   14[COMRAM] PTR unsigned char 
  3862 ;;		 -> StrTemp(5), 
  3863 ;;  StrRH           2   16[COMRAM] PTR unsigned char 
  3864 ;;		 -> StrRH(5), 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;		None
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3876 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;Total ram usage:        4 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    7
  3883 ;; This function calls:
  3884 ;;		_Ws0010Buf5x7Char
  3885 ;;		_Ws0010Buf9x16Char
  3886 ;;		_Ws0010BufGotoXY
  3887 ;;		_Ws0010BufPatern
  3888 ;;		_Ws0010PutGotoXY
  3889 ;;		_Ws0010Refresh
  3890 ;; This function is called by:
  3891 ;;		_ProcessPeriodic
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text22
  3896  000250                     __ptext22:
  3897                           	opt callstack 0
  3898  000250                     _PrintData:
  3899                           	opt callstack 22
  3900                           
  3901                           ;Application.c: 272: void PrintData(uint8_t* StrTemp, uint8_t* StrRH);Application.c: 273
      +                          : {;Application.c: 274:     Ws0010PutGotoXY(1, 1);
  3902                           
  3903                           ;incstack = 0
  3904  000250  0E01               	movlw	1
  3905  000252  6E41               	movwf	Ws0010PutGotoXY@posy,c
  3906  000254  0E01               	movlw	1
  3907  000256  EC76  F007         	call	_Ws0010PutGotoXY
  3908                           
  3909                           ;Application.c: 275:     Ws0010BufGotoXY(1, 1);
  3910  00025A  0E01               	movlw	1
  3911  00025C  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  3912  00025E  0E01               	movlw	1
  3913  000260  EC34  F007         	call	_Ws0010BufGotoXY
  3914                           
  3915                           ;Application.c: 276:     Ws0010BufPatern(0x00, 200);
  3916  000264  0EC8               	movlw	200
  3917  000266  6E3D               	movwf	Ws0010BufPatern@count,c
  3918  000268  0E00               	movlw	0
  3919  00026A  ECBF  F006         	call	_Ws0010BufPatern
  3920                           
  3921                           ;Application.c: 277:     Ws0010PutGotoXY(1, 1);
  3922  00026E  0E01               	movlw	1
  3923  000270  6E41               	movwf	Ws0010PutGotoXY@posy,c
  3924  000272  0E01               	movlw	1
  3925  000274  EC76  F007         	call	_Ws0010PutGotoXY
  3926                           
  3927                           ;Application.c: 278:     Ws0010BufGotoXY(1, 2);
  3928  000278  0E02               	movlw	2
  3929  00027A  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  3930  00027C  0E01               	movlw	1
  3931  00027E  EC34  F007         	call	_Ws0010BufGotoXY
  3932                           
  3933                           ;Application.c: 279:     Ws0010Buf5x7Char((uint8_t)StrTemp[0], 0);
  3934  000282  0E00               	movlw	0
  3935  000284  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  3936  000286  C049  FFD9         	movff	PrintData@StrTemp,fsr2l
  3937  00028A  C04A  FFDA         	movff	PrintData@StrTemp+1,fsr2h
  3938  00028E  50DF               	movf	indf2,w,c
  3939  000290  EC61  F002         	call	_Ws0010Buf5x7Char
  3940                           
  3941                           ;Application.c: 280:     Ws0010BufGotoXY(8, 1);
  3942  000294  0E01               	movlw	1
  3943  000296  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  3944  000298  0E08               	movlw	8
  3945  00029A  EC34  F007         	call	_Ws0010BufGotoXY
  3946                           
  3947                           ;Application.c: 281:     Ws0010Buf9x16Char(StrTemp[1], 0);
  3948  00029E  0E00               	movlw	0
  3949  0002A0  6E41               	movwf	Ws0010Buf9x16Char@inv,c
  3950  0002A2  EE20 F001          	lfsr	2,1
  3951  0002A6  5049               	movf	PrintData@StrTemp,w,c
  3952  0002A8  26D9               	addwf	fsr2l,f,c
  3953  0002AA  504A               	movf	PrintData@StrTemp+1,w,c
  3954  0002AC  22DA               	addwfc	fsr2h,f,c
  3955  0002AE  50DF               	movf	indf2,w,c
  3956  0002B0  ECC8  F001         	call	_Ws0010Buf9x16Char
  3957                           
  3958                           ;Application.c: 282:     Ws0010Buf9x16Char(StrTemp[2], 0);
  3959  0002B4  0E00               	movlw	0
  3960  0002B6  6E41               	movwf	Ws0010Buf9x16Char@inv,c
  3961  0002B8  EE20 F002          	lfsr	2,2
  3962  0002BC  5049               	movf	PrintData@StrTemp,w,c
  3963  0002BE  26D9               	addwf	fsr2l,f,c
  3964  0002C0  504A               	movf	PrintData@StrTemp+1,w,c
  3965  0002C2  22DA               	addwfc	fsr2h,f,c
  3966  0002C4  50DF               	movf	indf2,w,c
  3967  0002C6  ECC8  F001         	call	_Ws0010Buf9x16Char
  3968                           
  3969                           ;Application.c: 283:     Ws0010BufGotoXY(28, 2);
  3970  0002CA  0E02               	movlw	2
  3971  0002CC  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  3972  0002CE  0E1C               	movlw	28
  3973  0002D0  EC34  F007         	call	_Ws0010BufGotoXY
  3974                           
  3975                           ;Application.c: 284:     Ws0010Buf5x7Char('.', 0);
  3976  0002D4  0E00               	movlw	0
  3977  0002D6  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  3978  0002D8  0E2E               	movlw	46
  3979  0002DA  EC61  F002         	call	_Ws0010Buf5x7Char
  3980                           
  3981                           ;Application.c: 285:     Ws0010BufGotoXY(33, 1);
  3982  0002DE  0E01               	movlw	1
  3983  0002E0  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  3984  0002E2  0E21               	movlw	33
  3985  0002E4  EC34  F007         	call	_Ws0010BufGotoXY
  3986                           
  3987                           ;Application.c: 286:     Ws0010Buf9x16Char(StrTemp[4], 0);
  3988  0002E8  0E00               	movlw	0
  3989  0002EA  6E41               	movwf	Ws0010Buf9x16Char@inv,c
  3990  0002EC  EE20 F004          	lfsr	2,4
  3991  0002F0  5049               	movf	PrintData@StrTemp,w,c
  3992  0002F2  26D9               	addwf	fsr2l,f,c
  3993  0002F4  504A               	movf	PrintData@StrTemp+1,w,c
  3994  0002F6  22DA               	addwfc	fsr2h,f,c
  3995  0002F8  50DF               	movf	indf2,w,c
  3996  0002FA  ECC8  F001         	call	_Ws0010Buf9x16Char
  3997                           
  3998                           ;Application.c: 287:     Ws0010BufGotoXY(45, 1);
  3999  0002FE  0E01               	movlw	1
  4000  000300  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4001  000302  0E2D               	movlw	45
  4002  000304  EC34  F007         	call	_Ws0010BufGotoXY
  4003                           
  4004                           ;Application.c: 288:     Ws0010Buf5x7Char('o', 0);
  4005  000308  0E00               	movlw	0
  4006  00030A  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  4007  00030C  0E6F               	movlw	111
  4008  00030E  EC61  F002         	call	_Ws0010Buf5x7Char
  4009                           
  4010                           ;Application.c: 289:     Ws0010BufGotoXY(45, 2);
  4011  000312  0E02               	movlw	2
  4012  000314  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4013  000316  0E2D               	movlw	45
  4014  000318  EC34  F007         	call	_Ws0010BufGotoXY
  4015                           
  4016                           ;Application.c: 290:     Ws0010Buf5x7Char('C', 0);
  4017  00031C  0E00               	movlw	0
  4018  00031E  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  4019  000320  0E43               	movlw	67
  4020  000322  EC61  F002         	call	_Ws0010Buf5x7Char
  4021                           
  4022                           ;Application.c: 291:     Ws0010BufGotoXY(66, 1);
  4023  000326  0E01               	movlw	1
  4024  000328  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4025  00032A  0E42               	movlw	66
  4026  00032C  EC34  F007         	call	_Ws0010BufGotoXY
  4027                           
  4028                           ;Application.c: 292:     Ws0010Buf9x16Char(StrRH[0], 0);
  4029  000330  0E00               	movlw	0
  4030  000332  6E41               	movwf	Ws0010Buf9x16Char@inv,c
  4031  000334  C04B  FFD9         	movff	PrintData@StrRH,fsr2l
  4032  000338  C04C  FFDA         	movff	PrintData@StrRH+1,fsr2h
  4033  00033C  50DF               	movf	indf2,w,c
  4034  00033E  ECC8  F001         	call	_Ws0010Buf9x16Char
  4035                           
  4036                           ;Application.c: 293:     Ws0010Buf9x16Char(StrRH[1], 0);
  4037  000342  0E00               	movlw	0
  4038  000344  6E41               	movwf	Ws0010Buf9x16Char@inv,c
  4039  000346  EE20 F001          	lfsr	2,1
  4040  00034A  504B               	movf	PrintData@StrRH,w,c
  4041  00034C  26D9               	addwf	fsr2l,f,c
  4042  00034E  504C               	movf	PrintData@StrRH+1,w,c
  4043  000350  22DA               	addwfc	fsr2h,f,c
  4044  000352  50DF               	movf	indf2,w,c
  4045  000354  ECC8  F001         	call	_Ws0010Buf9x16Char
  4046                           
  4047                           ;Application.c: 294:     Ws0010BufGotoXY(88, 1);
  4048  000358  0E01               	movlw	1
  4049  00035A  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4050  00035C  0E58               	movlw	88
  4051  00035E  EC34  F007         	call	_Ws0010BufGotoXY
  4052                           
  4053                           ;Application.c: 295:     Ws0010Buf5x7Char('%', 0);
  4054  000362  0E00               	movlw	0
  4055  000364  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  4056  000366  0E25               	movlw	37
  4057  000368  EC61  F002         	call	_Ws0010Buf5x7Char
  4058                           
  4059                           ;Application.c: 296:     Ws0010BufGotoXY(88, 2);
  4060  00036C  0E02               	movlw	2
  4061  00036E  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4062  000370  0E58               	movlw	88
  4063  000372  EC34  F007         	call	_Ws0010BufGotoXY
  4064                           
  4065                           ;Application.c: 297:     Ws0010Buf5x7Char('R', 0);
  4066  000376  0E00               	movlw	0
  4067  000378  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  4068  00037A  0E52               	movlw	82
  4069  00037C  EC61  F002         	call	_Ws0010Buf5x7Char
  4070                           
  4071                           ;Application.c: 298:     Ws0010Buf5x7Char('H', 0);
  4072  000380  0E00               	movlw	0
  4073  000382  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  4074  000384  0E48               	movlw	72
  4075  000386  EC61  F002         	call	_Ws0010Buf5x7Char
  4076                           
  4077                           ;Application.c: 299:     Ws0010Refresh();
  4078  00038A  EC26  F006         	call	_Ws0010Refresh	;wreg free
  4079  00038E  0012               	return		;funcret
  4080  000390                     __end_of_PrintData:
  4081                           	opt callstack 0
  4082                           
  4083 ;; *************** function _Ws0010BufPatern *****************
  4084 ;; Defined at:
  4085 ;;		line 293 in file "WS0010.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  dado            1    wreg     unsigned char 
  4088 ;;  count           1    2[COMRAM] unsigned char 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  dado            1    3[COMRAM] unsigned char 
  4091 ;;  i               1    4[COMRAM] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4101 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;Total ram usage:        3 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:    4
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_PrintData
  4112 ;;		_Ws0010BufBinary
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text23
  4117  000D7E                     __ptext23:
  4118                           	opt callstack 0
  4119  000D7E                     _Ws0010BufPatern:
  4120                           	opt callstack 24
  4121                           
  4122                           ;incstack = 0
  4123                           ;Ws0010BufPatern@dado stored from wreg
  4124  000D7E  6E3E               	movwf	Ws0010BufPatern@dado,c
  4125                           
  4126                           ;WS0010.c: 293: void Ws0010BufPatern(uint8_t dado, uint8_t count);WS0010.c: 294: {;WS001
      +                          0.c: 295:     uint8_t i;;WS0010.c: 296:     if (count > 200)
  4127  000D80  0EC8               	movlw	200
  4128  000D82  643D               	cpfsgt	Ws0010BufPatern@count,c
  4129  000D84  D002               	goto	l540
  4130                           
  4131                           ;WS0010.c: 297:         count = 200;
  4132  000D86  0EC8               	movlw	200
  4133  000D88  6E3D               	movwf	Ws0010BufPatern@count,c
  4134  000D8A                     l540:
  4135                           
  4136                           ;WS0010.c: 298:     for (i = 0; i < count; i++)
  4137  000D8A  0E00               	movlw	0
  4138  000D8C  6E3F               	movwf	Ws0010BufPatern@i,c
  4139  000D8E  D00B               	goto	l2334
  4140  000D90                     l2328:
  4141                           
  4142                           ;WS0010.c: 299:     {;WS0010.c: 300:         Ws0010_buffer[ptr++] = dado;
  4143  000D90  0E00               	movlw	low _Ws0010_buffer
  4144  000D92  241F               	addwf	_ptr,w,c
  4145  000D94  6ED9               	movwf	fsr2l,c
  4146  000D96  0E01               	movlw	high _Ws0010_buffer
  4147  000D98  2020               	addwfc	_ptr+1,w,c
  4148  000D9A  6EDA               	movwf	fsr2h,c
  4149  000D9C  C03E  FFDF         	movff	Ws0010BufPatern@dado,indf2
  4150  000DA0  4A1F               	infsnz	_ptr,f,c
  4151  000DA2  2A20               	incf	_ptr+1,f,c
  4152                           
  4153                           ;WS0010.c: 301:     }
  4154  000DA4  2A3F               	incf	Ws0010BufPatern@i,f,c
  4155  000DA6                     l2334:
  4156  000DA6  503D               	movf	Ws0010BufPatern@count,w,c
  4157  000DA8  5C3F               	subwf	Ws0010BufPatern@i,w,c
  4158  000DAA  B0D8               	btfsc	status,0,c
  4159  000DAC  0012               	return	
  4160  000DAE  D7F0               	goto	l2328
  4161  000DB0                     __end_of_Ws0010BufPatern:
  4162                           	opt callstack 0
  4163                           
  4164 ;; *************** function _Ws0010Buf9x16Char *****************
  4165 ;; Defined at:
  4166 ;;		line 176 in file "WS0010.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  carac           1    wreg     unsigned char 
  4169 ;;  inv             1    6[COMRAM] unsigned char 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  carac           1   11[COMRAM] unsigned char 
  4172 ;;  j               2   12[COMRAM] unsigned short 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4182 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;Total ram usage:        8 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    5
  4189 ;; This function calls:
  4190 ;;		_Ws0010BufGotoXY
  4191 ;; This function is called by:
  4192 ;;		_PrintData
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text24
  4197  000390                     __ptext24:
  4198                           	opt callstack 0
  4199  000390                     _Ws0010Buf9x16Char:
  4200                           	opt callstack 23
  4201                           
  4202                           ;incstack = 0
  4203                           ;Ws0010Buf9x16Char@carac stored from wreg
  4204  000390  6E46               	movwf	Ws0010Buf9x16Char@carac,c
  4205                           
  4206                           ;WS0010.c: 176: void Ws0010Buf9x16Char(uint8_t carac, uint8_t inv);WS0010.c: 177: {;WS00
      +                          10.c: 178:     uint16_t j;;WS0010.c: 180:     for (j = 0; j < 18; j++)
  4207  000392  0E00               	movlw	0
  4208  000394  6E48               	movwf	Ws0010Buf9x16Char@j+1,c
  4209  000396  0E00               	movlw	0
  4210  000398  6E47               	movwf	Ws0010Buf9x16Char@j,c
  4211  00039A                     l2342:
  4212                           
  4213                           ;WS0010.c: 181:     {;WS0010.c: 182:         if (j == 9)
  4214  00039A  0E09               	movlw	9
  4215  00039C  1847               	xorwf	Ws0010Buf9x16Char@j,w,c
  4216  00039E  1048               	iorwf	Ws0010Buf9x16Char@j+1,w,c
  4217  0003A0  A4D8               	btfss	status,2,c
  4218  0003A2  D01C               	goto	l2356
  4219                           
  4220                           ;WS0010.c: 183:         {;WS0010.c: 184:             if (inv)
  4221  0003A4  5041               	movf	Ws0010Buf9x16Char@inv,w,c
  4222  0003A6  B4D8               	btfsc	status,2,c
  4223  0003A8  D00B               	goto	l2350
  4224                           
  4225                           ;WS0010.c: 185:                 Ws0010_buffer[ptr++] = ~0x00;
  4226  0003AA  0E00               	movlw	low _Ws0010_buffer
  4227  0003AC  241F               	addwf	_ptr,w,c
  4228  0003AE  6ED9               	movwf	fsr2l,c
  4229  0003B0  0E01               	movlw	high _Ws0010_buffer
  4230  0003B2  2020               	addwfc	_ptr+1,w,c
  4231  0003B4  6EDA               	movwf	fsr2h,c
  4232  0003B6  0EFF               	movlw	255
  4233  0003B8  6EDF               	movwf	indf2,c
  4234  0003BA  4A1F               	infsnz	_ptr,f,c
  4235  0003BC  2A20               	incf	_ptr+1,f,c
  4236  0003BE  D008               	goto	l2354
  4237  0003C0                     l2350:
  4238                           
  4239                           ;WS0010.c: 187:                 Ws0010_buffer[ptr++] = 0x00;
  4240  0003C0  0E00               	movlw	low _Ws0010_buffer
  4241  0003C2  241F               	addwf	_ptr,w,c
  4242  0003C4  6ED9               	movwf	fsr2l,c
  4243  0003C6  0E01               	movlw	high _Ws0010_buffer
  4244  0003C8  2020               	addwfc	_ptr+1,w,c
  4245  0003CA  6EDA               	movwf	fsr2h,c
  4246  0003CC  0E00               	movlw	0
  4247  0003CE  D7F4               	goto	L1
  4248  0003D0                     l2354:
  4249                           
  4250                           ;WS0010.c: 188:             Ws0010BufGotoXY((ptr - 9), 2);
  4251  0003D0  0E02               	movlw	2
  4252  0003D2  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4253  0003D4  501F               	movf	_ptr,w,c
  4254  0003D6  0FF7               	addlw	247
  4255  0003D8  EC34  F007         	call	_Ws0010BufGotoXY
  4256  0003DC                     l2356:
  4257                           
  4258                           ;WS0010.c: 190:         if (inv)
  4259  0003DC  5041               	movf	Ws0010Buf9x16Char@inv,w,c
  4260  0003DE  B4D8               	btfsc	status,2,c
  4261  0003E0  D028               	goto	l2362
  4262                           
  4263                           ;WS0010.c: 191:             Ws0010_buffer[ptr++] = ~ascii_table9x16[carac - 0x30][j];
  4264  0003E2  0E00               	movlw	low _Ws0010_buffer
  4265  0003E4  241F               	addwf	_ptr,w,c
  4266  0003E6  6ED9               	movwf	fsr2l,c
  4267  0003E8  0E01               	movlw	high _Ws0010_buffer
  4268  0003EA  2020               	addwfc	_ptr+1,w,c
  4269  0003EC  6EDA               	movwf	fsr2h,c
  4270  0003EE  0EA0               	movlw	160
  4271  0003F0  6E42               	movwf	??_Ws0010Buf9x16Char& (0+255),c
  4272  0003F2  0EFC               	movlw	252
  4273  0003F4  6E43               	movwf	(??_Ws0010Buf9x16Char+1)& (0+255),c
  4274  0003F6  5046               	movf	Ws0010Buf9x16Char@carac,w,c
  4275  0003F8  0D12               	mullw	18
  4276  0003FA  0E26               	movlw	low _ascii_table9x16
  4277  0003FC  6E44               	movwf	(??_Ws0010Buf9x16Char+2)& (0+255),c
  4278  0003FE  0EFC               	movlw	high _ascii_table9x16
  4279  000400  6E45               	movwf	(??_Ws0010Buf9x16Char+3)& (0+255),c
  4280  000402  50F3               	movf	prodl,w,c
  4281  000404  2644               	addwf	??_Ws0010Buf9x16Char+2,f,c
  4282  000406  50F4               	movf	prodh,w,c
  4283  000408  2245               	addwfc	??_Ws0010Buf9x16Char+3,f,c
  4284  00040A  5047               	movf	Ws0010Buf9x16Char@j,w,c
  4285  00040C  2644               	addwf	??_Ws0010Buf9x16Char+2,f,c
  4286  00040E  5048               	movf	Ws0010Buf9x16Char@j+1,w,c
  4287  000410  2245               	addwfc	??_Ws0010Buf9x16Char+3,f,c
  4288  000412  5042               	movf	??_Ws0010Buf9x16Char,w,c
  4289  000414  2644               	addwf	??_Ws0010Buf9x16Char+2,f,c
  4290  000416  5043               	movf	??_Ws0010Buf9x16Char+1,w,c
  4291  000418  2245               	addwfc	??_Ws0010Buf9x16Char+3,f,c
  4292  00041A  C044  FFF6         	movff	??_Ws0010Buf9x16Char+2,tblptrl
  4293  00041E  C045  FFF7         	movff	??_Ws0010Buf9x16Char+3,tblptrh
  4294  000422                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4295  000422  6AF8               	clrf	tblptru,c
  4296  000424                     	endif
  4297  000424                     	if	0	;tblptru may be non-zero
  4298  000424                     	endif
  4299  000424  0008               	tblrd		*
  4300  000426  50F5               	movf	tablat,w,c
  4301  000428  0AFF               	xorlw	255
  4302  00042A  6EDF               	movwf	indf2,c
  4303  00042C                     l2360:
  4304  00042C  4A1F               	infsnz	_ptr,f,c
  4305  00042E  2A20               	incf	_ptr+1,f,c
  4306  000430  D025               	goto	l2366
  4307  000432                     l2362:
  4308                           
  4309                           ;WS0010.c: 193:             Ws0010_buffer[ptr++] = ascii_table9x16[carac - 0x30][j];
  4310  000432  0EA0               	movlw	160
  4311  000434  6E42               	movwf	??_Ws0010Buf9x16Char& (0+255),c
  4312  000436  0EFC               	movlw	252
  4313  000438  6E43               	movwf	(??_Ws0010Buf9x16Char+1)& (0+255),c
  4314  00043A  5046               	movf	Ws0010Buf9x16Char@carac,w,c
  4315  00043C  0D12               	mullw	18
  4316  00043E  0E26               	movlw	low _ascii_table9x16
  4317  000440  6E44               	movwf	(??_Ws0010Buf9x16Char+2)& (0+255),c
  4318  000442  0EFC               	movlw	high _ascii_table9x16
  4319  000444  6E45               	movwf	(??_Ws0010Buf9x16Char+3)& (0+255),c
  4320  000446  50F3               	movf	prodl,w,c
  4321  000448  2644               	addwf	??_Ws0010Buf9x16Char+2,f,c
  4322  00044A  50F4               	movf	prodh,w,c
  4323  00044C  2245               	addwfc	??_Ws0010Buf9x16Char+3,f,c
  4324  00044E  5047               	movf	Ws0010Buf9x16Char@j,w,c
  4325  000450  2644               	addwf	??_Ws0010Buf9x16Char+2,f,c
  4326  000452  5048               	movf	Ws0010Buf9x16Char@j+1,w,c
  4327  000454  2245               	addwfc	??_Ws0010Buf9x16Char+3,f,c
  4328  000456  5042               	movf	??_Ws0010Buf9x16Char,w,c
  4329  000458  2644               	addwf	??_Ws0010Buf9x16Char+2,f,c
  4330  00045A  5043               	movf	??_Ws0010Buf9x16Char+1,w,c
  4331  00045C  2245               	addwfc	??_Ws0010Buf9x16Char+3,f,c
  4332  00045E  C044  FFF6         	movff	??_Ws0010Buf9x16Char+2,tblptrl
  4333  000462  C045  FFF7         	movff	??_Ws0010Buf9x16Char+3,tblptrh
  4334  000466                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4335  000466  6AF8               	clrf	tblptru,c
  4336  000468                     	endif
  4337  000468                     	if	0	;tblptru may be non-zero
  4338  000468                     	endif
  4339  000468  0E00               	movlw	low _Ws0010_buffer
  4340  00046A  241F               	addwf	_ptr,w,c
  4341  00046C  6ED9               	movwf	fsr2l,c
  4342  00046E  0E01               	movlw	high _Ws0010_buffer
  4343  000470  2020               	addwfc	_ptr+1,w,c
  4344  000472  6EDA               	movwf	fsr2h,c
  4345  000474  0008               	tblrd		*
  4346  000476  CFF5 FFDF          	movff	tablat,indf2
  4347  00047A  D7D8               	goto	l2360
  4348  00047C                     l2366:
  4349                           
  4350                           ;WS0010.c: 194:     }
  4351  00047C  4A47               	infsnz	Ws0010Buf9x16Char@j,f,c
  4352  00047E  2A48               	incf	Ws0010Buf9x16Char@j+1,f,c
  4353  000480  5048               	movf	Ws0010Buf9x16Char@j+1,w,c
  4354  000482  E104               	bnz	u1210
  4355  000484  0E12               	movlw	18
  4356  000486  5C47               	subwf	Ws0010Buf9x16Char@j,w,c
  4357  000488  A0D8               	btfss	status,0,c
  4358  00048A  D787               	goto	l2342
  4359  00048C                     u1210:
  4360                           
  4361                           ;WS0010.c: 195:     if (inv)
  4362  00048C  5041               	movf	Ws0010Buf9x16Char@inv,w,c
  4363  00048E  B4D8               	btfsc	status,2,c
  4364  000490  D00B               	goto	l2376
  4365                           
  4366                           ;WS0010.c: 196:         Ws0010_buffer[ptr++] = ~0x00;
  4367  000492  0E00               	movlw	low _Ws0010_buffer
  4368  000494  241F               	addwf	_ptr,w,c
  4369  000496  6ED9               	movwf	fsr2l,c
  4370  000498  0E01               	movlw	high _Ws0010_buffer
  4371  00049A  2020               	addwfc	_ptr+1,w,c
  4372  00049C  6EDA               	movwf	fsr2h,c
  4373  00049E  0EFF               	movlw	255
  4374  0004A0  6EDF               	movwf	indf2,c
  4375  0004A2  4A1F               	infsnz	_ptr,f,c
  4376  0004A4  2A20               	incf	_ptr+1,f,c
  4377  0004A6  D008               	goto	l2380
  4378  0004A8                     l2376:
  4379                           
  4380                           ;WS0010.c: 198:         Ws0010_buffer[ptr++] = 0x00;
  4381  0004A8  0E00               	movlw	low _Ws0010_buffer
  4382  0004AA  241F               	addwf	_ptr,w,c
  4383  0004AC  6ED9               	movwf	fsr2l,c
  4384  0004AE  0E01               	movlw	high _Ws0010_buffer
  4385  0004B0  2020               	addwfc	_ptr+1,w,c
  4386  0004B2  6EDA               	movwf	fsr2h,c
  4387  0004B4  0E00               	movlw	0
  4388  0004B6  D7F4               	goto	L2
  4389  0004B8                     l2380:
  4390                           
  4391                           ;WS0010.c: 200:     ptr -= 100;
  4392  0004B8  0E64               	movlw	100
  4393  0004BA  5E1F               	subwf	_ptr,f,c
  4394  0004BC  0E00               	movlw	0
  4395  0004BE  5A20               	subwfb	_ptr+1,f,c
  4396  0004C0  0012               	return		;funcret
  4397  0004C2                     __end_of_Ws0010Buf9x16Char:
  4398                           	opt callstack 0
  4399                           
  4400 ;; *************** function _Ws0010Buf5x7Char *****************
  4401 ;; Defined at:
  4402 ;;		line 160 in file "WS0010.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  carac           1    wreg     unsigned char 
  4405 ;;  inv             1    2[COMRAM] unsigned char 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  carac           1    7[COMRAM] unsigned char 
  4408 ;;  j               1    8[COMRAM] unsigned char 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      void 
  4411 ;; Registers used:
  4412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4418 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;Total ram usage:        7 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; Hardware stack levels required when called:    4
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_PrintLed
  4429 ;;		_PrintData
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text25
  4434  0004C2                     __ptext25:
  4435                           	opt callstack 0
  4436  0004C2                     _Ws0010Buf5x7Char:
  4437                           	opt callstack 24
  4438                           
  4439                           ;incstack = 0
  4440                           ;Ws0010Buf5x7Char@carac stored from wreg
  4441  0004C2  6E42               	movwf	Ws0010Buf5x7Char@carac,c
  4442                           
  4443                           ;WS0010.c: 160: void Ws0010Buf5x7Char(uint8_t carac, uint8_t inv);WS0010.c: 161: {;WS001
      +                          0.c: 162:     uint8_t j;;WS0010.c: 163:     for (j = 0; j < 5; j++)
  4444  0004C4  0E00               	movlw	0
  4445  0004C6  6E43               	movwf	Ws0010Buf5x7Char@j,c
  4446  0004C8                     l2300:
  4447                           
  4448                           ;WS0010.c: 164:     {;WS0010.c: 165:         if (inv)
  4449  0004C8  503D               	movf	Ws0010Buf5x7Char@inv,w,c
  4450  0004CA  B4D8               	btfsc	status,2,c
  4451  0004CC  D028               	goto	l2306
  4452                           
  4453                           ;WS0010.c: 166:             Ws0010_buffer[ptr++] = ~ascii_table5x7[(carac - 0x20)][j];
  4454  0004CE  0E00               	movlw	low _Ws0010_buffer
  4455  0004D0  241F               	addwf	_ptr,w,c
  4456  0004D2  6ED9               	movwf	fsr2l,c
  4457  0004D4  0E01               	movlw	high _Ws0010_buffer
  4458  0004D6  2020               	addwfc	_ptr+1,w,c
  4459  0004D8  6EDA               	movwf	fsr2h,c
  4460  0004DA  0E60               	movlw	96
  4461  0004DC  6E3E               	movwf	??_Ws0010Buf5x7Char& (0+255),c
  4462  0004DE  0EFF               	movlw	255
  4463  0004E0  6E3F               	movwf	(??_Ws0010Buf5x7Char+1)& (0+255),c
  4464  0004E2  5042               	movf	Ws0010Buf5x7Char@carac,w,c
  4465  0004E4  0D05               	mullw	5
  4466  0004E6  0E41               	movlw	low _ascii_table5x7
  4467  0004E8  6E40               	movwf	(??_Ws0010Buf5x7Char+2)& (0+255),c
  4468  0004EA  0EFA               	movlw	high _ascii_table5x7
  4469  0004EC  6E41               	movwf	(??_Ws0010Buf5x7Char+3)& (0+255),c
  4470  0004EE  50F3               	movf	prodl,w,c
  4471  0004F0  2640               	addwf	??_Ws0010Buf5x7Char+2,f,c
  4472  0004F2  50F4               	movf	prodh,w,c
  4473  0004F4  2241               	addwfc	??_Ws0010Buf5x7Char+3,f,c
  4474  0004F6  5043               	movf	Ws0010Buf5x7Char@j,w,c
  4475  0004F8  2640               	addwf	??_Ws0010Buf5x7Char+2,f,c
  4476  0004FA  0E00               	movlw	0
  4477  0004FC  2241               	addwfc	??_Ws0010Buf5x7Char+3,f,c
  4478  0004FE  503E               	movf	??_Ws0010Buf5x7Char,w,c
  4479  000500  2640               	addwf	??_Ws0010Buf5x7Char+2,f,c
  4480  000502  503F               	movf	??_Ws0010Buf5x7Char+1,w,c
  4481  000504  2241               	addwfc	??_Ws0010Buf5x7Char+3,f,c
  4482  000506  C040  FFF6         	movff	??_Ws0010Buf5x7Char+2,tblptrl
  4483  00050A  C041  FFF7         	movff	??_Ws0010Buf5x7Char+3,tblptrh
  4484  00050E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4485  00050E  6AF8               	clrf	tblptru,c
  4486  000510                     	endif
  4487  000510                     	if	0	;tblptru may be non-zero
  4488  000510                     	endif
  4489  000510  0008               	tblrd		*
  4490  000512  50F5               	movf	tablat,w,c
  4491  000514  0AFF               	xorlw	255
  4492  000516  6EDF               	movwf	indf2,c
  4493  000518                     l2304:
  4494  000518  4A1F               	infsnz	_ptr,f,c
  4495  00051A  2A20               	incf	_ptr+1,f,c
  4496  00051C  D025               	goto	l2310
  4497  00051E                     l2306:
  4498                           
  4499                           ;WS0010.c: 168:             Ws0010_buffer[ptr++] = ascii_table5x7[(carac - 0x20)][j];
  4500  00051E  0E60               	movlw	96
  4501  000520  6E3E               	movwf	??_Ws0010Buf5x7Char& (0+255),c
  4502  000522  0EFF               	movlw	255
  4503  000524  6E3F               	movwf	(??_Ws0010Buf5x7Char+1)& (0+255),c
  4504  000526  5042               	movf	Ws0010Buf5x7Char@carac,w,c
  4505  000528  0D05               	mullw	5
  4506  00052A  0E41               	movlw	low _ascii_table5x7
  4507  00052C  6E40               	movwf	(??_Ws0010Buf5x7Char+2)& (0+255),c
  4508  00052E  0EFA               	movlw	high _ascii_table5x7
  4509  000530  6E41               	movwf	(??_Ws0010Buf5x7Char+3)& (0+255),c
  4510  000532  50F3               	movf	prodl,w,c
  4511  000534  2640               	addwf	??_Ws0010Buf5x7Char+2,f,c
  4512  000536  50F4               	movf	prodh,w,c
  4513  000538  2241               	addwfc	??_Ws0010Buf5x7Char+3,f,c
  4514  00053A  5043               	movf	Ws0010Buf5x7Char@j,w,c
  4515  00053C  2640               	addwf	??_Ws0010Buf5x7Char+2,f,c
  4516  00053E  0E00               	movlw	0
  4517  000540  2241               	addwfc	??_Ws0010Buf5x7Char+3,f,c
  4518  000542  503E               	movf	??_Ws0010Buf5x7Char,w,c
  4519  000544  2640               	addwf	??_Ws0010Buf5x7Char+2,f,c
  4520  000546  503F               	movf	??_Ws0010Buf5x7Char+1,w,c
  4521  000548  2241               	addwfc	??_Ws0010Buf5x7Char+3,f,c
  4522  00054A  C040  FFF6         	movff	??_Ws0010Buf5x7Char+2,tblptrl
  4523  00054E  C041  FFF7         	movff	??_Ws0010Buf5x7Char+3,tblptrh
  4524  000552                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4525  000552  6AF8               	clrf	tblptru,c
  4526  000554                     	endif
  4527  000554                     	if	0	;tblptru may be non-zero
  4528  000554                     	endif
  4529  000554  0E00               	movlw	low _Ws0010_buffer
  4530  000556  241F               	addwf	_ptr,w,c
  4531  000558  6ED9               	movwf	fsr2l,c
  4532  00055A  0E01               	movlw	high _Ws0010_buffer
  4533  00055C  2020               	addwfc	_ptr+1,w,c
  4534  00055E  6EDA               	movwf	fsr2h,c
  4535  000560  0008               	tblrd		*
  4536  000562  CFF5 FFDF          	movff	tablat,indf2
  4537  000566  D7D8               	goto	l2304
  4538  000568                     l2310:
  4539                           
  4540                           ;WS0010.c: 169:     }
  4541  000568  2A43               	incf	Ws0010Buf5x7Char@j,f,c
  4542  00056A  0E04               	movlw	4
  4543  00056C  6443               	cpfsgt	Ws0010Buf5x7Char@j,c
  4544  00056E  D7AC               	goto	l2300
  4545                           
  4546                           ;WS0010.c: 170:     if (inv)
  4547  000570  503D               	movf	Ws0010Buf5x7Char@inv,w,c
  4548  000572  B4D8               	btfsc	status,2,c
  4549  000574  D00B               	goto	l2320
  4550                           
  4551                           ;WS0010.c: 171:         Ws0010_buffer[ptr++] = ~0x00;
  4552  000576  0E00               	movlw	low _Ws0010_buffer
  4553  000578  241F               	addwf	_ptr,w,c
  4554  00057A  6ED9               	movwf	fsr2l,c
  4555  00057C  0E01               	movlw	high _Ws0010_buffer
  4556  00057E  2020               	addwfc	_ptr+1,w,c
  4557  000580  6EDA               	movwf	fsr2h,c
  4558  000582  0EFF               	movlw	255
  4559  000584  6EDF               	movwf	indf2,c
  4560  000586  4A1F               	infsnz	_ptr,f,c
  4561  000588  2A20               	incf	_ptr+1,f,c
  4562  00058A  0012               	return	
  4563  00058C                     l2320:
  4564                           
  4565                           ;WS0010.c: 173:         Ws0010_buffer[ptr++] = 0x00;
  4566  00058C  0E00               	movlw	low _Ws0010_buffer
  4567  00058E  241F               	addwf	_ptr,w,c
  4568  000590  6ED9               	movwf	fsr2l,c
  4569  000592  0E01               	movlw	high _Ws0010_buffer
  4570  000594  2020               	addwfc	_ptr+1,w,c
  4571  000596  6EDA               	movwf	fsr2h,c
  4572  000598  0E00               	movlw	0
  4573  00059A  D7F4               	goto	L3
  4574  00059C                     __end_of_Ws0010Buf5x7Char:
  4575                           	opt callstack 0
  4576                           
  4577 ;; *************** function _GetsRS485 *****************
  4578 ;; Defined at:
  4579 ;;		line 36 in file "Rs485.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  RxData          2    2[COMRAM] PTR unsigned char 
  4582 ;;		 -> ProcessPeriodic@RxData(1), 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  Ret             1    4[COMRAM] unsigned char 
  4585 ;;  RxStatus        1    5[COMRAM] volatile struct .
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      unsigned char 
  4588 ;; Registers used:
  4589 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;Total ram usage:        4 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    5
  4602 ;; This function calls:
  4603 ;;		_EUSART_Read
  4604 ;;		_EUSART_get_last_status
  4605 ;;		_EUSART_is_rx_ready
  4606 ;; This function is called by:
  4607 ;;		_ProcessPeriodic
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text26
  4612  000DB0                     __ptext26:
  4613                           	opt callstack 0
  4614  000DB0                     _GetsRS485:
  4615                           	opt callstack 24
  4616                           
  4617                           ;Rs485.c: 36: uint8_t GetsRS485(uint8_t* RxData);Rs485.c: 37: {;Rs485.c: 39:     volatil
      +                          e eusart_status_t RxStatus;;Rs485.c: 40:     uint8_t Ret = 0;
  4618                           
  4619                           ;incstack = 0
  4620  000DB0  0E00               	movlw	0
  4621  000DB2  6E3F               	movwf	GetsRS485@Ret,c
  4622                           
  4623                           ;Rs485.c: 41:     if(EUSART_is_rx_ready())
  4624  000DB4  ECCB  F007         	call	_EUSART_is_rx_ready	;wreg free
  4625  000DB8  0900               	iorlw	0
  4626  000DBA  B4D8               	btfsc	status,2,c
  4627  000DBC  D010               	goto	l423
  4628                           
  4629                           ;Rs485.c: 42:     {;Rs485.c: 43:         *RxData = EUSART_Read();
  4630  000DBE  EC8F  F007         	call	_EUSART_Read	;wreg free
  4631  000DC2  C03D  FFD9         	movff	GetsRS485@RxData,fsr2l
  4632  000DC6  C03E  FFDA         	movff	GetsRS485@RxData+1,fsr2h
  4633  000DCA  6EDF               	movwf	indf2,c
  4634                           
  4635                           ;Rs485.c: 44:         Ret = 1;
  4636  000DCC  0E01               	movlw	1
  4637  000DCE  6E3F               	movwf	GetsRS485@Ret,c
  4638                           
  4639                           ;Rs485.c: 45:         RxStatus = EUSART_get_last_status();
  4640  000DD0  ECED  F007         	call	_EUSART_get_last_status	;wreg free
  4641  000DD4  6E40               	movwf	GetsRS485@RxStatus,c	;volatile
  4642                           
  4643                           ;Rs485.c: 46:         if (RxStatus.ferr)
  4644  000DD6  A240               	btfss	GetsRS485@RxStatus,1,c	;volatile
  4645  000DD8  D002               	goto	l423
  4646                           
  4647                           ;Rs485.c: 47:         {;Rs485.c: 48:             Ret = 0;
  4648  000DDA  0E00               	movlw	0
  4649  000DDC  6E3F               	movwf	GetsRS485@Ret,c
  4650  000DDE                     l423:
  4651                           
  4652                           ;Rs485.c: 51:     return(Ret);
  4653  000DDE  503F               	movf	GetsRS485@Ret,w,c
  4654  000DE0  0012               	return		;funcret
  4655  000DE2                     __end_of_GetsRS485:
  4656                           	opt callstack 0
  4657                           
  4658 ;; *************** function _EUSART_is_rx_ready *****************
  4659 ;; Defined at:
  4660 ;;		line 98 in file "mcc_generated_files/eusart.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;		None
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      _Bool 
  4667 ;; Registers used:
  4668 ;;		wreg
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4678 ;;Total ram usage:        0 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    4
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_GetsRS485
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text27
  4689  000F96                     __ptext27:
  4690                           	opt callstack 0
  4691  000F96                     _EUSART_is_rx_ready:
  4692                           	opt callstack 24
  4693                           
  4694                           ;mcc_generated_files/eusart.c: 100:     return PIR1bits.RC1IF;
  4695                           
  4696                           ;incstack = 0
  4697  000F96  AA9E               	btfss	3998,5,c	;volatile
  4698  000F98  D002               	goto	u1050
  4699  000F9A  0E01               	movlw	1
  4700  000F9C  0012               	return	
  4701  000F9E                     u1050:
  4702  000F9E  0E00               	movlw	0
  4703  000FA0  0012               	return		;funcret
  4704  000FA2                     __end_of_EUSART_is_rx_ready:
  4705                           	opt callstack 0
  4706                           
  4707 ;; *************** function _EUSART_get_last_status *****************
  4708 ;; Defined at:
  4709 ;;		line 108 in file "mcc_generated_files/eusart.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;		None
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;		None
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  1    wreg      struct .
  4716 ;; Registers used:
  4717 ;;		wreg, status,2
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;Total ram usage:        0 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    4
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_GetsRS485
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text28
  4738  000FDA                     __ptext28:
  4739                           	opt callstack 0
  4740  000FDA                     _EUSART_get_last_status:
  4741                           	opt callstack 24
  4742                           
  4743                           ;mcc_generated_files/eusart.c: 109:     return eusartRxLastError;
  4744                           
  4745                           ;incstack = 0
  4746  000FDA  502E               	movf	_eusartRxLastError,w,c	;volatile
  4747  000FDC  0012               	return		;funcret
  4748  000FDE                     __end_of_EUSART_get_last_status:
  4749                           	opt callstack 0
  4750                           
  4751 ;; *************** function _EUSART_Read *****************
  4752 ;; Defined at:
  4753 ;;		line 112 in file "mcc_generated_files/eusart.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;		None
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;		None
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      unsigned char 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;Total ram usage:        0 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:    4
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_GetsRS485
  4778 ;;		_getch
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text29
  4783  000F1E                     __ptext29:
  4784                           	opt callstack 0
  4785  000F1E                     _EUSART_Read:
  4786                           	opt callstack 24
  4787                           
  4788                           ;mcc_generated_files/eusart.c: 114:     while(!PIR1bits.RC1IF)
  4789                           
  4790                           ;mcc_generated_files/eusart.c: 115:     {;mcc_generated_files/eusart.c: 116:     }
  4791                           
  4792                           ;incstack = 0
  4793  000F1E  AA9E               	btfss	3998,5,c	;volatile
  4794  000F20  D7FE               	goto	_EUSART_Read
  4795                           
  4796                           ;mcc_generated_files/eusart.c: 118:     eusartRxLastError.status = 0;
  4797  000F22  0E00               	movlw	0
  4798  000F24  6E2E               	movwf	_eusartRxLastError,c	;volatile
  4799                           
  4800                           ;mcc_generated_files/eusart.c: 120:     if(1 == RCSTAbits.OERR)
  4801  000F26  A2AB               	btfss	4011,1,c	;volatile
  4802  000F28  D002               	goto	l2250
  4803                           
  4804                           ;mcc_generated_files/eusart.c: 121:     {;mcc_generated_files/eusart.c: 124:         RCS
      +                          TAbits.CREN = 0;
  4805  000F2A  98AB               	bcf	4011,4,c	;volatile
  4806                           
  4807                           ;mcc_generated_files/eusart.c: 125:         RCSTAbits.CREN = 1;
  4808  000F2C  88AB               	bsf	4011,4,c	;volatile
  4809  000F2E                     l2250:
  4810                           
  4811                           ;mcc_generated_files/eusart.c: 128:     return RCREG;
  4812  000F2E  50AE               	movf	4014,w,c	;volatile
  4813  000F30  0012               	return		;funcret
  4814  000F32                     __end_of_EUSART_Read:
  4815                           	opt callstack 0
  4816                           
  4817 ;; *************** function _ProcessInit *****************
  4818 ;; Defined at:
  4819 ;;		line 121 in file "Application.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;Total ram usage:        0 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    7
  4840 ;; This function calls:
  4841 ;;		_DelayLongo
  4842 ;;		_SetProcessFunc
  4843 ;;		_TMR0_SetInterruptHandler
  4844 ;;		_Ws0010BufBitmap
  4845 ;;		_Ws0010BufGotoXY
  4846 ;;		_Ws0010Init
  4847 ;;		_Ws0010PutGotoXY
  4848 ;;		_Ws0010Refresh
  4849 ;;		_fifo_init
  4850 ;; This function is called by:
  4851 ;;		_main
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text30
  4856  000880                     __ptext30:
  4857                           	opt callstack 0
  4858  000880                     _ProcessInit:
  4859                           	opt callstack 23
  4860                           
  4861                           ;Application.c: 124:     SetProcessFunc(0, "Cx", 2, SendCX);
  4862                           
  4863                           ;incstack = 0
  4864  000880  0EB8               	movlw	low STR_1
  4865  000882  6E48               	movwf	SetProcessFunc@Command,c
  4866  000884  0EFD               	movlw	high STR_1
  4867  000886  6E49               	movwf	SetProcessFunc@Command+1,c
  4868  000888  0E02               	movlw	2
  4869  00088A  6E4A               	movwf	SetProcessFunc@Size,c
  4870  00088C  0E62               	movlw	low _SendCX
  4871  00088E  6E4B               	movwf	SetProcessFunc@FunctionHandler,c
  4872  000890  0E0F               	movlw	high _SendCX
  4873  000892  6E4C               	movwf	SetProcessFunc@FunctionHandler+1,c
  4874  000894  0E00               	movlw	0
  4875  000896  ECD9  F005         	call	_SetProcessFunc
  4876                           
  4877                           ;Application.c: 125:     SetProcessFunc(1, "Ok", 2, SendSY);
  4878  00089A  0EB2               	movlw	low STR_5
  4879  00089C  6E48               	movwf	SetProcessFunc@Command,c
  4880  00089E  0EFD               	movlw	high STR_5
  4881  0008A0  6E49               	movwf	SetProcessFunc@Command+1,c
  4882  0008A2  0E02               	movlw	2
  4883  0008A4  6E4A               	movwf	SetProcessFunc@Size,c
  4884  0008A6  0E70               	movlw	low _SendSY
  4885  0008A8  6E4B               	movwf	SetProcessFunc@FunctionHandler,c
  4886  0008AA  0E0F               	movlw	high _SendSY
  4887  0008AC  6E4C               	movwf	SetProcessFunc@FunctionHandler+1,c
  4888  0008AE  0E01               	movlw	1
  4889  0008B0  ECD9  F005         	call	_SetProcessFunc
  4890                           
  4891                           ;Application.c: 126:     SetProcessFunc(2, "Bt", 2, SendBT);
  4892  0008B4  0EB5               	movlw	low STR_3
  4893  0008B6  6E48               	movwf	SetProcessFunc@Command,c
  4894  0008B8  0EFD               	movlw	high STR_3
  4895  0008BA  6E49               	movwf	SetProcessFunc@Command+1,c
  4896  0008BC  0E02               	movlw	2
  4897  0008BE  6E4A               	movwf	SetProcessFunc@Size,c
  4898  0008C0  0E54               	movlw	low _SendBT
  4899  0008C2  6E4B               	movwf	SetProcessFunc@FunctionHandler,c
  4900  0008C4  0E0F               	movlw	high _SendBT
  4901  0008C6  6E4C               	movwf	SetProcessFunc@FunctionHandler+1,c
  4902  0008C8  0E02               	movlw	2
  4903  0008CA  ECD9  F005         	call	_SetProcessFunc
  4904                           
  4905                           ;Application.c: 129:     fifo_init(&AplicationQueue, 4);
  4906  0008CE  0EB1               	movlw	low _AplicationQueue
  4907  0008D0  6E3D               	movwf	fifo_init@p_fifo,c
  4908  0008D2  0E00               	movlw	high _AplicationQueue
  4909  0008D4  6E3E               	movwf	fifo_init@p_fifo+1,c
  4910  0008D6  0E04               	movlw	4
  4911  0008D8  6E3F               	movwf	fifo_init@size,c
  4912  0008DA  EC84  F005         	call	_fifo_init	;wreg free
  4913                           
  4914                           ;Application.c: 132:     TMR0_SetInterruptHandler(SetTick1S);
  4915  0008DE  0E0C               	movlw	low _SetTick1S
  4916  0008E0  6E3D               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  4917  0008E2  0E0D               	movlw	high _SetTick1S
  4918  0008E4  6E3E               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  4919  0008E6  ECE5  F007         	call	_TMR0_SetInterruptHandler	;wreg free
  4920                           
  4921                           ;Application.c: 135:     Ws0010Init();
  4922  0008EA  ECD3  F004         	call	_Ws0010Init	;wreg free
  4923                           
  4924                           ;Application.c: 138:     Ws0010PutGotoXY(1, 1);
  4925  0008EE  0E01               	movlw	1
  4926  0008F0  6E41               	movwf	Ws0010PutGotoXY@posy,c
  4927  0008F2  0E01               	movlw	1
  4928  0008F4  EC76  F007         	call	_Ws0010PutGotoXY
  4929                           
  4930                           ;Application.c: 139:     Ws0010BufGotoXY(1, 1);
  4931  0008F8  0E01               	movlw	1
  4932  0008FA  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4933  0008FC  0E01               	movlw	1
  4934  0008FE  EC34  F007         	call	_Ws0010BufGotoXY
  4935                           
  4936                           ;Application.c: 140:     Ws0010BufBitmap(LogoClk, 180);
  4937  000902  0EFE               	movlw	low _LogoClk
  4938  000904  6E45               	movwf	Ws0010BufBitmap@Image,c
  4939  000906  0EFC               	movlw	high _LogoClk
  4940  000908  6E46               	movwf	Ws0010BufBitmap@Image+1,c
  4941  00090A  0EB4               	movlw	180
  4942  00090C  6E47               	movwf	Ws0010BufBitmap@Size,c
  4943  00090E  EC35  F003         	call	_Ws0010BufBitmap	;wreg free
  4944                           
  4945                           ;Application.c: 141:     Ws0010Refresh();
  4946  000912  EC26  F006         	call	_Ws0010Refresh	;wreg free
  4947                           
  4948                           ;Application.c: 142:     DelayLongo();
  4949  000916  EC46  F007         	call	_DelayLongo	;wreg free
  4950                           
  4951                           ;Application.c: 143:     DelayLongo();
  4952  00091A  EC46  F007         	call	_DelayLongo	;wreg free
  4953  00091E  908C               	bcf	3980,0,c	;volatile
  4954  000920  0012               	return		;funcret
  4955  000922                     __end_of_ProcessInit:
  4956                           	opt callstack 0
  4957                           
  4958 ;; *************** function _fifo_init *****************
  4959 ;; Defined at:
  4960 ;;		line 26 in file "Queue.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;  p_fifo          2    2[COMRAM] PTR struct .
  4963 ;;		 -> AplicationQueue(24), 
  4964 ;;  size            1    4[COMRAM] unsigned char 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4976 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;Total ram usage:        3 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; Hardware stack levels required when called:    4
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		_ProcessInit
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text31
  4991  000B08                     __ptext31:
  4992                           	opt callstack 0
  4993  000B08                     _fifo_init:
  4994                           	opt callstack 25
  4995                           
  4996                           ;Queue.c: 26: void fifo_init(fifo_t* p_fifo, uint8_t size);Queue.c: 27: {;Queue.c: 28:  
      +                             if (p_fifo)
  4997                           
  4998                           ;incstack = 0
  4999  000B08  503D               	movf	fifo_init@p_fifo,w,c
  5000  000B0A  103E               	iorwf	fifo_init@p_fifo+1,w,c
  5001  000B0C  B4D8               	btfsc	status,2,c
  5002  000B0E  0012               	return	
  5003                           
  5004                           ;Queue.c: 29:     {;Queue.c: 30:         p_fifo->v_data[0] = 0;
  5005  000B10  EE20 F001          	lfsr	2,1
  5006  000B14  503D               	movf	fifo_init@p_fifo,w,c
  5007  000B16  26D9               	addwf	fsr2l,f,c
  5008  000B18  503E               	movf	fifo_init@p_fifo+1,w,c
  5009  000B1A  22DA               	addwfc	fsr2h,f,c
  5010  000B1C  0E00               	movlw	0
  5011  000B1E  6EDF               	movwf	indf2,c
  5012                           
  5013                           ;Queue.c: 31:         p_fifo->size = size;
  5014  000B20  C03D  FFD9         	movff	fifo_init@p_fifo,fsr2l
  5015  000B24  C03E  FFDA         	movff	fifo_init@p_fifo+1,fsr2h
  5016  000B28  C03F  FFDF         	movff	fifo_init@size,indf2
  5017                           
  5018                           ;Queue.c: 32:         p_fifo->full = 0;
  5019  000B2C  EE20 F017          	lfsr	2,23
  5020  000B30  503D               	movf	fifo_init@p_fifo,w,c
  5021  000B32  26D9               	addwf	fsr2l,f,c
  5022  000B34  503E               	movf	fifo_init@p_fifo+1,w,c
  5023  000B36  22DA               	addwfc	fsr2h,f,c
  5024  000B38  0E00               	movlw	0
  5025  000B3A  6EDF               	movwf	indf2,c
  5026                           
  5027                           ;Queue.c: 33:         p_fifo->front = 0;
  5028  000B3C  EE20 F015          	lfsr	2,21
  5029  000B40  503D               	movf	fifo_init@p_fifo,w,c
  5030  000B42  26D9               	addwf	fsr2l,f,c
  5031  000B44  503E               	movf	fifo_init@p_fifo+1,w,c
  5032  000B46  22DA               	addwfc	fsr2h,f,c
  5033  000B48  0E00               	movlw	0
  5034  000B4A  6EDF               	movwf	indf2,c
  5035                           
  5036                           ;Queue.c: 34:         p_fifo->back = 0;
  5037  000B4C  EE20 F016          	lfsr	2,22
  5038  000B50  503D               	movf	fifo_init@p_fifo,w,c
  5039  000B52  26D9               	addwf	fsr2l,f,c
  5040  000B54  503E               	movf	fifo_init@p_fifo+1,w,c
  5041  000B56  22DA               	addwfc	fsr2h,f,c
  5042  000B58  0E00               	movlw	0
  5043  000B5A  6EDF               	movwf	indf2,c
  5044  000B5C  0012               	return		;funcret
  5045  000B5E                     __end_of_fifo_init:
  5046                           	opt callstack 0
  5047                           
  5048 ;; *************** function _Ws0010Refresh *****************
  5049 ;; Defined at:
  5050 ;;		line 326 in file "WS0010.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  j               1    9[COMRAM] unsigned char 
  5055 ;;  dado            1    8[COMRAM] unsigned char 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  1    wreg      void 
  5058 ;; Registers used:
  5059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;Total ram usage:        2 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:    6
  5072 ;; This function calls:
  5073 ;;		_Ws0010PutByte
  5074 ;;		_Ws0010PutGotoXY
  5075 ;; This function is called by:
  5076 ;;		_ProcessInit
  5077 ;;		_PrintData
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text32
  5082  000C4C                     __ptext32:
  5083                           	opt callstack 0
  5084  000C4C                     _Ws0010Refresh:
  5085                           	opt callstack 22
  5086                           
  5087                           ;WS0010.c: 328:     uint8_t j, dado;;WS0010.c: 329:     Ws0010PutGotoXY(1, 1);
  5088                           
  5089                           ;incstack = 0
  5090  000C4C  0E01               	movlw	1
  5091  000C4E  6E41               	movwf	Ws0010PutGotoXY@posy,c
  5092  000C50  0E01               	movlw	1
  5093  000C52  EC76  F007         	call	_Ws0010PutGotoXY
  5094                           
  5095                           ;WS0010.c: 331:     for (j = 0; j < 200; j++)
  5096  000C56  0E00               	movlw	0
  5097  000C58  6E44               	movwf	Ws0010Refresh@j,c
  5098  000C5A                     l2284:
  5099                           
  5100                           ;WS0010.c: 332:     {;WS0010.c: 333:         dado = Ws0010_buffer[j];
  5101  000C5A  0E00               	movlw	low _Ws0010_buffer
  5102  000C5C  2444               	addwf	Ws0010Refresh@j,w,c
  5103  000C5E  6ED9               	movwf	fsr2l,c
  5104  000C60  6ADA               	clrf	fsr2h,c
  5105  000C62  0E01               	movlw	high _Ws0010_buffer
  5106  000C64  22DA               	addwfc	fsr2h,f,c
  5107  000C66  50DF               	movf	indf2,w,c
  5108  000C68  6E43               	movwf	Ws0010Refresh@dado,c
  5109                           
  5110                           ;WS0010.c: 334:         if (!dado)
  5111  000C6A  5043               	movf	Ws0010Refresh@dado,w,c
  5112  000C6C  A4D8               	btfss	status,2,c
  5113  000C6E  D005               	goto	l557
  5114                           
  5115                           ;WS0010.c: 335:             Ws0010PutByte(0, 0x06);
  5116  000C70  0E06               	movlw	6
  5117  000C72  6E3D               	movwf	Ws0010PutByte@fras,c
  5118  000C74  0E00               	movlw	0
  5119  000C76  EC91  F003         	call	_Ws0010PutByte
  5120  000C7A                     l557:
  5121                           
  5122                           ;WS0010.c: 336:         Ws0010PutByte(1, dado);
  5123  000C7A  C043  F03D         	movff	Ws0010Refresh@dado,Ws0010PutByte@fras
  5124  000C7E  0E01               	movlw	1
  5125  000C80  EC91  F003         	call	_Ws0010PutByte
  5126                           
  5127                           ;WS0010.c: 337:     }
  5128  000C84  2A44               	incf	Ws0010Refresh@j,f,c
  5129  000C86  0EC7               	movlw	199
  5130  000C88  6444               	cpfsgt	Ws0010Refresh@j,c
  5131  000C8A  D7E7               	goto	l2284
  5132  000C8C  0012               	return	
  5133  000C8E                     __end_of_Ws0010Refresh:
  5134                           	opt callstack 0
  5135                           
  5136 ;; *************** function _Ws0010PutGotoXY *****************
  5137 ;; Defined at:
  5138 ;;		line 125 in file "WS0010.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  posx            1    wreg     unsigned char 
  5141 ;;  posy            1    6[COMRAM] unsigned char 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  posx            1    7[COMRAM] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0, cstack
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5153 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;Total ram usage:        2 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; Hardware stack levels required when called:    5
  5160 ;; This function calls:
  5161 ;;		_Ws0010PutByte
  5162 ;; This function is called by:
  5163 ;;		_ProcessInit
  5164 ;;		_PrintData
  5165 ;;		_Ws0010Refresh
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text33
  5170  000EEC                     __ptext33:
  5171                           	opt callstack 0
  5172  000EEC                     _Ws0010PutGotoXY:
  5173                           	opt callstack 22
  5174                           
  5175                           ;incstack = 0
  5176                           ;Ws0010PutGotoXY@posx stored from wreg
  5177  000EEC  6E42               	movwf	Ws0010PutGotoXY@posx,c
  5178                           
  5179                           ;WS0010.c: 125: void Ws0010PutGotoXY(uint8_t posx, uint8_t posy);WS0010.c: 126: {;WS0010
      +                          .c: 127:     Ws0010PutByte(0, posx + 0x7F);
  5180  000EEE  5042               	movf	Ws0010PutGotoXY@posx,w,c
  5181  000EF0  0F7F               	addlw	127
  5182  000EF2  6E3D               	movwf	Ws0010PutByte@fras,c
  5183  000EF4  0E00               	movlw	0
  5184  000EF6  EC91  F003         	call	_Ws0010PutByte
  5185                           
  5186                           ;WS0010.c: 128:     Ws0010PutByte(0, posy + 0x3F);
  5187  000EFA  5041               	movf	Ws0010PutGotoXY@posy,w,c
  5188  000EFC  0F3F               	addlw	63
  5189  000EFE  6E3D               	movwf	Ws0010PutByte@fras,c
  5190  000F00  0E00               	movlw	0
  5191  000F02  EC91  F003         	call	_Ws0010PutByte
  5192  000F06  0012               	return		;funcret
  5193  000F08                     __end_of_Ws0010PutGotoXY:
  5194                           	opt callstack 0
  5195                           
  5196 ;; *************** function _Ws0010PutByte *****************
  5197 ;; Defined at:
  5198 ;;		line 41 in file "WS0010.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  end             1    wreg     unsigned char 
  5201 ;;  fras            1    2[COMRAM] unsigned char 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  end             1    5[COMRAM] unsigned char 
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5213 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;Total ram usage:        4 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    4
  5220 ;; This function calls:
  5221 ;;		Nothing
  5222 ;; This function is called by:
  5223 ;;		_Ws0010PutGotoXY
  5224 ;;		_Ws0010Refresh
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text34
  5229  000722                     __ptext34:
  5230                           	opt callstack 0
  5231  000722                     _Ws0010PutByte:
  5232                           	opt callstack 22
  5233                           
  5234                           ;incstack = 0
  5235                           ;Ws0010PutByte@end stored from wreg
  5236  000722  6E40               	movwf	Ws0010PutByte@end,c
  5237                           
  5238                           ;WS0010.c: 41: void Ws0010PutByte(uint8_t end, uint8_t fras);WS0010.c: 42: {;WS0010.c: 4
      +                          3:     TRISA &= 0xF0;
  5239  000724  0EF0               	movlw	240
  5240  000726  1692               	andwf	3986,f,c	;volatile
  5241                           
  5242                           ;WS0010.c: 44:     LATEbits.LATE0 = end;
  5243  000728  B040               	btfsc	Ws0010PutByte@end,0,c
  5244  00072A  D002               	bra	u1005
  5245  00072C  908D               	bcf	3981,0,c	;volatile
  5246  00072E  D001               	bra	u1006
  5247  000730                     u1005:
  5248  000730  808D               	bsf	3981,0,c	;volatile
  5249  000732                     u1006:
  5250                           
  5251                           ;WS0010.c: 47:     fras = ((fras & 0x0F) << 4 | (fras & 0xF0) >> 4);
  5252  000732  C03D  F03E         	movff	Ws0010PutByte@fras,??_Ws0010PutByte
  5253  000736  3A3E               	swapf	??_Ws0010PutByte,f,c
  5254  000738  0E0F               	movlw	15
  5255  00073A  163E               	andwf	??_Ws0010PutByte,f,c
  5256  00073C  0E0F               	movlw	15
  5257  00073E  163E               	andwf	??_Ws0010PutByte,f,c
  5258  000740  C03D  F03F         	movff	Ws0010PutByte@fras,??_Ws0010PutByte+1
  5259  000744  0E0F               	movlw	15
  5260  000746  163F               	andwf	??_Ws0010PutByte+1,f,c
  5261  000748  383F               	swapf	??_Ws0010PutByte+1,w,c
  5262  00074A  0BF0               	andlw	240
  5263  00074C  103E               	iorwf	??_Ws0010PutByte,w,c
  5264  00074E  6E3D               	movwf	Ws0010PutByte@fras,c
  5265                           
  5266                           ;WS0010.c: 51:     LATA &= 0xF0;
  5267  000750  0EF0               	movlw	240
  5268  000752  1689               	andwf	3977,f,c	;volatile
  5269                           
  5270                           ;WS0010.c: 52:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5271  000754  0E21               	movlw	33
  5272  000756                     u1807:
  5273  000756  2EE8               	decfsz	wreg,f,c
  5274  000758  D7FE               	bra	u1807
  5275  00075A  F000               	nop	
  5276                           
  5277                           ;WS0010.c: 53:     (LATA |= (fras & 0x0F));
  5278  00075C  503D               	movf	Ws0010PutByte@fras,w,c
  5279  00075E  0B0F               	andlw	15
  5280  000760  1289               	iorwf	3977,f,c	;volatile
  5281                           
  5282                           ;WS0010.c: 54:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5283  000762  0E21               	movlw	33
  5284  000764                     u1817:
  5285  000764  2EE8               	decfsz	wreg,f,c
  5286  000766  D7FE               	bra	u1817
  5287  000768  F000               	nop	
  5288                           
  5289                           ;WS0010.c: 55:     LATEbits.LATE1 = 1;
  5290  00076A  828D               	bsf	3981,1,c	;volatile
  5291                           
  5292                           ;WS0010.c: 56:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5293  00076C  0E21               	movlw	33
  5294  00076E                     u1827:
  5295  00076E  2EE8               	decfsz	wreg,f,c
  5296  000770  D7FE               	bra	u1827
  5297  000772  F000               	nop	
  5298                           
  5299                           ;WS0010.c: 57:     LATEbits.LATE1 = 0;
  5300  000774  928D               	bcf	3981,1,c	;volatile
  5301                           
  5302                           ;WS0010.c: 58:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5303  000776  0E21               	movlw	33
  5304  000778                     u1837:
  5305  000778  2EE8               	decfsz	wreg,f,c
  5306  00077A  D7FE               	bra	u1837
  5307  00077C  F000               	nop	
  5308                           
  5309                           ;WS0010.c: 59:     LATEbits.LATE0 = end;
  5310  00077E  B040               	btfsc	Ws0010PutByte@end,0,c
  5311  000780  D002               	bra	u1015
  5312  000782  908D               	bcf	3981,0,c	;volatile
  5313  000784  D001               	bra	u1016
  5314  000786                     u1015:
  5315  000786  808D               	bsf	3981,0,c	;volatile
  5316  000788                     u1016:
  5317                           
  5318                           ;WS0010.c: 61:     fras = ((fras & 0x0F) << 4 | (fras & 0xF0) >> 4);
  5319  000788  C03D  F03E         	movff	Ws0010PutByte@fras,??_Ws0010PutByte
  5320  00078C  3A3E               	swapf	??_Ws0010PutByte,f,c
  5321  00078E  0E0F               	movlw	15
  5322  000790  163E               	andwf	??_Ws0010PutByte,f,c
  5323  000792  0E0F               	movlw	15
  5324  000794  163E               	andwf	??_Ws0010PutByte,f,c
  5325  000796  C03D  F03F         	movff	Ws0010PutByte@fras,??_Ws0010PutByte+1
  5326  00079A  0E0F               	movlw	15
  5327  00079C  163F               	andwf	??_Ws0010PutByte+1,f,c
  5328  00079E  383F               	swapf	??_Ws0010PutByte+1,w,c
  5329  0007A0  0BF0               	andlw	240
  5330  0007A2  103E               	iorwf	??_Ws0010PutByte,w,c
  5331  0007A4  6E3D               	movwf	Ws0010PutByte@fras,c
  5332                           
  5333                           ;WS0010.c: 63:     LATA &= 0xF0;
  5334  0007A6  0EF0               	movlw	240
  5335  0007A8  1689               	andwf	3977,f,c	;volatile
  5336                           
  5337                           ;WS0010.c: 64:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5338  0007AA  0E21               	movlw	33
  5339  0007AC                     u1847:
  5340  0007AC  2EE8               	decfsz	wreg,f,c
  5341  0007AE  D7FE               	bra	u1847
  5342  0007B0  F000               	nop	
  5343                           
  5344                           ;WS0010.c: 65:     (LATA |= (fras & 0x0F));
  5345  0007B2  503D               	movf	Ws0010PutByte@fras,w,c
  5346  0007B4  0B0F               	andlw	15
  5347  0007B6  1289               	iorwf	3977,f,c	;volatile
  5348                           
  5349                           ;WS0010.c: 66:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5350  0007B8  0E21               	movlw	33
  5351  0007BA                     u1857:
  5352  0007BA  2EE8               	decfsz	wreg,f,c
  5353  0007BC  D7FE               	bra	u1857
  5354  0007BE  F000               	nop	
  5355                           
  5356                           ;WS0010.c: 67:     LATEbits.LATE1 = 1;
  5357  0007C0  828D               	bsf	3981,1,c	;volatile
  5358                           
  5359                           ;WS0010.c: 68:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5360  0007C2  0E21               	movlw	33
  5361  0007C4                     u1867:
  5362  0007C4  2EE8               	decfsz	wreg,f,c
  5363  0007C6  D7FE               	bra	u1867
  5364  0007C8  F000               	nop	
  5365                           
  5366                           ;WS0010.c: 69:     LATEbits.LATE1 = 0;
  5367  0007CA  928D               	bcf	3981,1,c	;volatile
  5368                           
  5369                           ;WS0010.c: 70:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5370  0007CC  0E21               	movlw	33
  5371  0007CE                     u1877:
  5372  0007CE  2EE8               	decfsz	wreg,f,c
  5373  0007D0  D7FE               	bra	u1877
  5374  0007D2  F000               	nop	
  5375  0007D4  0012               	return		;funcret
  5376  0007D6                     __end_of_Ws0010PutByte:
  5377                           	opt callstack 0
  5378                           
  5379 ;; *************** function _Ws0010Init *****************
  5380 ;; Defined at:
  5381 ;;		line 88 in file "WS0010.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;		None
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  init           14    2[COMRAM] unsigned char [14]
  5386 ;;  i               1   16[COMRAM] unsigned char 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      void 
  5389 ;; Registers used:
  5390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5399 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5400 ;;Total ram usage:       15 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; Hardware stack levels required when called:    4
  5403 ;; This function calls:
  5404 ;;		Nothing
  5405 ;; This function is called by:
  5406 ;;		_ProcessInit
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text35
  5411  0009A6                     __ptext35:
  5412                           	opt callstack 0
  5413  0009A6                     _Ws0010Init:
  5414                           	opt callstack 25
  5415                           
  5416                           ;WS0010.c: 93:     uint8_t init[14] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x22, 0x88, 0
      +                          x00, 0xCC, 0x11, 0xFF, 0x00, 0x66};
  5417                           
  5418                           ;incstack = 0
  5419  0009A6  EE20  F001         	lfsr	2,Ws0010Init@F3174
  5420  0009AA  EE10  F03D         	lfsr	1,Ws0010Init@init
  5421  0009AE  0E0D               	movlw	13
  5422  0009B0                     u1301:
  5423  0009B0  CFDB FFE3          	movff	plusw2,plusw1
  5424  0009B4  06E8               	decf	wreg,f,c
  5425  0009B6  E2FC               	bc	u1301
  5426                           
  5427                           ;WS0010.c: 98:     uint8_t i;;WS0010.c: 100:     TRISEbits.TRISE1 = 0;
  5428  0009B8  9296               	bcf	3990,1,c	;volatile
  5429                           
  5430                           ;WS0010.c: 101:     TRISEbits.TRISE0 = 0;
  5431  0009BA  9096               	bcf	3990,0,c	;volatile
  5432                           
  5433                           ;WS0010.c: 103:     for (i = 0; i < 14; i++)
  5434  0009BC  0E00               	movlw	0
  5435  0009BE  6E4B               	movwf	Ws0010Init@i,c
  5436  0009C0                     l2474:
  5437                           
  5438                           ;WS0010.c: 104:     {;WS0010.c: 105:         TRISA &= 0xF0;
  5439  0009C0  0EF0               	movlw	240
  5440  0009C2  1692               	andwf	3986,f,c	;volatile
  5441                           
  5442                           ;WS0010.c: 106:         LATEbits.LATE0 = 0;
  5443  0009C4  908D               	bcf	3981,0,c	;volatile
  5444                           
  5445                           ;WS0010.c: 107:         LATA &= 0xF0;
  5446  0009C6  0EF0               	movlw	240
  5447  0009C8  1689               	andwf	3977,f,c	;volatile
  5448                           
  5449                           ;WS0010.c: 108:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5450  0009CA  0E21               	movlw	33
  5451  0009CC                     u1887:
  5452  0009CC  2EE8               	decfsz	wreg,f,c
  5453  0009CE  D7FE               	bra	u1887
  5454  0009D0  F000               	nop	
  5455                           
  5456                           ;WS0010.c: 109:         (LATA |= (init[i] & 0x0F));
  5457  0009D2  0E3D               	movlw	low Ws0010Init@init
  5458  0009D4  244B               	addwf	Ws0010Init@i,w,c
  5459  0009D6  6ED9               	movwf	fsr2l,c
  5460  0009D8  6ADA               	clrf	fsr2h,c
  5461  0009DA  0E00               	movlw	high Ws0010Init@init
  5462  0009DC  22DA               	addwfc	fsr2h,f,c
  5463  0009DE  50DF               	movf	indf2,w,c
  5464  0009E0  0B0F               	andlw	15
  5465  0009E2  1289               	iorwf	3977,f,c	;volatile
  5466                           
  5467                           ;WS0010.c: 110:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5468  0009E4  0E21               	movlw	33
  5469  0009E6                     u1897:
  5470  0009E6  2EE8               	decfsz	wreg,f,c
  5471  0009E8  D7FE               	bra	u1897
  5472  0009EA  F000               	nop	
  5473                           
  5474                           ;WS0010.c: 111:         LATEbits.LATE1 = 1;
  5475  0009EC  828D               	bsf	3981,1,c	;volatile
  5476                           
  5477                           ;WS0010.c: 112:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5478  0009EE  0E21               	movlw	33
  5479  0009F0                     u1907:
  5480  0009F0  2EE8               	decfsz	wreg,f,c
  5481  0009F2  D7FE               	bra	u1907
  5482  0009F4  F000               	nop	
  5483                           
  5484                           ;WS0010.c: 113:         LATEbits.LATE1 = 0;
  5485  0009F6  928D               	bcf	3981,1,c	;volatile
  5486                           
  5487                           ;WS0010.c: 114:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5488  0009F8  0E21               	movlw	33
  5489  0009FA                     u1917:
  5490  0009FA  2EE8               	decfsz	wreg,f,c
  5491  0009FC  D7FE               	bra	u1917
  5492  0009FE  F000               	nop	
  5493                           
  5494                           ;WS0010.c: 115:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5495  000A00  0E21               	movlw	33
  5496  000A02                     u1927:
  5497  000A02  2EE8               	decfsz	wreg,f,c
  5498  000A04  D7FE               	bra	u1927
  5499  000A06  F000               	nop	
  5500                           
  5501                           ;WS0010.c: 116:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5502  000A08  0E21               	movlw	33
  5503  000A0A                     u1937:
  5504  000A0A  2EE8               	decfsz	wreg,f,c
  5505  000A0C  D7FE               	bra	u1937
  5506  000A0E  F000               	nop	
  5507                           
  5508                           ;WS0010.c: 117:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5509  000A10  0E21               	movlw	33
  5510  000A12                     u1947:
  5511  000A12  2EE8               	decfsz	wreg,f,c
  5512  000A14  D7FE               	bra	u1947
  5513  000A16  F000               	nop	
  5514                           
  5515                           ;WS0010.c: 118:     }
  5516  000A18  2A4B               	incf	Ws0010Init@i,f,c
  5517  000A1A  0E0D               	movlw	13
  5518  000A1C  644B               	cpfsgt	Ws0010Init@i,c
  5519  000A1E  D7D0               	goto	l2474
  5520  000A20  0012               	return	
  5521  000A22                     __end_of_Ws0010Init:
  5522                           	opt callstack 0
  5523                           
  5524 ;; *************** function _Ws0010BufBitmap *****************
  5525 ;; Defined at:
  5526 ;;		line 344 in file "WS0010.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  Image           2   10[COMRAM] PTR const unsigned char 
  5529 ;;		 -> LogoClk(180), 
  5530 ;;  Size            1   12[COMRAM] unsigned char 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;  j               2   16[COMRAM] unsigned short 
  5533 ;;  gap             1   15[COMRAM] unsigned char 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  1    wreg      void 
  5536 ;; Registers used:
  5537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5543 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5546 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5547 ;;Total ram usage:        8 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:    5
  5550 ;; This function calls:
  5551 ;;		_Ws0010BufGotoXY
  5552 ;;		___awdiv
  5553 ;; This function is called by:
  5554 ;;		_ProcessInit
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text36
  5559  00066A                     __ptext36:
  5560                           	opt callstack 0
  5561  00066A                     _Ws0010BufBitmap:
  5562                           	opt callstack 24
  5563                           
  5564                           ;WS0010.c: 344: void Ws0010BufBitmap(const uint8_t* Image, uint8_t Size);WS0010.c: 345: 
      +                          {;WS0010.c: 346:     uint8_t gap;;WS0010.c: 347:     uint16_t j;;WS0010.c: 348:     gap 
      +                          = (200 - Size) / 4;
  5565                           
  5566                           ;incstack = 0
  5567  00066A  5047               	movf	Ws0010BufBitmap@Size,w,c
  5568  00066C  08C8               	sublw	200
  5569  00066E  6E3D               	movwf	___awdiv@dividend,c
  5570  000670  0E00               	movlw	0
  5571  000672  A0D8               	btfss	status,0,c
  5572  000674  2AE8               	incf	wreg,f,c
  5573  000676  0800               	sublw	0
  5574  000678  6E3E               	movwf	___awdiv@dividend+1,c
  5575  00067A  0E00               	movlw	0
  5576  00067C  6E40               	movwf	___awdiv@divisor+1,c
  5577  00067E  0E04               	movlw	4
  5578  000680  6E3F               	movwf	___awdiv@divisor,c
  5579  000682  EC91  F004         	call	___awdiv	;wreg free
  5580  000686  503D               	movf	?___awdiv,w,c
  5581  000688  6E4A               	movwf	Ws0010BufBitmap@gap,c
  5582                           
  5583                           ;WS0010.c: 349:     Ws0010BufGotoXY(1, 1);
  5584  00068A  0E01               	movlw	1
  5585  00068C  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  5586  00068E  0E01               	movlw	1
  5587  000690  EC34  F007         	call	_Ws0010BufGotoXY
  5588                           
  5589                           ;WS0010.c: 350:     for (j = 0; j < Size; j++)
  5590  000694  0E00               	movlw	0
  5591  000696  6E4C               	movwf	Ws0010BufBitmap@j+1,c
  5592  000698  0E00               	movlw	0
  5593  00069A  6E4B               	movwf	Ws0010BufBitmap@j,c
  5594  00069C  D038               	goto	l2518
  5595  00069E                     l2508:
  5596                           
  5597                           ;WS0010.c: 351:     {;WS0010.c: 352:         if (j < Size / 2)
  5598  00069E  C047  F03D         	movff	Ws0010BufBitmap@Size,___awdiv@dividend
  5599  0006A2  6A3E               	clrf	___awdiv@dividend+1,c
  5600  0006A4  0E00               	movlw	0
  5601  0006A6  6E40               	movwf	___awdiv@divisor+1,c
  5602  0006A8  0E02               	movlw	2
  5603  0006AA  6E3F               	movwf	___awdiv@divisor,c
  5604  0006AC  EC91  F004         	call	___awdiv	;wreg free
  5605  0006B0  503D               	movf	?___awdiv,w,c
  5606  0006B2  5C4B               	subwf	Ws0010BufBitmap@j,w,c
  5607  0006B4  503E               	movf	?___awdiv+1,w,c
  5608  0006B6  584C               	subwfb	Ws0010BufBitmap@j+1,w,c
  5609  0006B8  B0D8               	btfsc	status,0,c
  5610  0006BA  D00D               	goto	l2512
  5611                           
  5612                           ;WS0010.c: 353:             Ws0010_buffer[j + gap] = *Image;
  5613  0006BC  C045  FFF6         	movff	Ws0010BufBitmap@Image,tblptrl
  5614  0006C0  C046  FFF7         	movff	Ws0010BufBitmap@Image+1,tblptrh
  5615  0006C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5616  0006C4  6AF8               	clrf	tblptru,c
  5617  0006C6                     	endif
  5618  0006C6                     	if	0	;tblptru may be non-zero
  5619  0006C6                     	endif
  5620  0006C6  0E00               	movlw	low _Ws0010_buffer
  5621  0006C8  6E48               	movwf	??_Ws0010BufBitmap& (0+255),c
  5622  0006CA  0E01               	movlw	high _Ws0010_buffer
  5623  0006CC  6E49               	movwf	(??_Ws0010BufBitmap+1)& (0+255),c
  5624  0006CE  504A               	movf	Ws0010BufBitmap@gap,w,c
  5625  0006D0  2648               	addwf	??_Ws0010BufBitmap,f,c
  5626  0006D2  0E00               	movlw	0
  5627  0006D4  D00E               	goto	L4
  5628  0006D6                     l2512:
  5629                           
  5630                           ;WS0010.c: 355:             Ws0010_buffer[j + (3 * gap)] = *Image;
  5631  0006D6  C045  FFF6         	movff	Ws0010BufBitmap@Image,tblptrl
  5632  0006DA  C046  FFF7         	movff	Ws0010BufBitmap@Image+1,tblptrh
  5633  0006DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5634  0006DE  6AF8               	clrf	tblptru,c
  5635  0006E0                     	endif
  5636  0006E0                     	if	0	;tblptru may be non-zero
  5637  0006E0                     	endif
  5638  0006E0  504A               	movf	Ws0010BufBitmap@gap,w,c
  5639  0006E2  0D03               	mullw	3
  5640  0006E4  0E00               	movlw	low _Ws0010_buffer
  5641  0006E6  6E48               	movwf	??_Ws0010BufBitmap& (0+255),c
  5642  0006E8  0E01               	movlw	high _Ws0010_buffer
  5643  0006EA  6E49               	movwf	(??_Ws0010BufBitmap+1)& (0+255),c
  5644  0006EC  50F3               	movf	prodl,w,c
  5645  0006EE  2648               	addwf	??_Ws0010BufBitmap,f,c
  5646  0006F0  50F4               	movf	prodh,w,c
  5647  0006F2                     L4:
  5648  0006F2  2249               	addwfc	??_Ws0010BufBitmap+1,f,c
  5649  0006F4  504B               	movf	Ws0010BufBitmap@j,w,c
  5650  0006F6  2448               	addwf	??_Ws0010BufBitmap,w,c
  5651  0006F8  6ED9               	movwf	fsr2l,c
  5652  0006FA  504C               	movf	Ws0010BufBitmap@j+1,w,c
  5653  0006FC  2049               	addwfc	??_Ws0010BufBitmap+1,w,c
  5654  0006FE  6EDA               	movwf	fsr2h,c
  5655  000700  0008               	tblrd		*
  5656  000702  CFF5 FFDF          	movff	tablat,indf2
  5657                           
  5658                           ;WS0010.c: 357:         Image++;
  5659  000706  4A45               	infsnz	Ws0010BufBitmap@Image,f,c
  5660  000708  2A46               	incf	Ws0010BufBitmap@Image+1,f,c
  5661                           
  5662                           ;WS0010.c: 358:     }
  5663  00070A  4A4B               	infsnz	Ws0010BufBitmap@j,f,c
  5664  00070C  2A4C               	incf	Ws0010BufBitmap@j+1,f,c
  5665  00070E                     l2518:
  5666  00070E  5047               	movf	Ws0010BufBitmap@Size,w,c
  5667  000710  6E48               	movwf	??_Ws0010BufBitmap& (0+255),c
  5668  000712  6A49               	clrf	(??_Ws0010BufBitmap+1)& (0+255),c
  5669  000714  5048               	movf	??_Ws0010BufBitmap,w,c
  5670  000716  5C4B               	subwf	Ws0010BufBitmap@j,w,c
  5671  000718  5049               	movf	??_Ws0010BufBitmap+1,w,c
  5672  00071A  584C               	subwfb	Ws0010BufBitmap@j+1,w,c
  5673  00071C  B0D8               	btfsc	status,0,c
  5674  00071E  0012               	return	
  5675  000720  D7BE               	goto	l2508
  5676  000722                     __end_of_Ws0010BufBitmap:
  5677                           	opt callstack 0
  5678                           
  5679 ;; *************** function ___awdiv *****************
  5680 ;; Defined at:
  5681 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  dividend        2    2[COMRAM] int 
  5684 ;;  divisor         2    4[COMRAM] int 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  quotient        2    8[COMRAM] int 
  5687 ;;  sign            1    7[COMRAM] unsigned char 
  5688 ;;  counter         1    6[COMRAM] unsigned char 
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  2    2[COMRAM] int 
  5691 ;; Registers used:
  5692 ;;		wreg, status,2, status,0
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;Total ram usage:        8 bytes
  5703 ;; Hardware stack levels used:    1
  5704 ;; Hardware stack levels required when called:    4
  5705 ;; This function calls:
  5706 ;;		Nothing
  5707 ;; This function is called by:
  5708 ;;		_Ws0010BufBitmap
  5709 ;;		_Ws0010Bufu8
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           	psect	text37
  5714  000922                     __ptext37:
  5715                           	opt callstack 0
  5716  000922                     ___awdiv:
  5717                           	opt callstack 24
  5718                           
  5719                           ;incstack = 0
  5720  000922  0E00               	movlw	0
  5721  000924  6E42               	movwf	___awdiv@sign,c
  5722  000926  AE40               	btfss	___awdiv@divisor+1,7,c
  5723  000928  D006               	goto	l2390
  5724  00092A  6C3F               	negf	___awdiv@divisor,c
  5725  00092C  1E40               	comf	___awdiv@divisor+1,f,c
  5726  00092E  B0D8               	btfsc	status,0,c
  5727  000930  2A40               	incf	___awdiv@divisor+1,f,c
  5728  000932  0E01               	movlw	1
  5729  000934  6E42               	movwf	___awdiv@sign,c
  5730  000936                     l2390:
  5731  000936  AE3E               	btfss	___awdiv@dividend+1,7,c
  5732  000938  D006               	goto	l2396
  5733  00093A  6C3D               	negf	___awdiv@dividend,c
  5734  00093C  1E3E               	comf	___awdiv@dividend+1,f,c
  5735  00093E  B0D8               	btfsc	status,0,c
  5736  000940  2A3E               	incf	___awdiv@dividend+1,f,c
  5737  000942  0E01               	movlw	1
  5738  000944  1A42               	xorwf	___awdiv@sign,f,c
  5739  000946                     l2396:
  5740  000946  0E00               	movlw	0
  5741  000948  6E44               	movwf	___awdiv@quotient+1,c
  5742  00094A  0E00               	movlw	0
  5743  00094C  6E43               	movwf	___awdiv@quotient,c
  5744  00094E  503F               	movf	___awdiv@divisor,w,c
  5745  000950  1040               	iorwf	___awdiv@divisor+1,w,c
  5746  000952  B4D8               	btfsc	status,2,c
  5747  000954  D01C               	goto	l2418
  5748  000956  0E01               	movlw	1
  5749  000958  6E41               	movwf	___awdiv@counter,c
  5750  00095A  D004               	goto	l2404
  5751  00095C                     l2402:
  5752  00095C  90D8               	bcf	status,0,c
  5753  00095E  363F               	rlcf	___awdiv@divisor,f,c
  5754  000960  3640               	rlcf	___awdiv@divisor+1,f,c
  5755  000962  2A41               	incf	___awdiv@counter,f,c
  5756  000964                     l2404:
  5757  000964  AE40               	btfss	___awdiv@divisor+1,7,c
  5758  000966  D7FA               	goto	l2402
  5759  000968                     u1260:
  5760  000968  90D8               	bcf	status,0,c
  5761  00096A  3643               	rlcf	___awdiv@quotient,f,c
  5762  00096C  3644               	rlcf	___awdiv@quotient+1,f,c
  5763  00096E  503F               	movf	___awdiv@divisor,w,c
  5764  000970  5C3D               	subwf	___awdiv@dividend,w,c
  5765  000972  5040               	movf	___awdiv@divisor+1,w,c
  5766  000974  583E               	subwfb	___awdiv@dividend+1,w,c
  5767  000976  A0D8               	btfss	status,0,c
  5768  000978  D005               	goto	l2414
  5769  00097A  503F               	movf	___awdiv@divisor,w,c
  5770  00097C  5E3D               	subwf	___awdiv@dividend,f,c
  5771  00097E  5040               	movf	___awdiv@divisor+1,w,c
  5772  000980  5A3E               	subwfb	___awdiv@dividend+1,f,c
  5773  000982  8043               	bsf	___awdiv@quotient,0,c
  5774  000984                     l2414:
  5775  000984  90D8               	bcf	status,0,c
  5776  000986  3240               	rrcf	___awdiv@divisor+1,f,c
  5777  000988  323F               	rrcf	___awdiv@divisor,f,c
  5778  00098A  2E41               	decfsz	___awdiv@counter,f,c
  5779  00098C  D7ED               	goto	u1260
  5780  00098E                     l2418:
  5781  00098E  5042               	movf	___awdiv@sign,w,c
  5782  000990  B4D8               	btfsc	status,2,c
  5783  000992  D004               	goto	l2422
  5784  000994  6C43               	negf	___awdiv@quotient,c
  5785  000996  1E44               	comf	___awdiv@quotient+1,f,c
  5786  000998  B0D8               	btfsc	status,0,c
  5787  00099A  2A44               	incf	___awdiv@quotient+1,f,c
  5788  00099C                     l2422:
  5789  00099C  C043  F03D         	movff	___awdiv@quotient,?___awdiv
  5790  0009A0  C044  F03E         	movff	___awdiv@quotient+1,?___awdiv+1
  5791  0009A4  0012               	return		;funcret
  5792  0009A6                     __end_of___awdiv:
  5793                           	opt callstack 0
  5794                           
  5795 ;; *************** function _Ws0010BufGotoXY *****************
  5796 ;; Defined at:
  5797 ;;		line 135 in file "WS0010.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  posx            1    wreg     unsigned char 
  5800 ;;  posy            1    2[COMRAM] unsigned char 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  posx            1    5[COMRAM] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      void 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0, prodl, prodh
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5812 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;Total ram usage:        4 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    4
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_ProcessInit
  5823 ;;		_PrintLed
  5824 ;;		_PrintData
  5825 ;;		_Ws0010Buf9x16Char
  5826 ;;		_Ws0010BufBitmap
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           
  5830                           	psect	text38
  5831  000E68                     __ptext38:
  5832                           	opt callstack 0
  5833  000E68                     _Ws0010BufGotoXY:
  5834                           	opt callstack 24
  5835                           
  5836                           ;incstack = 0
  5837                           ;Ws0010BufGotoXY@posx stored from wreg
  5838  000E68  6E40               	movwf	Ws0010BufGotoXY@posx,c
  5839                           
  5840                           ;WS0010.c: 135: void Ws0010BufGotoXY(uint8_t posx, uint8_t posy);WS0010.c: 136: {;WS0010
      +                          .c: 137:     ptr = (posx - 1) + ((200 / 2) * (posy - 1));
  5841  000E6A  503D               	movf	Ws0010BufGotoXY@posy,w,c
  5842  000E6C  0D64               	mullw	100
  5843  000E6E  CFF3 F03E          	movff	prodl,??_Ws0010BufGotoXY
  5844  000E72  CFF4 F03F          	movff	prodh,??_Ws0010BufGotoXY+1
  5845  000E76  5040               	movf	Ws0010BufGotoXY@posx,w,c
  5846  000E78  263E               	addwf	??_Ws0010BufGotoXY,f,c
  5847  000E7A  0E00               	movlw	0
  5848  000E7C  223F               	addwfc	??_Ws0010BufGotoXY+1,f,c
  5849  000E7E  0E9B               	movlw	155
  5850  000E80  243E               	addwf	??_Ws0010BufGotoXY,w,c
  5851  000E82  6E1F               	movwf	_ptr,c
  5852  000E84  0EFF               	movlw	255
  5853  000E86  203F               	addwfc	??_Ws0010BufGotoXY+1,w,c
  5854  000E88  6E20               	movwf	_ptr+1,c
  5855  000E8A  0012               	return		;funcret
  5856  000E8C                     __end_of_Ws0010BufGotoXY:
  5857                           	opt callstack 0
  5858                           
  5859 ;; *************** function _TMR0_SetInterruptHandler *****************
  5860 ;; Defined at:
  5861 ;;		line 164 in file "mcc_generated_files/tmr0.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  5864 ;;		 -> SetTick1S(1), 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, status,2, status,0
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5880 ;;Total ram usage:        2 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    4
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_ProcessInit
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text39
  5891  000FCA                     __ptext39:
  5892                           	opt callstack 0
  5893  000FCA                     _TMR0_SetInterruptHandler:
  5894                           	opt callstack 25
  5895                           
  5896                           ;mcc_generated_files/tmr0.c: 164: void TMR0_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr0.c: 165: {;mcc_generated_files/tmr0.c: 166:     TMR0_In
      +                          terruptHandler = InterruptHandler;
  5897                           
  5898                           ;incstack = 0
  5899  000FCA  C03D  F025         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  5900  000FCE  C03E  F026         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  5901  000FD2  0012               	return		;funcret
  5902  000FD4                     __end_of_TMR0_SetInterruptHandler:
  5903                           	opt callstack 0
  5904                           
  5905 ;; *************** function _SetProcessFunc *****************
  5906 ;; Defined at:
  5907 ;;		line 111 in file "Application.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  Index           1    wreg     unsigned char 
  5910 ;;  Command         2   13[COMRAM] PTR unsigned char 
  5911 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  5912 ;;  Size            1   15[COMRAM] unsigned char 
  5913 ;;  FunctionHand    2   16[COMRAM] PTR FTN()void 
  5914 ;;		 -> SendBT(1), SendSY(1), SendCX(1), 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  Index           1   18[COMRAM] unsigned char 
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      void 
  5919 ;; Registers used:
  5920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5926 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;Total ram usage:        6 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    5
  5933 ;; This function calls:
  5934 ;;		_memcpy
  5935 ;; This function is called by:
  5936 ;;		_ProcessInit
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text40
  5941  000BB2                     __ptext40:
  5942                           	opt callstack 0
  5943  000BB2                     _SetProcessFunc:
  5944                           	opt callstack 24
  5945                           
  5946                           ;incstack = 0
  5947                           ;SetProcessFunc@Index stored from wreg
  5948  000BB2  6E4D               	movwf	SetProcessFunc@Index,c
  5949                           
  5950                           ;Application.c: 111: void SetProcessFunc(uint8_t Index, char Command[], uint8_t Size, vo
      +                          id (*FunctionHandler)(void));Application.c: 112: {;Application.c: 113:   memcpy(ProcessV
      +                          ector[Index].Str485Command, Command, Size);
  5951  000BB4  504D               	movf	SetProcessFunc@Index,w,c
  5952  000BB6  0D0C               	mullw	12
  5953  000BB8  0E8D               	movlw	low _ProcessVector
  5954  000BBA  24F3               	addwf	prodl,w,c
  5955  000BBC  6E3D               	movwf	memcpy@d1,c
  5956  000BBE  0E00               	movlw	high _ProcessVector
  5957  000BC0  20F4               	addwfc	prodh,w,c
  5958  000BC2  6E3E               	movwf	memcpy@d1+1,c
  5959  000BC4  C048  F03F         	movff	SetProcessFunc@Command,memcpy@s1
  5960  000BC8  C049  F040         	movff	SetProcessFunc@Command+1,memcpy@s1+1
  5961  000BCC  C04A  F041         	movff	SetProcessFunc@Size,memcpy@n
  5962  000BD0  6A42               	clrf	memcpy@n+1,c
  5963  000BD2  EC02  F006         	call	_memcpy	;wreg free
  5964                           
  5965                           ;Application.c: 114:   ProcessVector[Index].CommandSize = Size;
  5966  000BD6  504D               	movf	SetProcessFunc@Index,w,c
  5967  000BD8  0D0C               	mullw	12
  5968  000BDA  0E96               	movlw	low (_ProcessVector+9)
  5969  000BDC  24F3               	addwf	prodl,w,c
  5970  000BDE  6ED9               	movwf	fsr2l,c
  5971  000BE0  0E00               	movlw	high (_ProcessVector+9)
  5972  000BE2  20F4               	addwfc	prodh,w,c
  5973  000BE4  6EDA               	movwf	fsr2h,c
  5974  000BE6  C04A  FFDF         	movff	SetProcessFunc@Size,indf2
  5975                           
  5976                           ;Application.c: 115:   ProcessVector[Index].PtrFunctionHandler = FunctionHandler;
  5977  000BEA  504D               	movf	SetProcessFunc@Index,w,c
  5978  000BEC  0D0C               	mullw	12
  5979  000BEE  0E97               	movlw	low (_ProcessVector+10)
  5980  000BF0  24F3               	addwf	prodl,w,c
  5981  000BF2  6ED9               	movwf	fsr2l,c
  5982  000BF4  0E00               	movlw	high (_ProcessVector+10)
  5983  000BF6  20F4               	addwfc	prodh,w,c
  5984  000BF8  6EDA               	movwf	fsr2h,c
  5985  000BFA  C04B  FFDE         	movff	SetProcessFunc@FunctionHandler,postinc2
  5986  000BFE  C04C  FFDD         	movff	SetProcessFunc@FunctionHandler+1,postdec2
  5987  000C02  0012               	return		;funcret
  5988  000C04                     __end_of_SetProcessFunc:
  5989                           	opt callstack 0
  5990                           
  5991 ;; *************** function _memcpy *****************
  5992 ;; Defined at:
  5993 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memcpy.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  d1              2    2[COMRAM] PTR void 
  5996 ;;		 -> ProcessVector(36), 
  5997 ;;  s1              2    4[COMRAM] PTR const void 
  5998 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  5999 ;;  n               2    6[COMRAM] unsigned int 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;  s               2   10[COMRAM] PTR const unsigned char 
  6002 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  6003 ;;  d               2    8[COMRAM] PTR unsigned char 
  6004 ;;		 -> ProcessVector(36), 
  6005 ;;  tmp             1   12[COMRAM] unsigned char 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  2    2[COMRAM] PTR void 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6015 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6019 ;;Total ram usage:       11 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    4
  6022 ;; This function calls:
  6023 ;;		Nothing
  6024 ;; This function is called by:
  6025 ;;		_SetProcessFunc
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text41
  6030  000C04                     __ptext41:
  6031                           	opt callstack 0
  6032  000C04                     _memcpy:
  6033                           	opt callstack 24
  6034                           
  6035                           ;incstack = 0
  6036  000C04  C03F  F045         	movff	memcpy@s1,memcpy@s
  6037  000C08  C040  F046         	movff	memcpy@s1+1,memcpy@s+1
  6038  000C0C  C03D  F043         	movff	memcpy@d1,memcpy@d
  6039  000C10  C03E  F044         	movff	memcpy@d1+1,memcpy@d+1
  6040  000C14  D012               	goto	l2274
  6041  000C16                     l2266:
  6042  000C16  C045  FFF6         	movff	memcpy@s,tblptrl
  6043  000C1A  C046  FFF7         	movff	memcpy@s+1,tblptrh
  6044  000C1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6045  000C1E  6AF8               	clrf	tblptru,c
  6046  000C20                     	endif
  6047  000C20                     	if	0	;tblptru may be non-zero
  6048  000C20                     	endif
  6049  000C20  0008               	tblrd		*
  6050  000C22  CFF5 F047          	movff	tablat,memcpy@tmp
  6051  000C26  4A45               	infsnz	memcpy@s,f,c
  6052  000C28  2A46               	incf	memcpy@s+1,f,c
  6053  000C2A  C043  FFD9         	movff	memcpy@d,fsr2l
  6054  000C2E  C044  FFDA         	movff	memcpy@d+1,fsr2h
  6055  000C32  C047  FFDF         	movff	memcpy@tmp,indf2
  6056  000C36  4A43               	infsnz	memcpy@d,f,c
  6057  000C38  2A44               	incf	memcpy@d+1,f,c
  6058  000C3A                     l2274:
  6059  000C3A  0641               	decf	memcpy@n,f,c
  6060  000C3C  A0D8               	btfss	status,0,c
  6061  000C3E  0642               	decf	memcpy@n+1,f,c
  6062  000C40  2841               	incf	memcpy@n,w,c
  6063  000C42  E1E9               	bnz	l2266
  6064  000C44  2842               	incf	memcpy@n+1,w,c
  6065  000C46  B4D8               	btfsc	status,2,c
  6066  000C48  0012               	return	
  6067  000C4A  D7E5               	goto	l2266
  6068  000C4C                     __end_of_memcpy:
  6069                           	opt callstack 0
  6070                           
  6071 ;; *************** function _DelayLongo *****************
  6072 ;; Defined at:
  6073 ;;		line 25 in file "WS0010.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;		None
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;  f               1    4[COMRAM] unsigned char 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  1    wreg      void 
  6080 ;; Registers used:
  6081 ;;		wreg, status,2, status,0
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;Total ram usage:        3 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:    4
  6094 ;; This function calls:
  6095 ;;		Nothing
  6096 ;; This function is called by:
  6097 ;;		_ProcessInit
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           	psect	text42
  6102  000E8C                     __ptext42:
  6103                           	opt callstack 0
  6104  000E8C                     _DelayLongo:
  6105                           	opt callstack 25
  6106                           
  6107                           ;WS0010.c: 27:     uint8_t f;;WS0010.c: 28:     for (f = 0; f < 10; f++)
  6108                           
  6109                           ;incstack = 0
  6110  000E8C  0E00               	movlw	0
  6111  000E8E  6E3F               	movwf	DelayLongo@f,c
  6112  000E90                     l2526:
  6113                           
  6114                           ;WS0010.c: 29:     {;WS0010.c: 30:         _delay((unsigned long)((200)*(40000000/4000.0
      +                          )));
  6115  000E90  0E0B               	movlw	11
  6116  000E92  6E3E               	movwf	(??_DelayLongo+1)& (0+255),c
  6117  000E94  0E26               	movlw	38
  6118  000E96  6E3D               	movwf	??_DelayLongo& (0+255),c
  6119  000E98  0E5E               	movlw	94
  6120  000E9A                     u1957:
  6121  000E9A  2EE8               	decfsz	wreg,f,c
  6122  000E9C  D7FE               	bra	u1957
  6123  000E9E  2E3D               	decfsz	??_DelayLongo& (0+255),f,c
  6124  000EA0  D7FC               	bra	u1957
  6125  000EA2  2E3E               	decfsz	(??_DelayLongo+1)& (0+255),f,c
  6126  000EA4  D7FA               	bra	u1957
  6127                           
  6128                           ;WS0010.c: 31:     }
  6129  000EA6  2A3F               	incf	DelayLongo@f,f,c
  6130  000EA8  0E09               	movlw	9
  6131  000EAA  643F               	cpfsgt	DelayLongo@f,c
  6132  000EAC  D7F1               	goto	l2526
  6133  000EAE  0012               	return	
  6134  000EB0                     __end_of_DelayLongo:
  6135                           	opt callstack 0
  6136                           
  6137 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  6138 ;; Defined at:
  6139 ;;		line 65 in file "mcc_generated_files/interrupt_manager.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;		None
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6155 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6157 ;;Total ram usage:        2 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    3
  6160 ;; This function calls:
  6161 ;;		_TMR0_ISR
  6162 ;; This function is called by:
  6163 ;;		Interrupt level 2
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	intcode
  6168  000008                     __pintcode:
  6169                           	opt callstack 0
  6170  000008                     _INTERRUPT_InterruptManagerHigh:
  6171                           	opt callstack 22
  6172                           
  6173                           ;incstack = 0
  6174  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6175  00000A  CFFA F03B          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  6176  00000E  CFFB F03C          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  6177                           
  6178                           ;mcc_generated_files/interrupt_manager.c: 68:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6179  000012  BAF2               	btfsc	4082,5,c	;volatile
  6180  000014  A4F2               	btfss	4082,2,c	;volatile
  6181  000016  D002               	goto	i2l159
  6182                           
  6183                           ;mcc_generated_files/interrupt_manager.c: 69:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 70:         TMR0_ISR();
  6184  000018  ECA2  F007         	call	_TMR0_ISR	;wreg free
  6185  00001C                     i2l159:
  6186  00001C  C03C  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  6187  000020  C03B  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  6188  000024  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6189  000026  0011               	retfie		f
  6190  000028                     __end_of_INTERRUPT_InterruptManagerHigh:
  6191                           	opt callstack 0
  6192                           
  6193 ;; *************** function _TMR0_ISR *****************
  6194 ;; Defined at:
  6195 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;		None
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;		None
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  1    wreg      void 
  6202 ;; Registers used:
  6203 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6213 ;;Total ram usage:        0 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:    2
  6216 ;; This function calls:
  6217 ;;		_TMR0_CallBack
  6218 ;; This function is called by:
  6219 ;;		_INTERRUPT_InterruptManagerHigh
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text44
  6224  000F44                     __ptext44:
  6225                           	opt callstack 0
  6226  000F44                     _TMR0_ISR:
  6227                           	opt callstack 22
  6228                           
  6229                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  6230                           
  6231                           ;incstack = 0
  6232  000F44  94F2               	bcf	4082,2,c	;volatile
  6233                           
  6234                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  6235  000F46  5058               	movf	_timer0ReloadVal+1,w,c	;volatile
  6236  000F48  6ED7               	movwf	4055,c	;volatile
  6237                           
  6238                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  6239  000F4A  C057  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6240                           
  6241                           ;mcc_generated_files/tmr0.c: 149:     TMR0_CallBack();
  6242  000F4E  EC67  F007         	call	_TMR0_CallBack	;wreg free
  6243  000F52  0012               	return		;funcret
  6244  000F54                     __end_of_TMR0_ISR:
  6245                           	opt callstack 0
  6246                           
  6247 ;; *************** function _TMR0_CallBack *****************
  6248 ;; Defined at:
  6249 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;		None
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;		None
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  1    wreg      void 
  6256 ;; Registers used:
  6257 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;Total ram usage:        0 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    1
  6270 ;; This function calls:
  6271 ;;		Absolute function
  6272 ;;		_SetTick1S
  6273 ;; This function is called by:
  6274 ;;		_TMR0_ISR
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text45
  6279  000ECE                     __ptext45:
  6280                           	opt callstack 0
  6281  000ECE                     _TMR0_CallBack:
  6282                           	opt callstack 22
  6283                           
  6284                           ;mcc_generated_files/tmr0.c: 158:     if(TMR0_InterruptHandler)
  6285                           
  6286                           ;incstack = 0
  6287  000ECE  5025               	movf	_TMR0_InterruptHandler,w,c
  6288  000ED0  1026               	iorwf	_TMR0_InterruptHandler+1,w,c
  6289  000ED2  B4D8               	btfsc	status,2,c
  6290  000ED4  0012               	return	
  6291                           
  6292                           ;mcc_generated_files/tmr0.c: 159:     {;mcc_generated_files/tmr0.c: 160:         TMR0_In
      +                          terruptHandler();
  6293  000ED6  D801               	call	i2u33_48
  6294  000ED8  0012               	return	
  6295  000EDA                     i2u33_48:
  6296  000EDA  0005               	push	
  6297  000EDC  6EFA               	movwf	pclath,c
  6298  000EDE  5025               	movf	_TMR0_InterruptHandler,w,c
  6299  000EE0  6EFD               	movwf	tosl,c
  6300  000EE2  5026               	movf	_TMR0_InterruptHandler+1,w,c
  6301  000EE4  6EFE               	movwf	tosh,c
  6302  000EE6  6AFF               	clrf	tosu,c
  6303  000EE8  50FA               	movf	pclath,w,c
  6304  000EEA  0012               	return		;indir
  6305  000EEC                     __end_of_TMR0_CallBack:
  6306                           	opt callstack 0
  6307                           
  6308 ;; *************** function _SetTick1S *****************
  6309 ;; Defined at:
  6310 ;;		line 62 in file "Application.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;		None
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;		None
  6315 ;; Return value:  Size  Location     Type
  6316 ;;                  1    wreg      void 
  6317 ;; Registers used:
  6318 ;;		wreg, status,2, status,0
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;Total ram usage:        0 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; This function calls:
  6331 ;;		Nothing
  6332 ;; This function is called by:
  6333 ;;		_ProcessInit
  6334 ;;		_TMR0_CallBack
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338                           	psect	text46
  6339  000D0C                     __ptext46:
  6340                           	opt callstack 0
  6341  000D0C                     _SetTick1S:
  6342                           	opt callstack 22
  6343                           
  6344                           ;Application.c: 64:     if(++CounterB > 100)
  6345                           
  6346                           ;incstack = 0
  6347  000D0C  4A21               	infsnz	_CounterB,f,c
  6348  000D0E  2A22               	incf	_CounterB+1,f,c
  6349  000D10  5022               	movf	_CounterB+1,w,c
  6350  000D12  E104               	bnz	i2u9_40
  6351  000D14  0E65               	movlw	101
  6352  000D16  5C21               	subwf	_CounterB,w,c
  6353  000D18  A0D8               	btfss	status,0,c
  6354  000D1A  D006               	goto	i2l1362
  6355  000D1C                     i2u9_40:
  6356                           
  6357                           ;Application.c: 65:     {;Application.c: 66:        CounterB = 0;
  6358  000D1C  0E00               	movlw	0
  6359  000D1E  6E22               	movwf	_CounterB+1,c
  6360  000D20  0E00               	movlw	0
  6361  000D22  6E21               	movwf	_CounterB,c
  6362                           
  6363                           ;Application.c: 67:        RunFlag = 1;
  6364  000D24  0E01               	movlw	1
  6365  000D26  6E2C               	movwf	_RunFlag,c
  6366  000D28                     i2l1362:
  6367                           
  6368                           ;Application.c: 71:     if(++CounterA > 10000)
  6369  000D28  4A23               	infsnz	_CounterA,f,c
  6370  000D2A  2A24               	incf	_CounterA+1,f,c
  6371  000D2C  0E11               	movlw	17
  6372  000D2E  5C23               	subwf	_CounterA,w,c
  6373  000D30  0E27               	movlw	39
  6374  000D32  5824               	subwfb	_CounterA+1,w,c
  6375  000D34  A0D8               	btfss	status,0,c
  6376  000D36  0012               	return	
  6377                           
  6378                           ;Application.c: 72:     {;Application.c: 73:         CounterA = 0;
  6379  000D38  0E00               	movlw	0
  6380  000D3A  6E24               	movwf	_CounterA+1,c
  6381  000D3C  0E00               	movlw	0
  6382  000D3E  6E23               	movwf	_CounterA,c
  6383                           
  6384                           ;Application.c: 74:         CxFlag = 1;
  6385  000D40  0E01               	movlw	1
  6386  000D42  6E2D               	movwf	_CxFlag,c
  6387  000D44  0012               	return		;funcret
  6388  000D46                     __end_of_SetTick1S:
  6389                           	opt callstack 0
  6390                           
  6391                           	psect	text47
  6392  000000                     __ptext47:
  6393                           	opt callstack 0
  6394                           
  6395                           	psect	rparam
  6396  0000                     
  6397                           	psect	temp
  6398  000059                     btemp:
  6399                           	opt callstack 0
  6400  000059                     	ds	1
  6401  0000                     int$flags	set	btemp
  6402  0000                     wtemp8	set	btemp+1
  6403  0000                     ttemp5	set	btemp+1
  6404  0000                     ttemp6	set	btemp+4
  6405  0000                     ttemp7	set	btemp+8
  6406                           tosu	equ	0xFFF
  6407                           tosh	equ	0xFFE
  6408                           tosl	equ	0xFFD
  6409                           stkptr	equ	0xFFC
  6410                           pclatu	equ	0xFFB
  6411                           pclath	equ	0xFFA
  6412                           pcl	equ	0xFF9
  6413                           tblptru	equ	0xFF8
  6414                           tblptrh	equ	0xFF7
  6415                           tblptrl	equ	0xFF6
  6416                           tablat	equ	0xFF5
  6417                           prodh	equ	0xFF4
  6418                           prodl	equ	0xFF3
  6419                           indf0	equ	0xFEF
  6420                           postinc0	equ	0xFEE
  6421                           postdec0	equ	0xFED
  6422                           preinc0	equ	0xFEC
  6423                           plusw0	equ	0xFEB
  6424                           fsr0h	equ	0xFEA
  6425                           fsr0l	equ	0xFE9
  6426                           wreg	equ	0xFE8
  6427                           indf1	equ	0xFE7
  6428                           postinc1	equ	0xFE6
  6429                           postdec1	equ	0xFE5
  6430                           preinc1	equ	0xFE4
  6431                           plusw1	equ	0xFE3
  6432                           fsr1h	equ	0xFE2
  6433                           fsr1l	equ	0xFE1
  6434                           bsr	equ	0xFE0
  6435                           indf2	equ	0xFDF
  6436                           postinc2	equ	0xFDE
  6437                           postdec2	equ	0xFDD
  6438                           preinc2	equ	0xFDC
  6439                           plusw2	equ	0xFDB
  6440                           fsr2h	equ	0xFDA
  6441                           fsr2l	equ	0xFD9
  6442                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    1261
    Data        74
    BSS         333
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      88
    BANK0           160      0     149
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15           96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    memcpy@d1	PTR void  size(2) Largest target is 36
		 -> ProcessVector(BANK0[36]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 36
		 -> ProcessVector(BANK0[36]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    memcmp@vr	PTR const void  size(2) Largest target is 36
		 -> ProcessVector.Str485Command(BANK0[9]), ProcessVector(BANK0[36]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 36
		 -> ProcessVector.Str485Command(BANK0[9]), ProcessVector(BANK0[36]), 

    memcmp@vl	PTR const void  size(2) Largest target is 45
		 -> ProcessPeriodic@StrCommand(BANK0[45]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 45
		 -> ProcessPeriodic@StrCommand(BANK0[45]), 

    Ws0010BufBitmap@Image	PTR const unsigned char  size(2) Largest target is 180
		 -> LogoClk(CODE[180]), 

    GetsRS485@RxData	PTR unsigned char  size(2) Largest target is 1
		 -> ProcessPeriodic@RxData(COMRAM[1]), 

    PutsRS485@s	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    fifo_dequeue@p_data	PTR unsigned char  size(2) Largest target is 1
		 -> ProcessPeriodic@RS485Data(COMRAM[1]), 

    fifo_dequeue@p_fifo	PTR struct . size(2) Largest target is 24
		 -> AplicationQueue(BANK0[24]), 

    fifo_queue@p_fifo	PTR struct . size(2) Largest target is 24
		 -> AplicationQueue(BANK0[24]), 

    fifo_init@p_fifo	PTR struct . size(2) Largest target is 24
		 -> AplicationQueue(BANK0[24]), 

    PrintData@StrRH	PTR unsigned char  size(2) Largest target is 5
		 -> StrRH(COMRAM[5]), 

    PrintData@StrTemp	PTR unsigned char  size(2) Largest target is 5
		 -> StrTemp(COMRAM[5]), 

    ProcessPeriodic@pf	PTR unsigned char  size(2) Largest target is 45
		 -> ProcessPeriodic@StrCommand(BANK0[45]), 

    SetProcessFunc@FunctionHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SendBT(), SendSY(), SendCX(), 

    sp__memcpy	PTR void  size(2) Largest target is 36
		 -> ProcessVector(BANK0[36]), 

    S667$PtrFunctionHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SendBT(), SendSY(), SendCX(), 

    ProcessVector.PtrFunctionHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SendBT(), SendSY(), SendCX(), 

    SetProcessFunc@Command	PTR unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SetTick1S(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SetTick1S(), Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_ProcessPeriodic
    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _ProcessPeriodic->_PrintData
    _SendSY->_PutsRS485
    _SendCX->_PutsRS485
    _SendBT->_PutsRS485
    _PutsRS485->_strlen
    _PrintLed->_Ws0010Buf5x7Char
    _PrintData->_Ws0010Buf9x16Char
    _Ws0010Buf9x16Char->_Ws0010BufGotoXY
    _ProcessInit->_SetProcessFunc
    _Ws0010Refresh->_Ws0010PutGotoXY
    _Ws0010PutGotoXY->_Ws0010PutByte
    _Ws0010BufBitmap->___awdiv
    _SetProcessFunc->_memcpy

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19724
                        _ProcessInit
                    _ProcessPeriodic
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ProcessPeriodic                                      4     4      0   12054
                                             18 COMRAM     4     4      0
                          _GetsRS485
                          _PrintData
                           _PrintLed
                             _SendBT *
                             _SendCX *
                             _SendSY *
                       _fifo_dequeue
                         _fifo_queue
                             _memcmp
 ---------------------------------------------------------------------------------
 (2) _memcmp                                              12     6      6     409
                                              2 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _fifo_queue                                           7     4      3     706
                                              2 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _fifo_dequeue                                         8     4      4     440
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _SendSY                                               0     0      0     506
                          _PutsRS485
 ---------------------------------------------------------------------------------
 (2) _SendCX                                               0     0      0     506
                          _PutsRS485
 ---------------------------------------------------------------------------------
 (2) _SendBT                                               0     0      0     506
                          _PutsRS485
 ---------------------------------------------------------------------------------
 (3) _PutsRS485                                            6     4      2     506
                                              6 COMRAM     6     4      2
                       _EUSART_Write
                  _EUSART_is_tx_done
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     166
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PrintLed                                             0     0      0    1970
                   _Ws0010Buf5x7Char
                    _Ws0010BufGotoXY
 ---------------------------------------------------------------------------------
 (2) _PrintData                                            4     0      4    6842
                                             14 COMRAM     4     0      4
                   _Ws0010Buf5x7Char
                  _Ws0010Buf9x16Char
                    _Ws0010BufGotoXY
                    _Ws0010BufPatern
                    _Ws0010PutGotoXY
                      _Ws0010Refresh
 ---------------------------------------------------------------------------------
 (3) _Ws0010BufPatern                                      3     2      1     623
                                              2 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (3) _Ws0010Buf9x16Char                                    8     7      1    1710
                                              6 COMRAM     8     7      1
                    _Ws0010BufGotoXY
 ---------------------------------------------------------------------------------
 (3) _Ws0010Buf5x7Char                                     7     6      1     862
                                              2 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _GetsRS485                                            4     2      2     146
                                              2 COMRAM     4     2      2
                        _EUSART_Read
             _EUSART_get_last_status
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_get_last_status                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProcessInit                                          0     0      0    7376
                         _DelayLongo
                     _SetProcessFunc
           _TMR0_SetInterruptHandler
                    _Ws0010BufBitmap
                    _Ws0010BufGotoXY
                         _Ws0010Init
                    _Ws0010PutGotoXY
                      _Ws0010Refresh
                          _fifo_init
 ---------------------------------------------------------------------------------
 (2) _fifo_init                                            3     0      3     306
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _Ws0010Refresh                                        2     2      0    1425
                                              8 COMRAM     2     2      0
                      _Ws0010PutByte
                    _Ws0010PutGotoXY
 ---------------------------------------------------------------------------------
 (4) _Ws0010PutGotoXY                                      2     1      1     830
                                              6 COMRAM     2     1      1
                      _Ws0010PutByte
 ---------------------------------------------------------------------------------
 (5) _Ws0010PutByte                                        4     3      1     482
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Ws0010Init                                          15    15      0      92
                                              2 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 (2) _Ws0010BufBitmap                                      8     5      3    2262
                                             10 COMRAM     8     5      3
                    _Ws0010BufGotoXY
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     756
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Ws0010BufGotoXY                                      4     3      1    1108
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SetProcessFunc                                       6     1      5    1209
                                             13 COMRAM     6     1      5
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     371
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _DelayLongo                                           3     3      0      46
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerHigh                       2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
                          _SetTick1S *
 ---------------------------------------------------------------------------------
 (9) _SetTick1S                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ProcessInit
     _DelayLongo
     _SetProcessFunc
       _memcpy
     _TMR0_SetInterruptHandler
     _Ws0010BufBitmap
       _Ws0010BufGotoXY
       ___awdiv
     _Ws0010BufGotoXY
     _Ws0010Init
     _Ws0010PutGotoXY
       _Ws0010PutByte
     _Ws0010Refresh
       _Ws0010PutByte
       _Ws0010PutGotoXY
         _Ws0010PutByte
     _fifo_init
   _ProcessPeriodic
     _GetsRS485
       _EUSART_Read
       _EUSART_get_last_status
       _EUSART_is_rx_ready
     _PrintData
       _Ws0010Buf5x7Char
       _Ws0010Buf9x16Char
         _Ws0010BufGotoXY
       _Ws0010BufGotoXY
       _Ws0010BufPatern
       _Ws0010PutGotoXY
         _Ws0010PutByte
       _Ws0010Refresh
         _Ws0010PutByte
         _Ws0010PutGotoXY
           _Ws0010PutByte
     _PrintLed
       _Ws0010Buf5x7Char
       _Ws0010BufGotoXY
     _SendBT *
       _PutsRS485
         _EUSART_Write
         _EUSART_is_tx_done
         _strlen
     _SendCX *
       _PutsRS485
         _EUSART_Write
         _EUSART_is_tx_done
         _strlen
     _SendSY *
       _PutsRS485
         _EUSART_Write
         _EUSART_is_tx_done
         _strlen
     _fifo_dequeue *
     _fifo_queue *
     _memcmp *
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _SetTick1S *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK14           F4      0       0      34        0.0%
BANK14              F4      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      95       5       93.1%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      58       1       93.6%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B5      33        0.0%
DATA                 0      0     1B5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 29 10:58:20 2019

                               Ws0010Init@init 003D                                 ??_fifo_dequeue 0041  
                                 ___awdiv@sign 0042                         __end_of_SetProcessFunc 0C04  
                              _timer0ReloadVal 0057                                   __CFG_CP0$OFF 000000  
                                 __CFG_CP1$OFF 000000                                   __CFG_CP2$OFF 000000  
                             fifo_queue@p_data 003F                                   __CFG_CP3$OFF 000000  
                             fifo_queue@p_fifo 003D                                            l334 0084  
                                          l423 0DDE                                            l540 0D8A  
                                          l557 0C7A                                   __CFG_CPB$OFF 000000  
                                 __CFG_CPD$OFF 000000                                            _ptr 001F  
               ?_EUSART_SetFramingErrorHandler 003D                                   __CFG_BORV$18 000000  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                 Ws0010Refresh@j 0044  
               __end_of_EUSART_get_last_status 0FDE                       ProcessPeriodic@RS485Data 003A  
                                 ?_EUSART_Read 003B                                   __CFG_LVP$OFF 000000  
                     __size_of_Ws0010BufBitmap 00B8                                           l2210 0F8C  
                                         l2300 04C8                                           l2220 0DEC  
                                         l2310 0568                                           l2222 0DF0  
                                         l2320 058C                                           l2304 0518  
                                         l2402 095C                                           l2250 0F2E  
                                         l2306 051E                                           l2404 0964  
                                         l2260 0B8C                                           l2422 099C  
                                         l2414 0984                                           l2350 03C0  
                                         l2342 039A                                           l2334 0DA6  
                                         l2512 06D6                                           l2360 042C  
                                         l2328 0D90                                           l2256 0B6A  
                                         l2266 0C16                                           l2274 0C3A  
                                         l2418 098E                                           l2362 0432  
                                         l2354 03D0                                           l2508 069E  
                                         l2284 0C5A                                           l2380 04B8  
                                         l2356 03DC                                           l2540 0CB4  
                                         l2526 0E90                                           l2390 0936  
                                         l2518 070E                                           l2366 047C  
                                         l2542 0CBE                       __size_of_Ws0010BufGotoXY 0024  
                                         l2376 04A8                                           l2720 00B0  
                                         l2474 09C0                                           l2570 084E  
                                         l2706 0058                                           l2396 0946  
                                         l2660 0662                                           l2580 0A34  
                                         l2804 0224                                           l2654 05F4  
                                         l2662 0666                                           l2590 0A74  
                                         l2582 0A42                                           l2750 0178  
                                         l2726 00B4                                           l2736 0156  
                                         l2764 019A                                           l2828 0F3E  
                                         l2776 01C2                                           STR_1 FDB8  
                                         STR_2 FDBB                                           STR_3 FDB5  
                                         STR_4 FDB8                                           STR_5 FDB2  
                                         STR_6 FDB5                       __size_of_Ws0010BufPatern 0032  
                                         u1020 0F86                                           u1005 0730  
                                         u1006 0732                                           u1015 0786  
                                         u1016 0788                                           u1050 0F9E  
                                         u1210 048C                                           u1301 09B0  
                                         u1080 0BA4                                           u1260 0968  
                                         _LATA 000F89                                           _LATB 000F8A  
                                         _LATC 000F8B                                           _LATD 000F8C  
                                         _LATE 000F8D                                           u1370 0CC8  
                                         u1450 0A62                                           u1380 0CCA  
                                         u1630 022C                                           u1640 0234  
                                         u1570 016C                                  __CFG_DEBUG$ON 000000  
                                         u1558 0144                                           u1807 0756  
                                         u1817 0764                                           u1907 09F0  
                                         u1827 076E                                           u1917 09FA  
                                         u1837 0778                                           u1927 0A02  
                                         u1847 07AC                                           u1937 0A0A  
                                         u1857 07BA                                           u1947 0A12  
                                         u1867 07C4                                           u1957 0E9A  
                                         u1877 07CE                                           u1887 09CC  
                                         u1897 09E6                                     _Ws0010Init 09A6  
                                         _WPUB 000F7C                                _ascii_table9x16 FC26  
                                         _main 0F32                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 0059  
                                   _DelayLongo 0E8C                                           prodh 000FF4  
                                         prodl 000FF3                                           start 0028  
                                __CFG_IESO$OFF 000000                                  __CFG_MCLRE$ON 000000  
                                 ___param_bank 000000                                __end_of_LogoClk FDB2  
                     __end_of_Ws0010Buf5x7Char 059C                        __end_of_TMR0_Initialize 0E68  
                                ?_EUSART_Write 003B                 __size_of_OSCILLATOR_Initialize 000A  
                              ?_SetProcessFunc 0048                  __end_of_OSCILLATOR_Initialize 0FAC  
                                        ?_main 003B                                __end_of___awdiv 09A6  
                                        _ANSEL 000F7E                                          _T0CON 000FD5  
                              ___awdiv@divisor 003F                                          i2l159 001C  
                              ___awdiv@counter 0041                                          _RCREG 000FAE  
                                        _RCSTA 000FAB                                          _TMR0H 000FD7  
                                        _TMR0L 000FD6                                          _SPBRG 000FAF  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TRISD 000F95  
                                        _TRISE 000F96                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                                  __CFG_PWRT$OFF 000000  
            __size_of_TMR0_SetInterruptHandler 000A                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                    ?_TMR0_SetInterruptHandler 003D                                  __CFG_WRT3$OFF 000000  
                          ProcessPeriodic@Mask 002A                                 __CFG_EBTR0$OFF 000000  
                               __CFG_FCMEN$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                                        _StrRH 002F                               __end_of_TMR0_ISR 0F54  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                                 __CFG_EBTRB$OFF 000000  
                      __end_of_ProcessPeriodic 0250                                          pclath 000FFA  
                                        tablat 000FF5                       __size_of_Ws0010PutGotoXY 001C  
                                        plusw1 000FE3                                          plusw2 000FDB  
                                        ttemp5 005A                                          ttemp6 005D  
                                        ttemp7 0061                                          status 000FD8  
                                        wtemp8 005A                                __initialization 0A9A  
                             ProcessPeriodic@i 0028                                   __end_of_main 0F44  
                               ??_EUSART_Write 003D                                         ??_main 0051  
                                __activetblptr 000003                             __size_of_GetsRS485 0032  
                          Ws0010BufBitmap@Size 0047                               __end_of_PrintLed 0CCE  
                      __end_of_ascii_table9x16 FCFE              _EUSART_DefaultFramingErrorHandler 000000  
                   _EUSART_OverrunErrorHandler 0053                               ___awdiv@dividend 003D  
                                       _ANSELH 000F7F                     __end_of_EUSART_is_rx_ready 0FA2  
                                  ?_Ws0010Init 003B                                         i2l1362 0D28  
                         __end_of_fifo_dequeue 066A                                 __CFG_WDTEN$OFF 000000  
                                       _OSCCON 000FD3                                         _SPBRGH 000FB0  
                                       i2u9_40 0D1C                                    ?_DelayLongo 003B  
                            ??_Ws0010BufBitmap 0048                                         _CxFlag 002D  
                            ??_Ws0010BufGotoXY 003E                              ??_Ws0010BufPatern 003E  
                         ProcessPeriodic@Index 002B                                         _SendBT 0F54  
                                       _SendCX 0F62                                 __CFG_XINST$OFF 000000  
                                       _SendSY 0F70                           ProcessPeriodic@RxCks 0029  
                             Ws0010PutByte@end 0040                                      ??___awdiv 0041  
                               __CFG_STVREN$ON 000000                             __size_of_SetTick1S 003A  
                                       _memcmp 0A22                                         _memcpy 0C04  
                             ?_TMR0_Initialize 003B                                         clear_0 0AE0  
                                       clear_1 0AEC                                         clear_2 0AF8  
                             ___awdiv@quotient 0043                                         _strlen 0DE2  
                           __size_of_PrintData 0140                                   __pdataCOMRAM 0001  
                           SetProcessFunc@Size 004A                                   __mediumconst F8C4  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                             __size_of_PutsRS485 0054  
                                ??_ProcessInit 004E                          __end_of_TMR0_CallBack 0EEC  
     TMR0_SetInterruptHandler@InterruptHandler 003D                                     PutsRS485@i 0045  
                                   PutsRS485@s 0041                                __CFG_HFOFST$OFF 000000  
                            Ws0010Refresh@dado 0043                  __size_of_INTERRUPT_Initialize 0006  
                             ?_ProcessPeriodic 003B                                __CFG_FOSC$HSPLL 000000  
                         __size_of_EUSART_Read 0014               ??_INTERRUPT_InterruptManagerHigh 003B  
              ?_INTERRUPT_InterruptManagerHigh 003B                              _SYSTEM_Initialize 0F08  
                                   __accesstop 0060                        __end_of__initialization 0AFE  
                              __CFG_PBADEN$OFF 000000                             ?_SYSTEM_Initialize 003B  
                                ___rparam_used 000001                              __end_of_GetsRS485 0DE2  
                            ??_Ws0010PutGotoXY 0042                                 __pcstackCOMRAM 003B  
                                 __pidataBANK0 0E12                            ??_SYSTEM_Initialize 003F  
                                    ?_TMR0_ISR 003B                         __size_of_Ws0010Refresh 0042  
                            ProcessPeriodic@pf 004F                         __size_of_Ws0010PutByte 00B4  
                          __size_of_Ws0010Init 007C                            Ws0010BufGotoXY@posx 0040  
                          Ws0010BufGotoXY@posy 003D                               PrintData@StrTemp 0049  
                          __size_of_DelayLongo 0024                             __size_of_fifo_init 0056  
              ??_EUSART_SetOverrunErrorHandler 003F                      __end_of_SYSTEM_Initialize 0F1E  
                            __end_of_SetTick1S 0D46                                     __pbssBANK0 0060  
                                   __pbssBANK1 0100                           __end_of_EUSART_Write 0F96  
                          __end_of_ProcessInit 0922                           Ws0010BufBitmap@Image 0045  
                                   __pnvCOMRAM 0051                                 PrintData@StrRH 004B  
                            __end_of_PrintData 0390                                        ?_SendBT 003B  
                                      ?_SendCX 003B                                        ?_SendSY 003B  
                          Ws0010BufPatern@dado 003E                               ??_SetProcessFunc 004D  
                            __end_of_PutsRS485 0BB2                                      ?_PrintLed 003B  
             __end_of_TMR0_SetInterruptHandler 0FD4                                     ??_TMR0_ISR 003B  
                            ?_Ws0010Buf5x7Char 003D                                        ?_memcmp 003D  
                                      ?_memcpy 003D                                        _BAUDCON 000FB8  
                           ??_Ws0010Buf5x7Char 003E                                        ?_strlen 003D  
                           Ws0010Buf9x16Char@j 0047                                     _fifo_queue 07D6  
                        __size_of_fifo_dequeue 00CE                                        i2u33_48 0EDA  
                                      _OSCTUNE 000F9B                                  _Ws0010Refresh 0C4C  
                     ??_EUSART_SetErrorHandler 003F                                  _Ws0010PutByte 0722  
                                _Ws0010_buffer 0100                                        _LogoClk FCFE  
                        ProcessPeriodic@RxData 0039                                        __Hparam 0000  
                                      __Lparam 0000                              __end_of_fifo_init 0B5E  
                              __size_of_SendBT 000E                                __size_of_SendCX 000E  
                              __size_of_SendSY 000E                                        _RunFlag 002C  
                                   ??_PrintLed 0044                                        _StrTemp 0034  
                            Ws0010PutByte@fras 003D                                        ___awdiv 0922  
                                      __pcinit 0A9A                                __size_of_memcmp 0078  
                              __size_of_memcpy 0048                                   _fifo_dequeue 059C  
                                      __ramtop 1000                                        __ptext0 0F32  
                                      __ptext1 0F08                                        __ptext2 0E3E  
                                      __ptext3 0D46                                        __ptext4 0FA2  
                                      __ptext5 0FD4                                        __ptext6 0CCE  
                                      __ptext7 0FAC                                        __ptext8 0FB6  
                                      __ptext9 0FC0                           Ws0010Buf9x16Char@inv 0041  
                                    _T0CONbits 000FD5                                __size_of_strlen 0030  
                        _OSCILLATOR_Initialize 0FA2                       ??_PIN_MANAGER_Initialize 003D  
                              _Ws0010BufBitmap 066A                                 ?_Ws0010Refresh 003B  
                                  _ProcessInit 0880                                _Ws0010BufGotoXY 0E68  
                              _Ws0010BufPatern 0D7E                     __size_of_SYSTEM_Initialize 0016  
                               ?_Ws0010PutByte 003D                           end_of_initialization 0AFE  
                                 ??_Ws0010Init 003D                                GetsRS485@RxData 003D  
                                      memcmp@l 0045                                        memcmp@n 0041  
                                      memcmp@r 0047          __end_of_EUSART_SetOverrunErrorHandler 0FB6  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 0FAC  
                                      memcpy@d 0043                                        memcpy@n 0041  
                                      memcpy@s 0045                            SetProcessFunc@Index 004D  
                                 ??_DelayLongo 003D                              _EUSART_Initialize 0CCE  
                           ?_EUSART_Initialize 003B                                      _RCSTAbits 000FAB  
                           _EUSART_is_rx_ready 0F96                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                                      strlen@a 003F                                        strlen@s 003D  
                     ??_EUSART_get_last_status 003D                            ??_EUSART_Initialize 003F  
                     _TMR0_SetInterruptHandler 0FCA                            ?_EUSART_is_rx_ready 003B  
                                    _PORTDbits 000F83                             __end_of_Ws0010Init 0A22  
                                  ?_fifo_queue 003D                             __end_of_DelayLongo 0EB0  
                                    _TRISEbits 000F96                          __size_of_EUSART_Write 000C  
              __size_of_EUSART_SetErrorHandler 000A                                _Ws0010PutGotoXY 0EEC  
                    __end_of_EUSART_Initialize 0D0C                           ??_EUSART_is_rx_ready 003D  
                                    _TXSTAbits 000FAC                                 _ascii_table4x6 F8C5  
                               _ascii_table5x7 FA41                                _AplicationQueue 00B1  
                               __end_of_SendBT 0F62                                 __end_of_SendCX 0F70  
                               __end_of_SendSY 0F7E                   __end_of_INTERRUPT_Initialize 0FDA  
                                    _GetsRS485 0DB0                     _EUSART_DefaultErrorHandler 000000  
                                __pidataCOMRAM 0EB0                                   _EUSART_Write 0F8A  
                            __size_of_TMR0_ISR 0010                        __end_of_Ws0010BufBitmap 0722  
                               __end_of_memcmp 0A9A                                 __end_of_memcpy 0C4C  
                       ?_OSCILLATOR_Initialize 003B                        __end_of_Ws0010BufGotoXY 0E8C  
                      __end_of_Ws0010BufPatern 0DB0                                 __end_of_strlen 0E12  
                              ??_Ws0010Refresh 0043                            start_initialization 0A9A  
                     __size_of_TMR0_Initialize 002A                                ??_Ws0010PutByte 003E  
              __size_of_PIN_MANAGER_Initialize 0038                                  ??_EUSART_Read 003D  
                           Ws0010BufBitmap@gap 004A                         __end_of_ascii_table4x6 FA41  
                       __end_of_ascii_table5x7 FC26                                      _SetTick1S 0D0C  
                          __size_of_fifo_queue 00AA                 ?_EUSART_SetOverrunErrorHandler 003D  
                                     ??_SendBT 0047                                       ??_SendCX 0047  
                                     ??_SendSY 0047                       __size_of_ProcessPeriodic 0224  
                   _EUSART_FramingErrorHandler 0055                                      _PrintData 0250  
                       _EUSART_SetErrorHandler 0FC0                                     ?_GetsRS485 003D  
                       __size_of_TMR0_CallBack 001E                                    __pdataBANK0 00C9  
                             __CFG_LPT1OSC$OFF 000000                                       ??_memcmp 0043  
                            __size_of_PrintLed 0040                                       ??_memcpy 0043  
                                    _PutsRS485 0B5E                __size_of_EUSART_get_last_status 0004  
                                     ??_strlen 003F                        __end_of_Ws0010PutGotoXY 0F08  
                                  __pbssCOMRAM 001F                      __size_of_Ws0010Buf5x7Char 00DA  
                   __size_of_EUSART_Initialize 003E                            Ws0010PutGotoXY@posx 0042  
                          Ws0010PutGotoXY@posy 0041                            __end_of_EUSART_Read 0F32  
                                   ?_SetTick1S 003B                          _TMR0_InterruptHandler 0025  
                       _PIN_MANAGER_Initialize 0D46                              __CFG_CCP2MX$PORTC 000000  
                         Ws0010BufPatern@count 003D                                      __pintcode 0008  
                                __pmediumconst F8C4                                     ?_PrintData 0049  
                                     ?___awdiv 003D                                      _fifo_init 0B08  
                            _Ws0010Buf9x16Char 0390                                     ?_PutsRS485 0041  
                       Ws0010Buf9x16Char@carac 0046                              Ws0010Buf5x7Char@j 0043  
                             ?_Ws0010BufBitmap 0045                             ?_Ws0010Buf9x16Char 0041  
                             ?_Ws0010BufGotoXY 003D                               ?_Ws0010BufPatern 003D  
                          ??_Ws0010Buf9x16Char 0042                                   ?_ProcessInit 003B  
                                _TMR0_CallBack 0ECE                           _INTERRUPT_Initialize 0FD4  
                       _EUSART_get_last_status 0FDA                              ??_TMR0_Initialize 003D  
       EUSART_SetErrorHandler@interruptHandler 003D                                       _LATDbits 000F8C  
                                     _LATEbits 000F8D                              _eusartRxLastError 002E  
                   ??_TMR0_SetInterruptHandler 003F                            Ws0010Buf5x7Char@inv 003D  
                                     _PIR1bits 000F9E                ??_EUSART_SetFramingErrorHandler 003F  
                                     _RCONbits 000FD0                              _EUSART_is_tx_done 0F7E  
                    __end_of_Ws0010Buf9x16Char 04C2                               __CFG_WDTPS$32768 000000  
                                     _TMR0_ISR 0F44              _EUSART_DefaultOverrunErrorHandler 000000  
                                  ??_GetsRS485 003F                             ?_EUSART_is_tx_done 003B  
                                   ?_fifo_init 003D                              ??_ProcessPeriodic 004D  
                                  Ws0010Init@i 004B                                  _ProcessVector 008D  
                                 ??_fifo_queue 0040                        __size_of_SetProcessFunc 0052  
                          ??_EUSART_is_tx_done 003D                               ?_Ws0010PutGotoXY 0041  
                               ?_TMR0_CallBack 003B                                    _EUSART_Read 0F1E  
                                  _INTCON2bits 000FF1                                      copy_data0 0AAE  
                                    copy_data1 0ACE                          ?_INTERRUPT_Initialize 003B  
                            Ws0010Bufu32@F3253 00C9                              Ws0010Bufu16@F3238 000F  
                                     _CounterA 0023                                       _CounterB 0021  
                                  DelayLongo@f 003F                                    ??_SetTick1S 003B  
                    __end_of_EUSART_is_tx_done 0F8A                              GetsRS485@RxStatus 0040  
                                     __Hrparam 0000                          SetProcessFunc@Command 0048  
                           __end_of_fifo_queue 0880                                      memcpy@tmp 0047  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                                     _PrintLed 0C8E                                    ??_PrintData 004D  
                                 GetsRS485@Ret 003F                        ??_OSCILLATOR_Initialize 003D  
                           fifo_dequeue@p_data 003F                            _EUSART_ErrorHandler 0051  
                           fifo_dequeue@p_fifo 003D                               __size_of___awdiv 0084  
                              fifo_init@p_fifo 003D                                    ??_PutsRS485 0043  
                           fifo_dequeue@result 0044                                       __ptext10 002C  
                                     __ptext11 0A22                                       __ptext20 0F8A  
                                     __ptext12 07D6                                       __ptext21 0C8E  
                                     __ptext13 059C                                       __ptext30 0880  
                                     __ptext22 0250                                       __ptext14 0F54  
                                     __ptext31 0B08                                       __ptext23 0D7E  
                                     __ptext15 0F62                                       __ptext40 0BB2  
                                     __ptext32 0C4C                                       __ptext24 0390  
                                     __ptext16 0F70                                       __ptext41 0C04  
                                     __ptext33 0EEC                                       __ptext25 04C2  
                                     __ptext17 0B5E                                       __ptext42 0E8C  
                                     __ptext34 0722                                       __ptext26 0DB0  
                                     __ptext18 0DE2                                       __ptext35 09A6  
                                     __ptext27 0F96                                       __ptext19 0F7E  
                                     __ptext44 0F44                                       __ptext36 066A  
                                     __ptext28 0FDA                                       __ptext45 0ECE  
                                     __ptext37 0922                                       __ptext29 0F1E  
                                     __ptext46 0D0C                                       __ptext38 0E68  
                                     __ptext47 0000                                       __ptext39 0FCA  
                                 PrintLed@flag 0027                               _Ws0010Buf5x7Char 04C2  
                SetProcessFunc@FunctionHandler 004B                    __size_of_EUSART_is_rx_ready 000C  
                                __size_of_main 0012                        ?_EUSART_SetErrorHandler 003D  
EUSART_SetOverrunErrorHandler@interruptHandler 003D                     __size_of_Ws0010Buf9x16Char 0132  
                                     int$flags 0059                                    ??_fifo_init 0040  
        __end_of_EUSART_SetFramingErrorHandler 0FC0         __size_of_EUSART_SetFramingErrorHandler 000A  
                _EUSART_SetFramingErrorHandler 0FB6                                     _INTCONbits 000FF2  
                             Ws0010BufBitmap@j 004B                                ??_TMR0_CallBack 003B  
                                     memcmp@vl 003D                                       memcmp@vr 003F  
                                     memcpy@d1 003D                                       memcpy@s1 003F  
                        __end_of_Ws0010Refresh 0C8E                               Ws0010Bufu8@F3223 001B  
                       ??_INTERRUPT_Initialize 003D                          __end_of_Ws0010PutByte 07D6  
                         __size_of_ProcessInit 00A2                                       intlevel2 0000  
                             Ws0010BufPatern@i 003F                        ?_PIN_MANAGER_Initialize 003B  
               __end_of_EUSART_SetErrorHandler 0FCA                          Ws0010Buf5x7Char@carac 0042  
                   __size_of_EUSART_is_tx_done 000C  EUSART_SetFramingErrorHandler@interruptHandler 003D  
                                ?_fifo_dequeue 003D         __end_of_INTERRUPT_InterruptManagerHigh 0028  
      __size_of_INTERRUPT_InterruptManagerHigh 0020                 _INTERRUPT_InterruptManagerHigh 0008  
                                fifo_init@size 003F                                 _SetProcessFunc 0BB2  
                              _TMR0_Initialize 0E3E                        ?_EUSART_get_last_status 003B  
                           EUSART_Write@txData 003D                 __end_of_PIN_MANAGER_Initialize 0D7E  
                    ProcessPeriodic@StrCommand 0060                                Ws0010Init@F3174 0001  
                              _ProcessPeriodic 002C  
