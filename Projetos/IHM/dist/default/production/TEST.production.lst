

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 29 11:29:55 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69  0000                     
    70                           ; Version 2.05
    71                           ; Generated 20/12/2018 GMT
    72                           ; 
    73                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F46K20 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     
   105 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   106  0000                     
   107 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   108  0000                     
   109 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   110  0000                     
   111                           	psect	idataCOMRAM
   112  000F2E                     __pidataCOMRAM:
   113                           	opt callstack 0
   114                           
   115                           ;initializer for Ws0010Init@F3174
   116  000F2E  00                 	db	0
   117  000F2F  00                 	db	0
   118  000F30  00                 	db	0
   119  000F31  00                 	db	0
   120  000F32  00                 	db	0
   121  000F33  22                 	db	34
   122  000F34  22                 	db	34
   123  000F35  88                 	db	136
   124  000F36  00                 	db	0
   125  000F37  CC                 	db	204
   126  000F38  11                 	db	17
   127  000F39  FF                 	db	255
   128  000F3A  00                 	db	0
   129  000F3B  66                 	db	102
   130                           
   131                           ;initializer for Ws0010Bufu16@F3238
   132  000F3C  0000               	dw	0
   133  000F3E  0001               	dw	1
   134  000F40  000A               	dw	10
   135  000F42  0064               	dw	100
   136  000F44  03E8               	dw	1000
   137  000F46  2710               	dw	10000
   138                           
   139                           ;initializer for Ws0010Bufu8@F3223
   140  000F48  00                 	db	0
   141  000F49  01                 	db	1
   142  000F4A  0A                 	db	10
   143  000F4B  64                 	db	100
   144                           
   145                           	psect	idataBANK0
   146  000E90                     __pidataBANK0:
   147                           	opt callstack 0
   148                           
   149                           ;initializer for Ws0010Bufu32@F3253
   150  000E90  0000               	dw	0
   151  000E92  0000               	dw	0
   152  000E94  0001               	dw	1
   153  000E96  0000               	dw	0
   154  000E98  000A               	dw	10
   155  000E9A  0000               	dw	0
   156  000E9C  0064               	dw	100
   157  000E9E  0000               	dw	0
   158  000EA0  03E8               	dw	1000
   159  000EA2  0000               	dw	0
   160  000EA4  2710               	dw	10000
   161  000EA6  0000               	dw	0
   162  000EA8  86A0               	dw	34464
   163  000EAA  0001               	dw	1
   164  000EAC  4240               	dw	16960
   165  000EAE  000F               	dw	15
   166  000EB0  9680               	dw	38528
   167  000EB2  0098               	dw	152
   168  000EB4  E100               	dw	57600
   169  000EB6  05F5               	dw	1525
   170  000EB8  CA00               	dw	51712
   171  000EBA  3B9A               	dw	15258
   172                           
   173                           	psect	mediumconst
   174  00FB04                     __pmediumconst:
   175                           	opt callstack 0
   176  00FB04  00                 	db	0
   177  00FB05                     _ascii_table4x6:
   178                           	opt callstack 0
   179  00FB05  00                 	db	0
   180  00FB06  00                 	db	0
   181  00FB07  00                 	db	0
   182  00FB08  00                 	db	0
   183  00FB09  00                 	db	0
   184  00FB0A  00                 	db	0
   185  00FB0B  2E                 	db	46
   186  00FB0C  00                 	db	0
   187  00FB0D  00                 	db	0
   188  00FB0E  06                 	db	6
   189  00FB0F  00                 	db	0
   190  00FB10  06                 	db	6
   191  00FB11  00                 	db	0
   192  00FB12  3E                 	db	62
   193  00FB13  14                 	db	20
   194  00FB14  3E                 	db	62
   195  00FB15  00                 	db	0
   196  00FB16  28                 	db	40
   197  00FB17  7E                 	db	126
   198  00FB18  14                 	db	20
   199  00FB19  00                 	db	0
   200  00FB1A  12                 	db	18
   201  00FB1B  08                 	db	8
   202  00FB1C  24                 	db	36
   203  00FB1D  00                 	db	0
   204  00FB1E  34                 	db	52
   205  00FB1F  2A                 	db	42
   206  00FB20  3C                 	db	60
   207  00FB21  00                 	db	0
   208  00FB22  06                 	db	6
   209  00FB23  02                 	db	2
   210  00FB24  00                 	db	0
   211  00FB25  00                 	db	0
   212  00FB26  1C                 	db	28
   213  00FB27  22                 	db	34
   214  00FB28  00                 	db	0
   215  00FB29  00                 	db	0
   216  00FB2A  22                 	db	34
   217  00FB2B  1C                 	db	28
   218  00FB2C  00                 	db	0
   219  00FB2D  00                 	db	0
   220  00FB2E  2A                 	db	42
   221  00FB2F  1C                 	db	28
   222  00FB30  2A                 	db	42
   223  00FB31  00                 	db	0
   224  00FB32  08                 	db	8
   225  00FB33  1C                 	db	28
   226  00FB34  08                 	db	8
   227  00FB35  00                 	db	0
   228  00FB36  60                 	db	96
   229  00FB37  20                 	db	32
   230  00FB38  00                 	db	0
   231  00FB39  00                 	db	0
   232  00FB3A  08                 	db	8
   233  00FB3B  08                 	db	8
   234  00FB3C  08                 	db	8
   235  00FB3D  00                 	db	0
   236  00FB3E  00                 	db	0
   237  00FB3F  20                 	db	32
   238  00FB40  00                 	db	0
   239  00FB41  00                 	db	0
   240  00FB42  30                 	db	48
   241  00FB43  08                 	db	8
   242  00FB44  06                 	db	6
   243  00FB45  3C                 	db	60
   244  00FB46  42                 	db	66
   245  00FB47  42                 	db	66
   246  00FB48  3C                 	db	60
   247  00FB49  00                 	db	0
   248  00FB4A  44                 	db	68
   249  00FB4B  7E                 	db	126
   250  00FB4C  40                 	db	64
   251  00FB4D  62                 	db	98
   252  00FB4E  52                 	db	82
   253  00FB4F  4A                 	db	74
   254  00FB50  44                 	db	68
   255  00FB51  42                 	db	66
   256  00FB52  42                 	db	66
   257  00FB53  4A                 	db	74
   258  00FB54  34                 	db	52
   259  00FB55  0E                 	db	14
   260  00FB56  08                 	db	8
   261  00FB57  08                 	db	8
   262  00FB58  7E                 	db	126
   263  00FB59  4E                 	db	78
   264  00FB5A  4A                 	db	74
   265  00FB5B  4A                 	db	74
   266  00FB5C  32                 	db	50
   267  00FB5D  3C                 	db	60
   268  00FB5E  4A                 	db	74
   269  00FB5F  4A                 	db	74
   270  00FB60  32                 	db	50
   271  00FB61  02                 	db	2
   272  00FB62  72                 	db	114
   273  00FB63  1A                 	db	26
   274  00FB64  0E                 	db	14
   275  00FB65  34                 	db	52
   276  00FB66  4A                 	db	74
   277  00FB67  4A                 	db	74
   278  00FB68  34                 	db	52
   279  00FB69  44                 	db	68
   280  00FB6A  4A                 	db	74
   281  00FB6B  4A                 	db	74
   282  00FB6C  3C                 	db	60
   283  00FB6D  00                 	db	0
   284  00FB6E  00                 	db	0
   285  00FB6F  28                 	db	40
   286  00FB70  00                 	db	0
   287  00FB71  00                 	db	0
   288  00FB72  60                 	db	96
   289  00FB73  28                 	db	40
   290  00FB74  00                 	db	0
   291  00FB75  00                 	db	0
   292  00FB76  18                 	db	24
   293  00FB77  24                 	db	36
   294  00FB78  42                 	db	66
   295  00FB79  28                 	db	40
   296  00FB7A  28                 	db	40
   297  00FB7B  28                 	db	40
   298  00FB7C  28                 	db	40
   299  00FB7D  42                 	db	66
   300  00FB7E  24                 	db	36
   301  00FB7F  18                 	db	24
   302  00FB80  00                 	db	0
   303  00FB81  00                 	db	0
   304  00FB82  02                 	db	2
   305  00FB83  2A                 	db	42
   306  00FB84  04                 	db	4
   307  00FB85  00                 	db	0
   308  00FB86  3E                 	db	62
   309  00FB87  22                 	db	34
   310  00FB88  2E                 	db	46
   311  00FB89  7C                 	db	124
   312  00FB8A  0A                 	db	10
   313  00FB8B  0A                 	db	10
   314  00FB8C  7C                 	db	124
   315  00FB8D  7E                 	db	126
   316  00FB8E  4A                 	db	74
   317  00FB8F  4A                 	db	74
   318  00FB90  34                 	db	52
   319  00FB91  3C                 	db	60
   320  00FB92  42                 	db	66
   321  00FB93  42                 	db	66
   322  00FB94  42                 	db	66
   323  00FB95  7E                 	db	126
   324  00FB96  42                 	db	66
   325  00FB97  42                 	db	66
   326  00FB98  3C                 	db	60
   327  00FB99  7E                 	db	126
   328  00FB9A  4A                 	db	74
   329  00FB9B  4A                 	db	74
   330  00FB9C  42                 	db	66
   331  00FB9D  7E                 	db	126
   332  00FB9E  0A                 	db	10
   333  00FB9F  0A                 	db	10
   334  00FBA0  02                 	db	2
   335  00FBA1  3C                 	db	60
   336  00FBA2  42                 	db	66
   337  00FBA3  4A                 	db	74
   338  00FBA4  3A                 	db	58
   339  00FBA5  7E                 	db	126
   340  00FBA6  08                 	db	8
   341  00FBA7  08                 	db	8
   342  00FBA8  7E                 	db	126
   343  00FBA9  00                 	db	0
   344  00FBAA  42                 	db	66
   345  00FBAB  7E                 	db	126
   346  00FBAC  42                 	db	66
   347  00FBAD  20                 	db	32
   348  00FBAE  40                 	db	64
   349  00FBAF  40                 	db	64
   350  00FBB0  3E                 	db	62
   351  00FBB1  7E                 	db	126
   352  00FBB2  08                 	db	8
   353  00FBB3  08                 	db	8
   354  00FBB4  76                 	db	118
   355  00FBB5  7E                 	db	126
   356  00FBB6  40                 	db	64
   357  00FBB7  40                 	db	64
   358  00FBB8  40                 	db	64
   359  00FBB9  7E                 	db	126
   360  00FBBA  0C                 	db	12
   361  00FBBB  0C                 	db	12
   362  00FBBC  7E                 	db	126
   363  00FBBD  7E                 	db	126
   364  00FBBE  04                 	db	4
   365  00FBBF  08                 	db	8
   366  00FBC0  7E                 	db	126
   367  00FBC1  3C                 	db	60
   368  00FBC2  42                 	db	66
   369  00FBC3  42                 	db	66
   370  00FBC4  3C                 	db	60
   371  00FBC5  7E                 	db	126
   372  00FBC6  0A                 	db	10
   373  00FBC7  0A                 	db	10
   374  00FBC8  04                 	db	4
   375  00FBC9  1C                 	db	28
   376  00FBCA  22                 	db	34
   377  00FBCB  22                 	db	34
   378  00FBCC  5C                 	db	92
   379  00FBCD  7E                 	db	126
   380  00FBCE  0A                 	db	10
   381  00FBCF  0A                 	db	10
   382  00FBD0  74                 	db	116
   383  00FBD1  4E                 	db	78
   384  00FBD2  4A                 	db	74
   385  00FBD3  4A                 	db	74
   386  00FBD4  3A                 	db	58
   387  00FBD5  00                 	db	0
   388  00FBD6  02                 	db	2
   389  00FBD7  7E                 	db	126
   390  00FBD8  02                 	db	2
   391  00FBD9  7E                 	db	126
   392  00FBDA  40                 	db	64
   393  00FBDB  40                 	db	64
   394  00FBDC  7E                 	db	126
   395  00FBDD  3E                 	db	62
   396  00FBDE  40                 	db	64
   397  00FBDF  40                 	db	64
   398  00FBE0  3E                 	db	62
   399  00FBE1  7E                 	db	126
   400  00FBE2  20                 	db	32
   401  00FBE3  20                 	db	32
   402  00FBE4  7E                 	db	126
   403  00FBE5  76                 	db	118
   404  00FBE6  08                 	db	8
   405  00FBE7  08                 	db	8
   406  00FBE8  76                 	db	118
   407  00FBE9  06                 	db	6
   408  00FBEA  48                 	db	72
   409  00FBEB  38                 	db	56
   410  00FBEC  06                 	db	6
   411  00FBED  62                 	db	98
   412  00FBEE  52                 	db	82
   413  00FBEF  4A                 	db	74
   414  00FBF0  46                 	db	70
   415  00FBF1  00                 	db	0
   416  00FBF2  7E                 	db	126
   417  00FBF3  42                 	db	66
   418  00FBF4  00                 	db	0
   419  00FBF5  00                 	db	0
   420  00FBF6  06                 	db	6
   421  00FBF7  08                 	db	8
   422  00FBF8  30                 	db	48
   423  00FBF9  00                 	db	0
   424  00FBFA  42                 	db	66
   425  00FBFB  7E                 	db	126
   426  00FBFC  00                 	db	0
   427  00FBFD  00                 	db	0
   428  00FBFE  04                 	db	4
   429  00FBFF  02                 	db	2
   430  00FC00  04                 	db	4
   431  00FC01  40                 	db	64
   432  00FC02  40                 	db	64
   433  00FC03  40                 	db	64
   434  00FC04  40                 	db	64
   435  00FC05  00                 	db	0
   436  00FC06  02                 	db	2
   437  00FC07  06                 	db	6
   438  00FC08  00                 	db	0
   439  00FC09  00                 	db	0
   440  00FC0A  30                 	db	48
   441  00FC0B  28                 	db	40
   442  00FC0C  38                 	db	56
   443  00FC0D  00                 	db	0
   444  00FC0E  3E                 	db	62
   445  00FC0F  28                 	db	40
   446  00FC10  10                 	db	16
   447  00FC11  00                 	db	0
   448  00FC12  10                 	db	16
   449  00FC13  28                 	db	40
   450  00FC14  28                 	db	40
   451  00FC15  00                 	db	0
   452  00FC16  10                 	db	16
   453  00FC17  28                 	db	40
   454  00FC18  3E                 	db	62
   455  00FC19  00                 	db	0
   456  00FC1A  18                 	db	24
   457  00FC1B  38                 	db	56
   458  00FC1C  28                 	db	40
   459  00FC1D  00                 	db	0
   460  00FC1E  08                 	db	8
   461  00FC1F  3C                 	db	60
   462  00FC20  0A                 	db	10
   463  00FC21  00                 	db	0
   464  00FC22  58                 	db	88
   465  00FC23  48                 	db	72
   466  00FC24  78                 	db	120
   467  00FC25  00                 	db	0
   468  00FC26  3E                 	db	62
   469  00FC27  08                 	db	8
   470  00FC28  30                 	db	48
   471  00FC29  00                 	db	0
   472  00FC2A  00                 	db	0
   473  00FC2B  3A                 	db	58
   474  00FC2C  00                 	db	0
   475  00FC2D  00                 	db	0
   476  00FC2E  40                 	db	64
   477  00FC2F  7A                 	db	122
   478  00FC30  00                 	db	0
   479  00FC31  00                 	db	0
   480  00FC32  3E                 	db	62
   481  00FC33  10                 	db	16
   482  00FC34  28                 	db	40
   483  00FC35  00                 	db	0
   484  00FC36  00                 	db	0
   485  00FC37  3E                 	db	62
   486  00FC38  00                 	db	0
   487  00FC39  00                 	db	0
   488  00FC3A  38                 	db	56
   489  00FC3B  18                 	db	24
   490  00FC3C  38                 	db	56
   491  00FC3D  00                 	db	0
   492  00FC3E  38                 	db	56
   493  00FC3F  08                 	db	8
   494  00FC40  30                 	db	48
   495  00FC41  00                 	db	0
   496  00FC42  10                 	db	16
   497  00FC43  28                 	db	40
   498  00FC44  10                 	db	16
   499  00FC45  00                 	db	0
   500  00FC46  78                 	db	120
   501  00FC47  28                 	db	40
   502  00FC48  10                 	db	16
   503  00FC49  00                 	db	0
   504  00FC4A  10                 	db	16
   505  00FC4B  28                 	db	40
   506  00FC4C  78                 	db	120
   507  00FC4D  00                 	db	0
   508  00FC4E  38                 	db	56
   509  00FC4F  08                 	db	8
   510  00FC50  00                 	db	0
   511  00FC51  00                 	db	0
   512  00FC52  20                 	db	32
   513  00FC53  38                 	db	56
   514  00FC54  08                 	db	8
   515  00FC55  00                 	db	0
   516  00FC56  08                 	db	8
   517  00FC57  3C                 	db	60
   518  00FC58  28                 	db	40
   519  00FC59  00                 	db	0
   520  00FC5A  38                 	db	56
   521  00FC5B  20                 	db	32
   522  00FC5C  38                 	db	56
   523  00FC5D  00                 	db	0
   524  00FC5E  18                 	db	24
   525  00FC5F  20                 	db	32
   526  00FC60  18                 	db	24
   527  00FC61  00                 	db	0
   528  00FC62  38                 	db	56
   529  00FC63  30                 	db	48
   530  00FC64  38                 	db	56
   531  00FC65  00                 	db	0
   532  00FC66  28                 	db	40
   533  00FC67  10                 	db	16
   534  00FC68  28                 	db	40
   535  00FC69  00                 	db	0
   536  00FC6A  58                 	db	88
   537  00FC6B  20                 	db	32
   538  00FC6C  18                 	db	24
   539  00FC6D  00                 	db	0
   540  00FC6E  08                 	db	8
   541  00FC6F  38                 	db	56
   542  00FC70  20                 	db	32
   543  00FC71  00                 	db	0
   544  00FC72  08                 	db	8
   545  00FC73  3E                 	db	62
   546  00FC74  22                 	db	34
   547  00FC75  00                 	db	0
   548  00FC76  00                 	db	0
   549  00FC77  3E                 	db	62
   550  00FC78  00                 	db	0
   551  00FC79  00                 	db	0
   552  00FC7A  22                 	db	34
   553  00FC7B  3E                 	db	62
   554  00FC7C  08                 	db	8
   555  00FC7D  04                 	db	4
   556  00FC7E  02                 	db	2
   557  00FC7F  04                 	db	4
   558  00FC80  02                 	db	2
   559  00FC81                     __end_of_ascii_table4x6:
   560                           	opt callstack 0
   561  00FC81                     _ascii_table5x7:
   562                           	opt callstack 0
   563  00FC81  00                 	db	0
   564  00FC82  00                 	db	0
   565  00FC83  00                 	db	0
   566  00FC84  00                 	db	0
   567  00FC85  00                 	db	0
   568  00FC86  00                 	db	0
   569  00FC87  00                 	db	0
   570  00FC88  5F                 	db	95
   571  00FC89  00                 	db	0
   572  00FC8A  00                 	db	0
   573  00FC8B  00                 	db	0
   574  00FC8C  07                 	db	7
   575  00FC8D  00                 	db	0
   576  00FC8E  07                 	db	7
   577  00FC8F  00                 	db	0
   578  00FC90  14                 	db	20
   579  00FC91  7F                 	db	127
   580  00FC92  14                 	db	20
   581  00FC93  7F                 	db	127
   582  00FC94  14                 	db	20
   583  00FC95  24                 	db	36
   584  00FC96  2A                 	db	42
   585  00FC97  7F                 	db	127
   586  00FC98  2A                 	db	42
   587  00FC99  12                 	db	18
   588  00FC9A  23                 	db	35
   589  00FC9B  13                 	db	19
   590  00FC9C  08                 	db	8
   591  00FC9D  64                 	db	100
   592  00FC9E  62                 	db	98
   593  00FC9F  36                 	db	54
   594  00FCA0  49                 	db	73
   595  00FCA1  55                 	db	85
   596  00FCA2  22                 	db	34
   597  00FCA3  50                 	db	80
   598  00FCA4  00                 	db	0
   599  00FCA5  05                 	db	5
   600  00FCA6  03                 	db	3
   601  00FCA7  00                 	db	0
   602  00FCA8  00                 	db	0
   603  00FCA9  00                 	db	0
   604  00FCAA  1C                 	db	28
   605  00FCAB  22                 	db	34
   606  00FCAC  41                 	db	65
   607  00FCAD  00                 	db	0
   608  00FCAE  00                 	db	0
   609  00FCAF  41                 	db	65
   610  00FCB0  22                 	db	34
   611  00FCB1  1C                 	db	28
   612  00FCB2  00                 	db	0
   613  00FCB3  08                 	db	8
   614  00FCB4  2A                 	db	42
   615  00FCB5  1C                 	db	28
   616  00FCB6  2A                 	db	42
   617  00FCB7  08                 	db	8
   618  00FCB8  08                 	db	8
   619  00FCB9  08                 	db	8
   620  00FCBA  3E                 	db	62
   621  00FCBB  08                 	db	8
   622  00FCBC  08                 	db	8
   623  00FCBD  00                 	db	0
   624  00FCBE  50                 	db	80
   625  00FCBF  30                 	db	48
   626  00FCC0  00                 	db	0
   627  00FCC1  00                 	db	0
   628  00FCC2  08                 	db	8
   629  00FCC3  08                 	db	8
   630  00FCC4  08                 	db	8
   631  00FCC5  08                 	db	8
   632  00FCC6  08                 	db	8
   633  00FCC7  00                 	db	0
   634  00FCC8  30                 	db	48
   635  00FCC9  30                 	db	48
   636  00FCCA  00                 	db	0
   637  00FCCB  00                 	db	0
   638  00FCCC  20                 	db	32
   639  00FCCD  10                 	db	16
   640  00FCCE  08                 	db	8
   641  00FCCF  04                 	db	4
   642  00FCD0  02                 	db	2
   643  00FCD1  3E                 	db	62
   644  00FCD2  51                 	db	81
   645  00FCD3  49                 	db	73
   646  00FCD4  45                 	db	69
   647  00FCD5  3E                 	db	62
   648  00FCD6  00                 	db	0
   649  00FCD7  42                 	db	66
   650  00FCD8  7F                 	db	127
   651  00FCD9  40                 	db	64
   652  00FCDA  00                 	db	0
   653  00FCDB  42                 	db	66
   654  00FCDC  61                 	db	97
   655  00FCDD  51                 	db	81
   656  00FCDE  49                 	db	73
   657  00FCDF  46                 	db	70
   658  00FCE0  21                 	db	33
   659  00FCE1  41                 	db	65
   660  00FCE2  45                 	db	69
   661  00FCE3  4B                 	db	75
   662  00FCE4  31                 	db	49
   663  00FCE5  18                 	db	24
   664  00FCE6  14                 	db	20
   665  00FCE7  12                 	db	18
   666  00FCE8  7F                 	db	127
   667  00FCE9  10                 	db	16
   668  00FCEA  27                 	db	39
   669  00FCEB  45                 	db	69
   670  00FCEC  45                 	db	69
   671  00FCED  45                 	db	69
   672  00FCEE  39                 	db	57
   673  00FCEF  3C                 	db	60
   674  00FCF0  4A                 	db	74
   675  00FCF1  49                 	db	73
   676  00FCF2  49                 	db	73
   677  00FCF3  30                 	db	48
   678  00FCF4  01                 	db	1
   679  00FCF5  71                 	db	113
   680  00FCF6  09                 	db	9
   681  00FCF7  05                 	db	5
   682  00FCF8  03                 	db	3
   683  00FCF9  36                 	db	54
   684  00FCFA  49                 	db	73
   685  00FCFB  49                 	db	73
   686  00FCFC  49                 	db	73
   687  00FCFD  36                 	db	54
   688  00FCFE  06                 	db	6
   689  00FCFF  49                 	db	73
   690  00FD00  49                 	db	73
   691  00FD01  29                 	db	41
   692  00FD02  1E                 	db	30
   693  00FD03  00                 	db	0
   694  00FD04  36                 	db	54
   695  00FD05  36                 	db	54
   696  00FD06  00                 	db	0
   697  00FD07  00                 	db	0
   698  00FD08  00                 	db	0
   699  00FD09  56                 	db	86
   700  00FD0A  36                 	db	54
   701  00FD0B  00                 	db	0
   702  00FD0C  00                 	db	0
   703  00FD0D  00                 	db	0
   704  00FD0E  08                 	db	8
   705  00FD0F  14                 	db	20
   706  00FD10  22                 	db	34
   707  00FD11  41                 	db	65
   708  00FD12  14                 	db	20
   709  00FD13  14                 	db	20
   710  00FD14  14                 	db	20
   711  00FD15  14                 	db	20
   712  00FD16  14                 	db	20
   713  00FD17  41                 	db	65
   714  00FD18  22                 	db	34
   715  00FD19  14                 	db	20
   716  00FD1A  08                 	db	8
   717  00FD1B  00                 	db	0
   718  00FD1C  02                 	db	2
   719  00FD1D  01                 	db	1
   720  00FD1E  51                 	db	81
   721  00FD1F  09                 	db	9
   722  00FD20  06                 	db	6
   723  00FD21  32                 	db	50
   724  00FD22  49                 	db	73
   725  00FD23  79                 	db	121
   726  00FD24  41                 	db	65
   727  00FD25  3E                 	db	62
   728  00FD26  7E                 	db	126
   729  00FD27  11                 	db	17
   730  00FD28  11                 	db	17
   731  00FD29  11                 	db	17
   732  00FD2A  7E                 	db	126
   733  00FD2B  7F                 	db	127
   734  00FD2C  49                 	db	73
   735  00FD2D  49                 	db	73
   736  00FD2E  49                 	db	73
   737  00FD2F  36                 	db	54
   738  00FD30  3E                 	db	62
   739  00FD31  41                 	db	65
   740  00FD32  41                 	db	65
   741  00FD33  41                 	db	65
   742  00FD34  22                 	db	34
   743  00FD35  7F                 	db	127
   744  00FD36  41                 	db	65
   745  00FD37  41                 	db	65
   746  00FD38  22                 	db	34
   747  00FD39  1C                 	db	28
   748  00FD3A  7F                 	db	127
   749  00FD3B  49                 	db	73
   750  00FD3C  49                 	db	73
   751  00FD3D  49                 	db	73
   752  00FD3E  41                 	db	65
   753  00FD3F  7F                 	db	127
   754  00FD40  09                 	db	9
   755  00FD41  09                 	db	9
   756  00FD42  01                 	db	1
   757  00FD43  01                 	db	1
   758  00FD44  3E                 	db	62
   759  00FD45  41                 	db	65
   760  00FD46  41                 	db	65
   761  00FD47  51                 	db	81
   762  00FD48  32                 	db	50
   763  00FD49  7F                 	db	127
   764  00FD4A  08                 	db	8
   765  00FD4B  08                 	db	8
   766  00FD4C  08                 	db	8
   767  00FD4D  7F                 	db	127
   768  00FD4E  00                 	db	0
   769  00FD4F  41                 	db	65
   770  00FD50  7F                 	db	127
   771  00FD51  41                 	db	65
   772  00FD52  00                 	db	0
   773  00FD53  20                 	db	32
   774  00FD54  40                 	db	64
   775  00FD55  41                 	db	65
   776  00FD56  3F                 	db	63
   777  00FD57  01                 	db	1
   778  00FD58  7F                 	db	127
   779  00FD59  08                 	db	8
   780  00FD5A  14                 	db	20
   781  00FD5B  22                 	db	34
   782  00FD5C  41                 	db	65
   783  00FD5D  7F                 	db	127
   784  00FD5E  40                 	db	64
   785  00FD5F  40                 	db	64
   786  00FD60  40                 	db	64
   787  00FD61  40                 	db	64
   788  00FD62  7F                 	db	127
   789  00FD63  02                 	db	2
   790  00FD64  04                 	db	4
   791  00FD65  02                 	db	2
   792  00FD66  7F                 	db	127
   793  00FD67  7F                 	db	127
   794  00FD68  04                 	db	4
   795  00FD69  08                 	db	8
   796  00FD6A  10                 	db	16
   797  00FD6B  7F                 	db	127
   798  00FD6C  3E                 	db	62
   799  00FD6D  41                 	db	65
   800  00FD6E  41                 	db	65
   801  00FD6F  41                 	db	65
   802  00FD70  3E                 	db	62
   803  00FD71  7F                 	db	127
   804  00FD72  09                 	db	9
   805  00FD73  09                 	db	9
   806  00FD74  09                 	db	9
   807  00FD75  06                 	db	6
   808  00FD76  3E                 	db	62
   809  00FD77  41                 	db	65
   810  00FD78  51                 	db	81
   811  00FD79  21                 	db	33
   812  00FD7A  5E                 	db	94
   813  00FD7B  7F                 	db	127
   814  00FD7C  09                 	db	9
   815  00FD7D  19                 	db	25
   816  00FD7E  29                 	db	41
   817  00FD7F  46                 	db	70
   818  00FD80  46                 	db	70
   819  00FD81  49                 	db	73
   820  00FD82  49                 	db	73
   821  00FD83  49                 	db	73
   822  00FD84  31                 	db	49
   823  00FD85  01                 	db	1
   824  00FD86  01                 	db	1
   825  00FD87  7F                 	db	127
   826  00FD88  01                 	db	1
   827  00FD89  01                 	db	1
   828  00FD8A  3F                 	db	63
   829  00FD8B  40                 	db	64
   830  00FD8C  40                 	db	64
   831  00FD8D  40                 	db	64
   832  00FD8E  3F                 	db	63
   833  00FD8F  1F                 	db	31
   834  00FD90  20                 	db	32
   835  00FD91  40                 	db	64
   836  00FD92  20                 	db	32
   837  00FD93  1F                 	db	31
   838  00FD94  7F                 	db	127
   839  00FD95  20                 	db	32
   840  00FD96  18                 	db	24
   841  00FD97  20                 	db	32
   842  00FD98  7F                 	db	127
   843  00FD99  63                 	db	99
   844  00FD9A  14                 	db	20
   845  00FD9B  08                 	db	8
   846  00FD9C  14                 	db	20
   847  00FD9D  63                 	db	99
   848  00FD9E  03                 	db	3
   849  00FD9F  04                 	db	4
   850  00FDA0  78                 	db	120
   851  00FDA1  04                 	db	4
   852  00FDA2  03                 	db	3
   853  00FDA3  61                 	db	97
   854  00FDA4  51                 	db	81
   855  00FDA5  49                 	db	73
   856  00FDA6  45                 	db	69
   857  00FDA7  43                 	db	67
   858  00FDA8  00                 	db	0
   859  00FDA9  00                 	db	0
   860  00FDAA  7F                 	db	127
   861  00FDAB  41                 	db	65
   862  00FDAC  41                 	db	65
   863  00FDAD  02                 	db	2
   864  00FDAE  04                 	db	4
   865  00FDAF  08                 	db	8
   866  00FDB0  10                 	db	16
   867  00FDB1  20                 	db	32
   868  00FDB2  41                 	db	65
   869  00FDB3  41                 	db	65
   870  00FDB4  7F                 	db	127
   871  00FDB5  00                 	db	0
   872  00FDB6  00                 	db	0
   873  00FDB7  04                 	db	4
   874  00FDB8  02                 	db	2
   875  00FDB9  01                 	db	1
   876  00FDBA  02                 	db	2
   877  00FDBB  04                 	db	4
   878  00FDBC  40                 	db	64
   879  00FDBD  40                 	db	64
   880  00FDBE  40                 	db	64
   881  00FDBF  40                 	db	64
   882  00FDC0  40                 	db	64
   883  00FDC1  00                 	db	0
   884  00FDC2  01                 	db	1
   885  00FDC3  02                 	db	2
   886  00FDC4  04                 	db	4
   887  00FDC5  00                 	db	0
   888  00FDC6  20                 	db	32
   889  00FDC7  54                 	db	84
   890  00FDC8  54                 	db	84
   891  00FDC9  54                 	db	84
   892  00FDCA  78                 	db	120
   893  00FDCB  7F                 	db	127
   894  00FDCC  48                 	db	72
   895  00FDCD  44                 	db	68
   896  00FDCE  44                 	db	68
   897  00FDCF  38                 	db	56
   898  00FDD0  38                 	db	56
   899  00FDD1  44                 	db	68
   900  00FDD2  44                 	db	68
   901  00FDD3  44                 	db	68
   902  00FDD4  20                 	db	32
   903  00FDD5  38                 	db	56
   904  00FDD6  44                 	db	68
   905  00FDD7  44                 	db	68
   906  00FDD8  48                 	db	72
   907  00FDD9  7F                 	db	127
   908  00FDDA  38                 	db	56
   909  00FDDB  54                 	db	84
   910  00FDDC  54                 	db	84
   911  00FDDD  54                 	db	84
   912  00FDDE  18                 	db	24
   913  00FDDF  08                 	db	8
   914  00FDE0  7E                 	db	126
   915  00FDE1  09                 	db	9
   916  00FDE2  01                 	db	1
   917  00FDE3  02                 	db	2
   918  00FDE4  08                 	db	8
   919  00FDE5  14                 	db	20
   920  00FDE6  54                 	db	84
   921  00FDE7  54                 	db	84
   922  00FDE8  3C                 	db	60
   923  00FDE9  7F                 	db	127
   924  00FDEA  08                 	db	8
   925  00FDEB  04                 	db	4
   926  00FDEC  04                 	db	4
   927  00FDED  78                 	db	120
   928  00FDEE  40                 	db	64
   929  00FDEF  44                 	db	68
   930  00FDF0  7D                 	db	125
   931  00FDF1  40                 	db	64
   932  00FDF2  00                 	db	0
   933  00FDF3  20                 	db	32
   934  00FDF4  40                 	db	64
   935  00FDF5  44                 	db	68
   936  00FDF6  3D                 	db	61
   937  00FDF7  00                 	db	0
   938  00FDF8  00                 	db	0
   939  00FDF9  7F                 	db	127
   940  00FDFA  10                 	db	16
   941  00FDFB  28                 	db	40
   942  00FDFC  44                 	db	68
   943  00FDFD  00                 	db	0
   944  00FDFE  41                 	db	65
   945  00FDFF  7F                 	db	127
   946  00FE00  40                 	db	64
   947  00FE01  00                 	db	0
   948  00FE02  7C                 	db	124
   949  00FE03  04                 	db	4
   950  00FE04  18                 	db	24
   951  00FE05  04                 	db	4
   952  00FE06  78                 	db	120
   953  00FE07  7C                 	db	124
   954  00FE08  08                 	db	8
   955  00FE09  04                 	db	4
   956  00FE0A  04                 	db	4
   957  00FE0B  78                 	db	120
   958  00FE0C  38                 	db	56
   959  00FE0D  44                 	db	68
   960  00FE0E  44                 	db	68
   961  00FE0F  44                 	db	68
   962  00FE10  38                 	db	56
   963  00FE11  7C                 	db	124
   964  00FE12  14                 	db	20
   965  00FE13  14                 	db	20
   966  00FE14  14                 	db	20
   967  00FE15  08                 	db	8
   968  00FE16  08                 	db	8
   969  00FE17  14                 	db	20
   970  00FE18  14                 	db	20
   971  00FE19  18                 	db	24
   972  00FE1A  7C                 	db	124
   973  00FE1B  7C                 	db	124
   974  00FE1C  08                 	db	8
   975  00FE1D  04                 	db	4
   976  00FE1E  04                 	db	4
   977  00FE1F  08                 	db	8
   978  00FE20  48                 	db	72
   979  00FE21  54                 	db	84
   980  00FE22  54                 	db	84
   981  00FE23  54                 	db	84
   982  00FE24  20                 	db	32
   983  00FE25  04                 	db	4
   984  00FE26  3F                 	db	63
   985  00FE27  44                 	db	68
   986  00FE28  40                 	db	64
   987  00FE29  20                 	db	32
   988  00FE2A  3C                 	db	60
   989  00FE2B  40                 	db	64
   990  00FE2C  40                 	db	64
   991  00FE2D  20                 	db	32
   992  00FE2E  7C                 	db	124
   993  00FE2F  1C                 	db	28
   994  00FE30  20                 	db	32
   995  00FE31  40                 	db	64
   996  00FE32  20                 	db	32
   997  00FE33  1C                 	db	28
   998  00FE34  3C                 	db	60
   999  00FE35  40                 	db	64
  1000  00FE36  30                 	db	48
  1001  00FE37  40                 	db	64
  1002  00FE38  3C                 	db	60
  1003  00FE39  44                 	db	68
  1004  00FE3A  28                 	db	40
  1005  00FE3B  10                 	db	16
  1006  00FE3C  28                 	db	40
  1007  00FE3D  44                 	db	68
  1008  00FE3E  0C                 	db	12
  1009  00FE3F  50                 	db	80
  1010  00FE40  50                 	db	80
  1011  00FE41  50                 	db	80
  1012  00FE42  3C                 	db	60
  1013  00FE43  44                 	db	68
  1014  00FE44  64                 	db	100
  1015  00FE45  54                 	db	84
  1016  00FE46  4C                 	db	76
  1017  00FE47  44                 	db	68
  1018  00FE48  00                 	db	0
  1019  00FE49  08                 	db	8
  1020  00FE4A  36                 	db	54
  1021  00FE4B  41                 	db	65
  1022  00FE4C  00                 	db	0
  1023  00FE4D  00                 	db	0
  1024  00FE4E  00                 	db	0
  1025  00FE4F  7F                 	db	127
  1026  00FE50  00                 	db	0
  1027  00FE51  00                 	db	0
  1028  00FE52  00                 	db	0
  1029  00FE53  41                 	db	65
  1030  00FE54  36                 	db	54
  1031  00FE55  08                 	db	8
  1032  00FE56  00                 	db	0
  1033  00FE57  08                 	db	8
  1034  00FE58  08                 	db	8
  1035  00FE59  2A                 	db	42
  1036  00FE5A  1C                 	db	28
  1037  00FE5B  08                 	db	8
  1038  00FE5C  08                 	db	8
  1039  00FE5D  1C                 	db	28
  1040  00FE5E  2A                 	db	42
  1041  00FE5F  08                 	db	8
  1042  00FE60  08                 	db	8
  1043  00FE61  38                 	db	56
  1044  00FE62  44                 	db	68
  1045  00FE63  4C                 	db	76
  1046  00FE64  44                 	db	68
  1047  00FE65  20                 	db	32
  1048  00FE66                     __end_of_ascii_table5x7:
  1049                           	opt callstack 0
  1050  00FE66                     _ascii_table9x16:
  1051                           	opt callstack 0
  1052  00FE66  FC                 	db	252
  1053  00FE67  FE                 	db	254
  1054  00FE68  FF                 	db	255
  1055  00FE69  03                 	db	3
  1056  00FE6A  03                 	db	3
  1057  00FE6B  03                 	db	3
  1058  00FE6C  FF                 	db	255
  1059  00FE6D  FE                 	db	254
  1060  00FE6E  FC                 	db	252
  1061  00FE6F  3F                 	db	63
  1062  00FE70  7F                 	db	127
  1063  00FE71  FF                 	db	255
  1064  00FE72  C0                 	db	192
  1065  00FE73  C0                 	db	192
  1066  00FE74  C0                 	db	192
  1067  00FE75  FF                 	db	255
  1068  00FE76  7F                 	db	127
  1069  00FE77  3F                 	db	63
  1070  00FE78  00                 	db	0
  1071  00FE79  0C                 	db	12
  1072  00FE7A  0E                 	db	14
  1073  00FE7B  FF                 	db	255
  1074  00FE7C  FF                 	db	255
  1075  00FE7D  FF                 	db	255
  1076  00FE7E  00                 	db	0
  1077  00FE7F  00                 	db	0
  1078  00FE80  00                 	db	0
  1079  00FE81  00                 	db	0
  1080  00FE82  C0                 	db	192
  1081  00FE83  C0                 	db	192
  1082  00FE84  FF                 	db	255
  1083  00FE85  FF                 	db	255
  1084  00FE86  FF                 	db	255
  1085  00FE87  C0                 	db	192
  1086  00FE88  C0                 	db	192
  1087  00FE89  00                 	db	0
  1088  00FE8A  0C                 	db	12
  1089  00FE8B  0E                 	db	14
  1090  00FE8C  0F                 	db	15
  1091  00FE8D  03                 	db	3
  1092  00FE8E  03                 	db	3
  1093  00FE8F  83                 	db	131
  1094  00FE90  FF                 	db	255
  1095  00FE91  FE                 	db	254
  1096  00FE92  7C                 	db	124
  1097  00FE93  F0                 	db	240
  1098  00FE94  F8                 	db	248
  1099  00FE95  FC                 	db	252
  1100  00FE96  CE                 	db	206
  1101  00FE97  C7                 	db	199
  1102  00FE98  C3                 	db	195
  1103  00FE99  E1                 	db	225
  1104  00FE9A  E0                 	db	224
  1105  00FE9B  E0                 	db	224
  1106  00FE9C  0C                 	db	12
  1107  00FE9D  0E                 	db	14
  1108  00FE9E  0F                 	db	15
  1109  00FE9F  C3                 	db	195
  1110  00FEA0  C3                 	db	195
  1111  00FEA1  C3                 	db	195
  1112  00FEA2  FF                 	db	255
  1113  00FEA3  7E                 	db	126
  1114  00FEA4  3C                 	db	60
  1115  00FEA5  60                 	db	96
  1116  00FEA6  60                 	db	96
  1117  00FEA7  E0                 	db	224
  1118  00FEA8  C0                 	db	192
  1119  00FEA9  C0                 	db	192
  1120  00FEAA  C0                 	db	192
  1121  00FEAB  FF                 	db	255
  1122  00FEAC  7F                 	db	127
  1123  00FEAD  3E                 	db	62
  1124  00FEAE  00                 	db	0
  1125  00FEAF  80                 	db	128
  1126  00FEB0  E0                 	db	224
  1127  00FEB1  F8                 	db	248
  1128  00FEB2  7E                 	db	126
  1129  00FEB3  1F                 	db	31
  1130  00FEB4  FF                 	db	255
  1131  00FEB5  FF                 	db	255
  1132  00FEB6  FF                 	db	255
  1133  00FEB7  06                 	db	6
  1134  00FEB8  07                 	db	7
  1135  00FEB9  07                 	db	7
  1136  00FEBA  07                 	db	7
  1137  00FEBB  06                 	db	6
  1138  00FEBC  06                 	db	6
  1139  00FEBD  FF                 	db	255
  1140  00FEBE  FF                 	db	255
  1141  00FEBF  FF                 	db	255
  1142  00FEC0  7F                 	db	127
  1143  00FEC1  7F                 	db	127
  1144  00FEC2  7F                 	db	127
  1145  00FEC3  63                 	db	99
  1146  00FEC4  63                 	db	99
  1147  00FEC5  63                 	db	99
  1148  00FEC6  E7                 	db	231
  1149  00FEC7  C7                 	db	199
  1150  00FEC8  87                 	db	135
  1151  00FEC9  30                 	db	48
  1152  00FECA  70                 	db	112
  1153  00FECB  F0                 	db	240
  1154  00FECC  C0                 	db	192
  1155  00FECD  C0                 	db	192
  1156  00FECE  C0                 	db	192
  1157  00FECF  FF                 	db	255
  1158  00FED0  7F                 	db	127
  1159  00FED1  3F                 	db	63
  1160  00FED2  FC                 	db	252
  1161  00FED3  FE                 	db	254
  1162  00FED4  FF                 	db	255
  1163  00FED5  C3                 	db	195
  1164  00FED6  C3                 	db	195
  1165  00FED7  C3                 	db	195
  1166  00FED8  CF                 	db	207
  1167  00FED9  8E                 	db	142
  1168  00FEDA  0C                 	db	12
  1169  00FEDB  3F                 	db	63
  1170  00FEDC  7F                 	db	127
  1171  00FEDD  FF                 	db	255
  1172  00FEDE  C0                 	db	192
  1173  00FEDF  C0                 	db	192
  1174  00FEE0  C0                 	db	192
  1175  00FEE1  FF                 	db	255
  1176  00FEE2  7F                 	db	127
  1177  00FEE3  3F                 	db	63
  1178  00FEE4  07                 	db	7
  1179  00FEE5  07                 	db	7
  1180  00FEE6  07                 	db	7
  1181  00FEE7  03                 	db	3
  1182  00FEE8  C3                 	db	195
  1183  00FEE9  F3                 	db	243
  1184  00FEEA  FF                 	db	255
  1185  00FEEB  3F                 	db	63
  1186  00FEEC  0F                 	db	15
  1187  00FEED  00                 	db	0
  1188  00FEEE  F0                 	db	240
  1189  00FEEF  FC                 	db	252
  1190  00FEF0  FF                 	db	255
  1191  00FEF1  0F                 	db	15
  1192  00FEF2  03                 	db	3
  1193  00FEF3  00                 	db	0
  1194  00FEF4  00                 	db	0
  1195  00FEF5  00                 	db	0
  1196  00FEF6  3C                 	db	60
  1197  00FEF7  FE                 	db	254
  1198  00FEF8  FF                 	db	255
  1199  00FEF9  C3                 	db	195
  1200  00FEFA  C3                 	db	195
  1201  00FEFB  C3                 	db	195
  1202  00FEFC  FF                 	db	255
  1203  00FEFD  FE                 	db	254
  1204  00FEFE  3C                 	db	60
  1205  00FEFF  3F                 	db	63
  1206  00FF00  7F                 	db	127
  1207  00FF01  FF                 	db	255
  1208  00FF02  C0                 	db	192
  1209  00FF03  C0                 	db	192
  1210  00FF04  C0                 	db	192
  1211  00FF05  FF                 	db	255
  1212  00FF06  7F                 	db	127
  1213  00FF07  3F                 	db	63
  1214  00FF08  FC                 	db	252
  1215  00FF09  FE                 	db	254
  1216  00FF0A  FF                 	db	255
  1217  00FF0B  03                 	db	3
  1218  00FF0C  03                 	db	3
  1219  00FF0D  03                 	db	3
  1220  00FF0E  FF                 	db	255
  1221  00FF0F  FE                 	db	254
  1222  00FF10  FC                 	db	252
  1223  00FF11  30                 	db	48
  1224  00FF12  71                 	db	113
  1225  00FF13  F3                 	db	243
  1226  00FF14  C3                 	db	195
  1227  00FF15  C3                 	db	195
  1228  00FF16  C3                 	db	195
  1229  00FF17  FF                 	db	255
  1230  00FF18  7F                 	db	127
  1231  00FF19  3F                 	db	63
  1232  00FF1A  00                 	db	0
  1233  00FF1B  70                 	db	112
  1234  00FF1C  70                 	db	112
  1235  00FF1D  70                 	db	112
  1236  00FF1E  00                 	db	0
  1237  00FF1F  00                 	db	0
  1238  00FF20  00                 	db	0
  1239  00FF21  00                 	db	0
  1240  00FF22  00                 	db	0
  1241  00FF23  00                 	db	0
  1242  00FF24  0E                 	db	14
  1243  00FF25  0E                 	db	14
  1244  00FF26  0E                 	db	14
  1245  00FF27  00                 	db	0
  1246  00FF28  00                 	db	0
  1247  00FF29  00                 	db	0
  1248  00FF2A  00                 	db	0
  1249  00FF2B  00                 	db	0
  1250  00FF2C  00                 	db	0
  1251  00FF2D  70                 	db	112
  1252  00FF2E  50                 	db	80
  1253  00FF2F  70                 	db	112
  1254  00FF30  00                 	db	0
  1255  00FF31  00                 	db	0
  1256  00FF32  00                 	db	0
  1257  00FF33  00                 	db	0
  1258  00FF34  00                 	db	0
  1259  00FF35  00                 	db	0
  1260  00FF36  0E                 	db	14
  1261  00FF37  0A                 	db	10
  1262  00FF38  0E                 	db	14
  1263  00FF39  00                 	db	0
  1264  00FF3A  00                 	db	0
  1265  00FF3B  00                 	db	0
  1266  00FF3C  00                 	db	0
  1267  00FF3D  00                 	db	0
  1268  00FF3E                     __end_of_ascii_table9x16:
  1269                           	opt callstack 0
  1270  00FF3E                     _LogoClk:
  1271                           	opt callstack 0
  1272  00FF3E  E0                 	db	224
  1273  00FF3F  F8                 	db	248
  1274  00FF40  FC                 	db	252
  1275  00FF41  FE                 	db	254
  1276  00FF42  FE                 	db	254
  1277  00FF43  7F                 	db	127
  1278  00FF44  3F                 	db	63
  1279  00FF45  1F                 	db	31
  1280  00FF46  1F                 	db	31
  1281  00FF47  3F                 	db	63
  1282  00FF48  3E                 	db	62
  1283  00FF49  1E                 	db	30
  1284  00FF4A  0C                 	db	12
  1285  00FF4B  00                 	db	0
  1286  00FF4C  80                 	db	128
  1287  00FF4D  C0                 	db	192
  1288  00FF4E  C0                 	db	192
  1289  00FF4F  E0                 	db	224
  1290  00FF50  E0                 	db	224
  1291  00FF51  E0                 	db	224
  1292  00FF52  E0                 	db	224
  1293  00FF53  E0                 	db	224
  1294  00FF54  E0                 	db	224
  1295  00FF55  C0                 	db	192
  1296  00FF56  80                 	db	128
  1297  00FF57  00                 	db	0
  1298  00FF58  00                 	db	0
  1299  00FF59  E0                 	db	224
  1300  00FF5A  E0                 	db	224
  1301  00FF5B  E0                 	db	224
  1302  00FF5C  E0                 	db	224
  1303  00FF5D  E0                 	db	224
  1304  00FF5E  C0                 	db	192
  1305  00FF5F  E0                 	db	224
  1306  00FF60  E0                 	db	224
  1307  00FF61  E0                 	db	224
  1308  00FF62  E0                 	db	224
  1309  00FF63  E0                 	db	224
  1310  00FF64  C0                 	db	192
  1311  00FF65  E0                 	db	224
  1312  00FF66  E0                 	db	224
  1313  00FF67  E0                 	db	224
  1314  00FF68  E0                 	db	224
  1315  00FF69  E0                 	db	224
  1316  00FF6A  C0                 	db	192
  1317  00FF6B  00                 	db	0
  1318  00FF6C  FE                 	db	254
  1319  00FF6D  FE                 	db	254
  1320  00FF6E  FE                 	db	254
  1321  00FF6F  FE                 	db	254
  1322  00FF70  FE                 	db	254
  1323  00FF71  FE                 	db	254
  1324  00FF72  00                 	db	0
  1325  00FF73  00                 	db	0
  1326  00FF74  00                 	db	0
  1327  00FF75  00                 	db	0
  1328  00FF76  00                 	db	0
  1329  00FF77  00                 	db	0
  1330  00FF78  E4                 	db	228
  1331  00FF79  EE                 	db	238
  1332  00FF7A  FF                 	db	255
  1333  00FF7B  EE                 	db	238
  1334  00FF7C  E4                 	db	228
  1335  00FF7D  00                 	db	0
  1336  00FF7E  E0                 	db	224
  1337  00FF7F  E0                 	db	224
  1338  00FF80  E0                 	db	224
  1339  00FF81  E0                 	db	224
  1340  00FF82  E0                 	db	224
  1341  00FF83  80                 	db	128
  1342  00FF84  C0                 	db	192
  1343  00FF85  E0                 	db	224
  1344  00FF86  E0                 	db	224
  1345  00FF87  E0                 	db	224
  1346  00FF88  C0                 	db	192
  1347  00FF89  00                 	db	0
  1348  00FF8A  FF                 	db	255
  1349  00FF8B  FF                 	db	255
  1350  00FF8C  FF                 	db	255
  1351  00FF8D  FF                 	db	255
  1352  00FF8E  FF                 	db	255
  1353  00FF8F  FF                 	db	255
  1354  00FF90  80                 	db	128
  1355  00FF91  C0                 	db	192
  1356  00FF92  E0                 	db	224
  1357  00FF93  E0                 	db	224
  1358  00FF94  E0                 	db	224
  1359  00FF95  E0                 	db	224
  1360  00FF96  60                 	db	96
  1361  00FF97  20                 	db	32
  1362  00FF98  0F                 	db	15
  1363  00FF99  3F                 	db	63
  1364  00FF9A  7F                 	db	127
  1365  00FF9B  7F                 	db	127
  1366  00FF9C  FF                 	db	255
  1367  00FF9D  FC                 	db	252
  1368  00FF9E  F8                 	db	248
  1369  00FF9F  F8                 	db	248
  1370  00FFA0  F8                 	db	248
  1371  00FFA1  F8                 	db	248
  1372  00FFA2  FC                 	db	252
  1373  00FFA3  70                 	db	112
  1374  00FFA4  40                 	db	64
  1375  00FFA5  0E                 	db	14
  1376  00FFA6  3F                 	db	63
  1377  00FFA7  7F                 	db	127
  1378  00FFA8  FF                 	db	255
  1379  00FFA9  FF                 	db	255
  1380  00FFAA  FB                 	db	251
  1381  00FFAB  F1                 	db	241
  1382  00FFAC  FB                 	db	251
  1383  00FFAD  FF                 	db	255
  1384  00FFAE  FF                 	db	255
  1385  00FFAF  7F                 	db	127
  1386  00FFB0  3F                 	db	63
  1387  00FFB1  0E                 	db	14
  1388  00FFB2  00                 	db	0
  1389  00FFB3  FF                 	db	255
  1390  00FFB4  FF                 	db	255
  1391  00FFB5  FF                 	db	255
  1392  00FFB6  FF                 	db	255
  1393  00FFB7  FF                 	db	255
  1394  00FFB8  01                 	db	1
  1395  00FFB9  03                 	db	3
  1396  00FFBA  FF                 	db	255
  1397  00FFBB  FF                 	db	255
  1398  00FFBC  FF                 	db	255
  1399  00FFBD  FF                 	db	255
  1400  00FFBE  FF                 	db	255
  1401  00FFBF  01                 	db	1
  1402  00FFC0  03                 	db	3
  1403  00FFC1  FF                 	db	255
  1404  00FFC2  FF                 	db	255
  1405  00FFC3  FF                 	db	255
  1406  00FFC4  FF                 	db	255
  1407  00FFC5  00                 	db	0
  1408  00FFC6  FF                 	db	255
  1409  00FFC7  FF                 	db	255
  1410  00FFC8  FF                 	db	255
  1411  00FFC9  FF                 	db	255
  1412  00FFCA  FF                 	db	255
  1413  00FFCB  FF                 	db	255
  1414  00FFCC  F8                 	db	248
  1415  00FFCD  F8                 	db	248
  1416  00FFCE  F8                 	db	248
  1417  00FFCF  F8                 	db	248
  1418  00FFD0  F8                 	db	248
  1419  00FFD1  00                 	db	0
  1420  00FFD2  FF                 	db	255
  1421  00FFD3  FF                 	db	255
  1422  00FFD4  FF                 	db	255
  1423  00FFD5  FF                 	db	255
  1424  00FFD6  FF                 	db	255
  1425  00FFD7  00                 	db	0
  1426  00FFD8  FF                 	db	255
  1427  00FFD9  FF                 	db	255
  1428  00FFDA  FF                 	db	255
  1429  00FFDB  FF                 	db	255
  1430  00FFDC  FF                 	db	255
  1431  00FFDD  07                 	db	7
  1432  00FFDE  03                 	db	3
  1433  00FFDF  FF                 	db	255
  1434  00FFE0  FF                 	db	255
  1435  00FFE1  FF                 	db	255
  1436  00FFE2  FF                 	db	255
  1437  00FFE3  00                 	db	0
  1438  00FFE4  FF                 	db	255
  1439  00FFE5  FF                 	db	255
  1440  00FFE6  FF                 	db	255
  1441  00FFE7  FF                 	db	255
  1442  00FFE8  FF                 	db	255
  1443  00FFE9  FF                 	db	255
  1444  00FFEA  3F                 	db	63
  1445  00FFEB  7F                 	db	127
  1446  00FFEC  FF                 	db	255
  1447  00FFED  FF                 	db	255
  1448  00FFEE  F1                 	db	241
  1449  00FFEF  E0                 	db	224
  1450  00FFF0  C0                 	db	192
  1451  00FFF1  80                 	db	128
  1452  00FFF2                     __end_of_LogoClk:
  1453                           	opt callstack 0
  1454  00FFF2                     STR_5:
  1455  00FFF2  4F                 	db	79	;'O'
  1456  00FFF3  6B                 	db	107	;'k'
  1457  00FFF4  00                 	db	0
  1458  00FFF5                     STR_3:
  1459  00FFF5  42                 	db	66	;'B'
  1460  00FFF6  74                 	db	116	;'t'
  1461  00FFF7  00                 	db	0
  1462  00FFF8                     STR_1:
  1463  00FFF8  43                 	db	67	;'C'
  1464  00FFF9  78                 	db	120	;'x'
  1465  00FFFA  00                 	db	0
  1466  00FFFB                     STR_2:
  1467  00FFFB  53                 	db	83	;'S'
  1468  00FFFC  79                 	db	121	;'y'
  1469  00FFFD  00                 	db	0
  1470  0000                     
  1471                           ; #config settings
  1472  00FFFE  00                 	db	0	; dummy byte at the end
  1473  0000                     
  1474                           	psect	nvCOMRAM
  1475  000051                     __pnvCOMRAM:
  1476                           	opt callstack 0
  1477  000051                     _EUSART_ErrorHandler:
  1478                           	opt callstack 0
  1479  000051                     	ds	2
  1480  000053                     _EUSART_OverrunErrorHandler:
  1481                           	opt callstack 0
  1482  000053                     	ds	2
  1483  000055                     _EUSART_FramingErrorHandler:
  1484                           	opt callstack 0
  1485  000055                     	ds	2
  1486  000057                     _timer0ReloadVal:
  1487                           	opt callstack 0
  1488  000057                     	ds	2
  1489  0000                     _TRISEbits	set	3990
  1490  0000                     _LATEbits	set	3981
  1491  0000                     _PORTDbits	set	3971
  1492  0000                     _LATDbits	set	3980
  1493  0000                     _WPUB	set	3964
  1494  0000                     _ANSELH	set	3967
  1495  0000                     _ANSEL	set	3966
  1496  0000                     _TRISD	set	3989
  1497  0000                     _TRISC	set	3988
  1498  0000                     _TRISB	set	3987
  1499  0000                     _TRISA	set	3986
  1500  0000                     _TRISE	set	3990
  1501  0000                     _LATC	set	3979
  1502  0000                     _LATB	set	3978
  1503  0000                     _LATA	set	3977
  1504  0000                     _LATD	set	3980
  1505  0000                     _LATE	set	3981
  1506  0000                     _OSCTUNE	set	3995
  1507  0000                     _OSCCON	set	4051
  1508  0000                     _INTCON2bits	set	4081
  1509  0000                     _RCONbits	set	4048
  1510  0000                     _TXREG	set	4013
  1511  0000                     _RCREG	set	4014
  1512  0000                     _RCSTAbits	set	4011
  1513  0000                     _TXSTAbits	set	4012
  1514  0000                     _PIR1bits	set	3998
  1515  0000                     _SPBRGH	set	4016
  1516  0000                     _SPBRG	set	4015
  1517  0000                     _TXSTA	set	4012
  1518  0000                     _RCSTA	set	4011
  1519  0000                     _BAUDCON	set	4024
  1520  0000                     _T0CON	set	4053
  1521  0000                     _INTCONbits	set	4082
  1522  0000                     _TMR0L	set	4054
  1523  0000                     _TMR0H	set	4055
  1524  0000                     _T0CONbits	set	4053
  1525                           
  1526                           	psect	cinit
  1527  000AEC                     __pcinit:
  1528                           	opt callstack 0
  1529  000AEC                     start_initialization:
  1530                           	opt callstack 0
  1531  000AEC                     __initialization:
  1532                           	opt callstack 0
  1533                           
  1534                           ; Initialize objects allocated to BANK0 (44 bytes)
  1535                           ; load TBLPTR registers with __pidataBANK0
  1536  000AEC  0E90               	movlw	low __pidataBANK0
  1537  000AEE  6EF6               	movwf	tblptrl,c
  1538  000AF0  0E0E               	movlw	high __pidataBANK0
  1539  000AF2  6EF7               	movwf	tblptrh,c
  1540  000AF4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1541  000AF6  6EF8               	movwf	tblptru,c
  1542  000AF8  EE00  F0C9         	lfsr	0,__pdataBANK0
  1543  000AFC  EE10 F02C          	lfsr	1,44
  1544  000B00                     copy_data0:
  1545  000B00  0009               	tblrd		*+
  1546  000B02  CFF5 FFEE          	movff	tablat,postinc0
  1547  000B06  50E5               	movf	postdec1,w,c
  1548  000B08  50E1               	movf	fsr1l,w,c
  1549  000B0A  E1FA               	bnz	copy_data0
  1550                           
  1551                           ; Initialize objects allocated to COMRAM (30 bytes)
  1552                           ; load TBLPTR registers with __pidataCOMRAM
  1553  000B0C  0E2E               	movlw	low __pidataCOMRAM
  1554  000B0E  6EF6               	movwf	tblptrl,c
  1555  000B10  0E0F               	movlw	high __pidataCOMRAM
  1556  000B12  6EF7               	movwf	tblptrh,c
  1557  000B14  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1558  000B16  6EF8               	movwf	tblptru,c
  1559  000B18  EE00  F001         	lfsr	0,__pdataCOMRAM
  1560  000B1C  EE10 F01E          	lfsr	1,30
  1561  000B20                     copy_data1:
  1562  000B20  0009               	tblrd		*+
  1563  000B22  CFF5 FFEE          	movff	tablat,postinc0
  1564  000B26  50E5               	movf	postdec1,w,c
  1565  000B28  50E1               	movf	fsr1l,w,c
  1566  000B2A  E1FA               	bnz	copy_data1
  1567                           
  1568                           ; Clear objects allocated to BANK1 (200 bytes)
  1569  000B2C  EE01  F000         	lfsr	0,__pbssBANK1
  1570  000B30  0EC8               	movlw	200
  1571  000B32                     clear_0:
  1572  000B32  6AEE               	clrf	postinc0,c
  1573  000B34  06E8               	decf	wreg,f,c
  1574  000B36  E1FD               	bnz	clear_0
  1575                           
  1576                           ; Clear objects allocated to BANK0 (105 bytes)
  1577  000B38  EE00  F060         	lfsr	0,__pbssBANK0
  1578  000B3C  0E69               	movlw	105
  1579  000B3E                     clear_1:
  1580  000B3E  6AEE               	clrf	postinc0,c
  1581  000B40  06E8               	decf	wreg,f,c
  1582  000B42  E1FD               	bnz	clear_1
  1583                           
  1584                           ; Clear objects allocated to COMRAM (28 bytes)
  1585  000B44  EE00  F01F         	lfsr	0,__pbssCOMRAM
  1586  000B48  0E1C               	movlw	28
  1587  000B4A                     clear_2:
  1588  000B4A  6AEE               	clrf	postinc0,c
  1589  000B4C  06E8               	decf	wreg,f,c
  1590  000B4E  E1FD               	bnz	clear_2
  1591  000B50                     end_of_initialization:
  1592                           	opt callstack 0
  1593  000B50                     __end_of__initialization:
  1594                           	opt callstack 0
  1595  000B50  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1596  000B52  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1597  000B54  0100               	movlb	0
  1598  000B56  EFD8  F007         	goto	_main	;jump to C main() function
  1599                           
  1600                           	psect	bssCOMRAM
  1601  00001F                     __pbssCOMRAM:
  1602                           	opt callstack 0
  1603  00001F                     _ptr:
  1604                           	opt callstack 0
  1605  00001F                     	ds	2
  1606  000021                     _CounterB:
  1607                           	opt callstack 0
  1608  000021                     	ds	2
  1609  000023                     _CounterA:
  1610                           	opt callstack 0
  1611  000023                     	ds	2
  1612  000025                     _TMR0_InterruptHandler:
  1613                           	opt callstack 0
  1614  000025                     	ds	2
  1615  000027                     PrintLed@flag:
  1616                           	opt callstack 0
  1617  000027                     	ds	1
  1618  000028                     ProcessPeriodic@i:
  1619                           	opt callstack 0
  1620  000028                     	ds	1
  1621  000029                     ProcessPeriodic@RxCks:
  1622                           	opt callstack 0
  1623  000029                     	ds	1
  1624  00002A                     ProcessPeriodic@Mask:
  1625                           	opt callstack 0
  1626  00002A                     	ds	1
  1627  00002B                     ProcessPeriodic@Index:
  1628                           	opt callstack 0
  1629  00002B                     	ds	1
  1630  00002C                     _RunFlag:
  1631                           	opt callstack 0
  1632  00002C                     	ds	1
  1633  00002D                     _CxFlag:
  1634                           	opt callstack 0
  1635  00002D                     	ds	1
  1636  00002E                     _eusartRxLastError:
  1637                           	opt callstack 0
  1638  00002E                     	ds	1
  1639  00002F                     _StrRH:
  1640                           	opt callstack 0
  1641  00002F                     	ds	5
  1642  000034                     _StrTemp:
  1643                           	opt callstack 0
  1644  000034                     	ds	5
  1645  000039                     ProcessPeriodic@RxData:
  1646                           	opt callstack 0
  1647  000039                     	ds	1
  1648  00003A                     ProcessPeriodic@RS485Data:
  1649                           	opt callstack 0
  1650  00003A                     	ds	1
  1651                           
  1652                           	psect	dataCOMRAM
  1653  000001                     __pdataCOMRAM:
  1654                           	opt callstack 0
  1655  000001                     Ws0010Init@F3174:
  1656                           	opt callstack 0
  1657  000001                     	ds	14
  1658  00000F                     Ws0010Bufu16@F3238:
  1659                           	opt callstack 0
  1660  00000F                     	ds	12
  1661  00001B                     Ws0010Bufu8@F3223:
  1662                           	opt callstack 0
  1663  00001B                     	ds	4
  1664                           
  1665                           	psect	bssBANK0
  1666  000060                     __pbssBANK0:
  1667                           	opt callstack 0
  1668  000060                     ProcessPeriodic@StrCommand:
  1669                           	opt callstack 0
  1670  000060                     	ds	45
  1671  00008D                     _ProcessVector:
  1672                           	opt callstack 0
  1673  00008D                     	ds	36
  1674  0000B1                     _AplicationQueue:
  1675                           	opt callstack 0
  1676  0000B1                     	ds	24
  1677                           
  1678                           	psect	dataBANK0
  1679  0000C9                     __pdataBANK0:
  1680                           	opt callstack 0
  1681  0000C9                     Ws0010Bufu32@F3253:
  1682                           	opt callstack 0
  1683  0000C9                     	ds	44
  1684                           
  1685                           	psect	bssBANK1
  1686  000100                     __pbssBANK1:
  1687                           	opt callstack 0
  1688  000100                     _Ws0010_buffer:
  1689                           	opt callstack 0
  1690  000100                     	ds	200
  1691                           
  1692                           	psect	cstackCOMRAM
  1693  00003B                     __pcstackCOMRAM:
  1694                           	opt callstack 0
  1695  00003B                     ??_INTERRUPT_InterruptManagerHigh:
  1696  00003B                     
  1697                           ; 1 bytes @ 0x0
  1698  00003B                     	ds	2
  1699  00003D                     ??_DelayLongo:
  1700  00003D                     ??_TMR0_Initialize:
  1701  00003D                     ?_memcmp:
  1702                           	opt callstack 0
  1703  00003D                     ?_strlen:
  1704                           	opt callstack 0
  1705  00003D                     ?___awdiv:
  1706                           	opt callstack 0
  1707  00003D                     EUSART_Write@txData:
  1708                           	opt callstack 0
  1709  00003D                     Ws0010PutByte@fras:
  1710                           	opt callstack 0
  1711  00003D                     Ws0010BufGotoXY@posy:
  1712                           	opt callstack 0
  1713  00003D                     Ws0010Buf5x7Char@inv:
  1714                           	opt callstack 0
  1715  00003D                     Ws0010BufPatern@count:
  1716                           	opt callstack 0
  1717  00003D                     TMR0_SetInterruptHandler@InterruptHandler:
  1718                           	opt callstack 0
  1719  00003D                     EUSART_SetFramingErrorHandler@interruptHandler:
  1720                           	opt callstack 0
  1721  00003D                     EUSART_SetOverrunErrorHandler@interruptHandler:
  1722                           	opt callstack 0
  1723  00003D                     EUSART_SetErrorHandler@interruptHandler:
  1724                           	opt callstack 0
  1725  00003D                     fifo_init@p_fifo:
  1726                           	opt callstack 0
  1727  00003D                     fifo_queue@p_fifo:
  1728                           	opt callstack 0
  1729  00003D                     fifo_dequeue@p_fifo:
  1730                           	opt callstack 0
  1731  00003D                     GetsRS485@RxData:
  1732                           	opt callstack 0
  1733  00003D                     ___awdiv@dividend:
  1734                           	opt callstack 0
  1735  00003D                     memcmp@vl:
  1736                           	opt callstack 0
  1737  00003D                     memcpy@d1:
  1738                           	opt callstack 0
  1739  00003D                     strlen@s:
  1740                           	opt callstack 0
  1741  00003D                     Ws0010Init@init:
  1742                           	opt callstack 0
  1743                           
  1744                           ; 14 bytes @ 0x2
  1745  00003D                     	ds	1
  1746  00003E                     ??_Ws0010BufGotoXY:
  1747  00003E                     ??_Ws0010Buf5x7Char:
  1748  00003E                     ??_Ws0010PutByte:
  1749  00003E                     Ws0010BufPatern@dado:
  1750                           	opt callstack 0
  1751                           
  1752                           ; 1 bytes @ 0x3
  1753  00003E                     	ds	1
  1754  00003F                     fifo_init@size:
  1755                           	opt callstack 0
  1756  00003F                     fifo_queue@p_data:
  1757                           	opt callstack 0
  1758  00003F                     GetsRS485@Ret:
  1759                           	opt callstack 0
  1760  00003F                     DelayLongo@f:
  1761                           	opt callstack 0
  1762  00003F                     Ws0010BufPatern@i:
  1763                           	opt callstack 0
  1764  00003F                     fifo_dequeue@p_data:
  1765                           	opt callstack 0
  1766  00003F                     ___awdiv@divisor:
  1767                           	opt callstack 0
  1768  00003F                     memcmp@vr:
  1769                           	opt callstack 0
  1770  00003F                     memcpy@s1:
  1771                           	opt callstack 0
  1772  00003F                     strlen@a:
  1773                           	opt callstack 0
  1774                           
  1775                           ; 2 bytes @ 0x4
  1776  00003F                     	ds	1
  1777  000040                     ??_fifo_queue:
  1778  000040                     GetsRS485@RxStatus:
  1779                           	opt callstack 0
  1780  000040                     Ws0010PutByte@end:
  1781                           	opt callstack 0
  1782  000040                     Ws0010BufGotoXY@posx:
  1783                           	opt callstack 0
  1784                           
  1785                           ; 1 bytes @ 0x5
  1786  000040                     	ds	1
  1787  000041                     ??_fifo_dequeue:
  1788  000041                     Ws0010PutGotoXY@posy:
  1789                           	opt callstack 0
  1790  000041                     Ws0010Buf9x16Char@inv:
  1791                           	opt callstack 0
  1792  000041                     ___awdiv@counter:
  1793                           	opt callstack 0
  1794  000041                     PutsRS485@s:
  1795                           	opt callstack 0
  1796  000041                     memcmp@n:
  1797                           	opt callstack 0
  1798  000041                     memcpy@n:
  1799                           	opt callstack 0
  1800                           
  1801                           ; 2 bytes @ 0x6
  1802  000041                     	ds	1
  1803  000042                     ??_Ws0010Buf9x16Char:
  1804  000042                     Ws0010PutGotoXY@posx:
  1805                           	opt callstack 0
  1806  000042                     Ws0010Buf5x7Char@carac:
  1807                           	opt callstack 0
  1808  000042                     ___awdiv@sign:
  1809                           	opt callstack 0
  1810                           
  1811                           ; 1 bytes @ 0x7
  1812  000042                     	ds	1
  1813  000043                     ??_PutsRS485:
  1814  000043                     ??_memcmp:
  1815  000043                     Ws0010Buf5x7Char@j:
  1816                           	opt callstack 0
  1817  000043                     Ws0010Refresh@dado:
  1818                           	opt callstack 0
  1819  000043                     ___awdiv@quotient:
  1820                           	opt callstack 0
  1821  000043                     memcpy@d:
  1822                           	opt callstack 0
  1823                           
  1824                           ; 2 bytes @ 0x8
  1825  000043                     	ds	1
  1826  000044                     fifo_dequeue@result:
  1827                           	opt callstack 0
  1828  000044                     Ws0010Refresh@j:
  1829                           	opt callstack 0
  1830                           
  1831                           ; 1 bytes @ 0x9
  1832  000044                     	ds	1
  1833  000045                     PutsRS485@i:
  1834                           	opt callstack 0
  1835  000045                     Ws0010BufBitmap@Image:
  1836                           	opt callstack 0
  1837  000045                     memcmp@l:
  1838                           	opt callstack 0
  1839  000045                     memcpy@s:
  1840                           	opt callstack 0
  1841                           
  1842                           ; 2 bytes @ 0xA
  1843  000045                     	ds	1
  1844  000046                     Ws0010Buf9x16Char@carac:
  1845                           	opt callstack 0
  1846                           
  1847                           ; 1 bytes @ 0xB
  1848  000046                     	ds	1
  1849  000047                     Ws0010BufBitmap@Size:
  1850                           	opt callstack 0
  1851  000047                     memcpy@tmp:
  1852                           	opt callstack 0
  1853  000047                     Ws0010Buf9x16Char@j:
  1854                           	opt callstack 0
  1855  000047                     memcmp@r:
  1856                           	opt callstack 0
  1857                           
  1858                           ; 2 bytes @ 0xC
  1859  000047                     	ds	1
  1860  000048                     ??_Ws0010BufBitmap:
  1861  000048                     SetProcessFunc@Command:
  1862                           	opt callstack 0
  1863                           
  1864                           ; 2 bytes @ 0xD
  1865  000048                     	ds	1
  1866  000049                     PrintData@StrTemp:
  1867                           	opt callstack 0
  1868                           
  1869                           ; 2 bytes @ 0xE
  1870  000049                     	ds	1
  1871  00004A                     SetProcessFunc@Size:
  1872                           	opt callstack 0
  1873  00004A                     Ws0010BufBitmap@gap:
  1874                           	opt callstack 0
  1875                           
  1876                           ; 1 bytes @ 0xF
  1877  00004A                     	ds	1
  1878  00004B                     Ws0010Init@i:
  1879                           	opt callstack 0
  1880  00004B                     SetProcessFunc@FunctionHandler:
  1881                           	opt callstack 0
  1882  00004B                     PrintData@StrRH:
  1883                           	opt callstack 0
  1884  00004B                     Ws0010BufBitmap@j:
  1885                           	opt callstack 0
  1886                           
  1887                           ; 2 bytes @ 0x10
  1888  00004B                     	ds	2
  1889  00004D                     ??_ProcessPeriodic:
  1890  00004D                     SetProcessFunc@Index:
  1891                           	opt callstack 0
  1892                           
  1893                           ; 1 bytes @ 0x12
  1894  00004D                     	ds	1
  1895  00004E                     
  1896                           ; 1 bytes @ 0x13
  1897  00004E                     	ds	1
  1898  00004F                     ProcessPeriodic@pf:
  1899                           	opt callstack 0
  1900                           
  1901                           ; 2 bytes @ 0x14
  1902  00004F                     	ds	2
  1903  000051                     
  1904                           ; 1 bytes @ 0x16
  1905 ;;
  1906 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1907 ;;
  1908 ;; *************** function _main *****************
  1909 ;; Defined at:
  1910 ;;		line 55 in file "main.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;Total ram usage:        0 bytes
  1929 ;; Hardware stack levels required when called:    9
  1930 ;; This function calls:
  1931 ;;		_ProcessInit
  1932 ;;		_ProcessPeriodic
  1933 ;;		_SYSTEM_Initialize
  1934 ;; This function is called by:
  1935 ;;		Startup code after reset
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text0
  1940  000FB0                     __ptext0:
  1941                           	opt callstack 0
  1942  000FB0                     _main:
  1943                           	opt callstack 22
  1944                           
  1945                           ;main.c: 58:     SYSTEM_Initialize();
  1946                           
  1947                           ;incstack = 0
  1948  000FB0  ECC3  F007         	call	_SYSTEM_Initialize	;wreg free
  1949                           
  1950                           ;main.c: 65:     (INTCONbits.GIEH = 1);
  1951  000FB4  8EF2               	bsf	4082,7,c	;volatile
  1952                           
  1953                           ;main.c: 68:     (INTCONbits.GIEL = 1);
  1954  000FB6  8CF2               	bsf	4082,6,c	;volatile
  1955                           
  1956                           ;main.c: 84:     ProcessInit();
  1957  000FB8  EC53  F003         	call	_ProcessInit	;wreg free
  1958  000FBC                     l2868:
  1959                           
  1960                           ;main.c: 87:     {;main.c: 88:         ProcessPeriodic();
  1961  000FBC  EC16  F000         	call	_ProcessPeriodic	;wreg free
  1962                           
  1963                           ;main.c: 89:     }
  1964  000FC0  D7FD               	goto	l2868
  1965  000FC2                     __end_of_main:
  1966                           	opt callstack 0
  1967                           
  1968 ;; *************** function _SYSTEM_Initialize *****************
  1969 ;; Defined at:
  1970 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;Total ram usage:        0 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    6
  1991 ;; This function calls:
  1992 ;;		_EUSART_Initialize
  1993 ;;		_INTERRUPT_Initialize
  1994 ;;		_OSCILLATOR_Initialize
  1995 ;;		_PIN_MANAGER_Initialize
  1996 ;;		_TMR0_Initialize
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text1
  2003  000F86                     __ptext1:
  2004                           	opt callstack 0
  2005  000F86                     _SYSTEM_Initialize:
  2006                           	opt callstack 24
  2007                           
  2008                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2009                           
  2010                           ;incstack = 0
  2011  000F86  EC29  F008         	call	_INTERRUPT_Initialize	;wreg free
  2012                           
  2013                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2014  000F8A  ECE2  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  2015                           
  2016                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2017  000F8E  EC10  F008         	call	_OSCILLATOR_Initialize	;wreg free
  2018                           
  2019                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  2020  000F92  EC5E  F007         	call	_TMR0_Initialize	;wreg free
  2021                           
  2022                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2023  000F96  ECA6  F006         	call	_EUSART_Initialize	;wreg free
  2024  000F9A  0012               	return		;funcret
  2025  000F9C                     __end_of_SYSTEM_Initialize:
  2026                           	opt callstack 0
  2027                           
  2028 ;; *************** function _TMR0_Initialize *****************
  2029 ;; Defined at:
  2030 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;Total ram usage:        2 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    4
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_SYSTEM_Initialize
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text2
  2059  000EBC                     __ptext2:
  2060                           	opt callstack 0
  2061  000EBC                     _TMR0_Initialize:
  2062                           	opt callstack 25
  2063                           
  2064                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  2065                           
  2066                           ;incstack = 0
  2067  000EBC  9CD5               	bcf	4053,6,c	;volatile
  2068                           
  2069                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFD;
  2070  000EBE  0EFD               	movlw	253
  2071  000EC0  6ED7               	movwf	4055,c	;volatile
  2072                           
  2073                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x8E;
  2074  000EC2  0E8E               	movlw	142
  2075  000EC4  6ED6               	movwf	4054,c	;volatile
  2076                           
  2077                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  2078  000EC6  50D6               	movf	4054,w,c	;volatile
  2079  000EC8  CFD7 F03D          	movff	4055,??_TMR0_Initialize	;volatile
  2080  000ECC  6A3E               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  2081  000ECE  C03D  F03E         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  2082  000ED2  6A3D               	clrf	??_TMR0_Initialize,c
  2083  000ED4  103D               	iorwf	??_TMR0_Initialize,w,c
  2084  000ED6  6E57               	movwf	_timer0ReloadVal,c	;volatile
  2085  000ED8  503E               	movf	??_TMR0_Initialize+1,w,c
  2086  000EDA  6E58               	movwf	_timer0ReloadVal+1,c	;volatile
  2087                           
  2088                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  2089  000EDC  94F2               	bcf	4082,2,c	;volatile
  2090                           
  2091                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  2092  000EDE  8AF2               	bsf	4082,5,c	;volatile
  2093                           
  2094                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x93;
  2095  000EE0  0E93               	movlw	147
  2096  000EE2  6ED5               	movwf	4053,c	;volatile
  2097  000EE4  0012               	return		;funcret
  2098  000EE6                     __end_of_TMR0_Initialize:
  2099                           	opt callstack 0
  2100                           
  2101 ;; *************** function _PIN_MANAGER_Initialize *****************
  2102 ;; Defined at:
  2103 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    4
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_SYSTEM_Initialize
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text3
  2132  000DC4                     __ptext3:
  2133                           	opt callstack 0
  2134  000DC4                     _PIN_MANAGER_Initialize:
  2135                           	opt callstack 25
  2136                           
  2137                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2138                           
  2139                           ;incstack = 0
  2140  000DC4  0E00               	movlw	0
  2141  000DC6  6E8D               	movwf	3981,c	;volatile
  2142                           
  2143                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2144  000DC8  0E00               	movlw	0
  2145  000DCA  6E8C               	movwf	3980,c	;volatile
  2146                           
  2147                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2148  000DCC  0E00               	movlw	0
  2149  000DCE  6E89               	movwf	3977,c	;volatile
  2150                           
  2151                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2152  000DD0  0E00               	movlw	0
  2153  000DD2  6E8A               	movwf	3978,c	;volatile
  2154                           
  2155                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2156  000DD4  0E00               	movlw	0
  2157  000DD6  6E8B               	movwf	3979,c	;volatile
  2158                           
  2159                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x04;
  2160  000DD8  0E04               	movlw	4
  2161  000DDA  6E96               	movwf	3990,c	;volatile
  2162                           
  2163                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xF4;
  2164  000DDC  0EF4               	movlw	244
  2165  000DDE  6E92               	movwf	3986,c	;volatile
  2166                           
  2167                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFD;
  2168  000DE0  0EFD               	movlw	253
  2169  000DE2  6E93               	movwf	3987,c	;volatile
  2170                           
  2171                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBB;
  2172  000DE4  0EBB               	movlw	187
  2173  000DE6  6E94               	movwf	3988,c	;volatile
  2174                           
  2175                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x02;
  2176  000DE8  0E02               	movlw	2
  2177  000DEA  6E95               	movwf	3989,c	;volatile
  2178                           
  2179                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0x00;
  2180  000DEC  0E00               	movlw	0
  2181  000DEE  6E7E               	movwf	3966,c	;volatile
  2182                           
  2183                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x00;
  2184  000DF0  0E00               	movlw	0
  2185  000DF2  6E7F               	movwf	3967,c	;volatile
  2186                           
  2187                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  2188  000DF4  0E00               	movlw	0
  2189  000DF6  6E7C               	movwf	3964,c	;volatile
  2190                           
  2191                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  2192  000DF8  8EF1               	bsf	4081,7,c	;volatile
  2193  000DFA  0012               	return		;funcret
  2194  000DFC                     __end_of_PIN_MANAGER_Initialize:
  2195                           	opt callstack 0
  2196                           
  2197 ;; *************** function _OSCILLATOR_Initialize *****************
  2198 ;; Defined at:
  2199 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    4
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_SYSTEM_Initialize
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text4
  2228  001020                     __ptext4:
  2229                           	opt callstack 0
  2230  001020                     _OSCILLATOR_Initialize:
  2231                           	opt callstack 25
  2232                           
  2233                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x30;
  2234                           
  2235                           ;incstack = 0
  2236  001020  0E30               	movlw	48
  2237  001022  6ED3               	movwf	4051,c	;volatile
  2238                           
  2239                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x40;
  2240  001024  0E40               	movlw	64
  2241  001026  6E9B               	movwf	3995,c	;volatile
  2242  001028  0012               	return		;funcret
  2243  00102A                     __end_of_OSCILLATOR_Initialize:
  2244                           	opt callstack 0
  2245                           
  2246 ;; *************** function _INTERRUPT_Initialize *****************
  2247 ;; Defined at:
  2248 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		None
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;Total ram usage:        0 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    4
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_SYSTEM_Initialize
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text5
  2277  001052                     __ptext5:
  2278                           	opt callstack 0
  2279  001052                     _INTERRUPT_Initialize:
  2280                           	opt callstack 25
  2281                           
  2282                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  2283                           
  2284                           ;incstack = 0
  2285  001052  8ED0               	bsf	4048,7,c	;volatile
  2286                           
  2287                           ;mcc_generated_files/interrupt_manager.c: 60:     INTCON2bits.TMR0IP = 1;
  2288  001054  84F1               	bsf	4081,2,c	;volatile
  2289  001056  0012               	return		;funcret
  2290  001058                     __end_of_INTERRUPT_Initialize:
  2291                           	opt callstack 0
  2292                           
  2293 ;; *************** function _EUSART_Initialize *****************
  2294 ;; Defined at:
  2295 ;;		line 65 in file "mcc_generated_files/eusart.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;Total ram usage:        0 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    5
  2316 ;; This function calls:
  2317 ;;		_EUSART_SetErrorHandler
  2318 ;;		_EUSART_SetFramingErrorHandler
  2319 ;;		_EUSART_SetOverrunErrorHandler
  2320 ;; This function is called by:
  2321 ;;		_SYSTEM_Initialize
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text6
  2326  000D4C                     __ptext6:
  2327                           	opt callstack 0
  2328  000D4C                     _EUSART_Initialize:
  2329                           	opt callstack 24
  2330                           
  2331                           ;mcc_generated_files/eusart.c: 70:     BAUDCON = 0x08;
  2332                           
  2333                           ;incstack = 0
  2334  000D4C  0E08               	movlw	8
  2335  000D4E  6EB8               	movwf	4024,c	;volatile
  2336                           
  2337                           ;mcc_generated_files/eusart.c: 73:     RCSTA = 0x90;
  2338  000D50  0E90               	movlw	144
  2339  000D52  6EAB               	movwf	4011,c	;volatile
  2340                           
  2341                           ;mcc_generated_files/eusart.c: 76:     TXSTA = 0x24;
  2342  000D54  0E24               	movlw	36
  2343  000D56  6EAC               	movwf	4012,c	;volatile
  2344                           
  2345                           ;mcc_generated_files/eusart.c: 79:     SPBRG = 0x11;
  2346  000D58  0E11               	movlw	17
  2347  000D5A  6EAF               	movwf	4015,c	;volatile
  2348                           
  2349                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x04;
  2350  000D5C  0E04               	movlw	4
  2351  000D5E  6EB0               	movwf	4016,c	;volatile
  2352                           
  2353                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  2354  000D60  0E00               	movlw	0
  2355  000D62  6E3D               	movwf	EUSART_SetFramingErrorHandler@interruptHandler,c
  2356  000D64  0E00               	movlw	0
  2357  000D66  6E3E               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1,c
  2358  000D68  EC1A  F008         	call	_EUSART_SetFramingErrorHandler	;wreg free
  2359                           
  2360                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  2361  000D6C  0E00               	movlw	0
  2362  000D6E  6E3D               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler,c
  2363  000D70  0E00               	movlw	0
  2364  000D72  6E3E               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1,c
  2365  000D74  EC15  F008         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  2366                           
  2367                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  2368  000D78  0E00               	movlw	0
  2369  000D7A  6E3D               	movwf	EUSART_SetErrorHandler@interruptHandler,c
  2370  000D7C  0E00               	movlw	0
  2371  000D7E  6E3E               	movwf	EUSART_SetErrorHandler@interruptHandler+1,c
  2372  000D80  EC1F  F008         	call	_EUSART_SetErrorHandler	;wreg free
  2373                           
  2374                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  2375  000D84  0E00               	movlw	0
  2376  000D86  6E2E               	movwf	_eusartRxLastError,c	;volatile
  2377  000D88  0012               	return		;funcret
  2378  000D8A                     __end_of_EUSART_Initialize:
  2379                           	opt callstack 0
  2380                           
  2381 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2382 ;; Defined at:
  2383 ;;		line 169 in file "mcc_generated_files/eusart.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  2386 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;Total ram usage:        2 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    4
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_EUSART_Initialize
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	text7
  2413  00102A                     __ptext7:
  2414                           	opt callstack 0
  2415  00102A                     _EUSART_SetOverrunErrorHandler:
  2416                           	opt callstack 24
  2417                           
  2418                           ;mcc_generated_files/eusart.c: 170:     EUSART_OverrunErrorHandler = interruptHandler;
  2419                           
  2420                           ;incstack = 0
  2421  00102A  C03D  F053         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  2422  00102E  C03E  F054         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  2423  001032  0012               	return		;funcret
  2424  001034                     __end_of_EUSART_SetOverrunErrorHandler:
  2425                           	opt callstack 0
  2426                           
  2427 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2428 ;; Defined at:
  2429 ;;		line 165 in file "mcc_generated_files/eusart.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  2432 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;		None
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;Total ram usage:        2 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    4
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_EUSART_Initialize
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text8
  2459  001034                     __ptext8:
  2460                           	opt callstack 0
  2461  001034                     _EUSART_SetFramingErrorHandler:
  2462                           	opt callstack 24
  2463                           
  2464                           ;mcc_generated_files/eusart.c: 166:     EUSART_FramingErrorHandler = interruptHandler;
  2465                           
  2466                           ;incstack = 0
  2467  001034  C03D  F055         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  2468  001038  C03E  F056         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  2469  00103C  0012               	return		;funcret
  2470  00103E                     __end_of_EUSART_SetFramingErrorHandler:
  2471                           	opt callstack 0
  2472                           
  2473 ;; *************** function _EUSART_SetErrorHandler *****************
  2474 ;; Defined at:
  2475 ;;		line 173 in file "mcc_generated_files/eusart.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  2478 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;Total ram usage:        2 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    4
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_EUSART_Initialize
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text9
  2505  00103E                     __ptext9:
  2506                           	opt callstack 0
  2507  00103E                     _EUSART_SetErrorHandler:
  2508                           	opt callstack 24
  2509                           
  2510                           ;mcc_generated_files/eusart.c: 174:     EUSART_ErrorHandler = interruptHandler;
  2511                           
  2512                           ;incstack = 0
  2513  00103E  C03D  F051         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  2514  001042  C03E  F052         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  2515  001046  0012               	return		;funcret
  2516  001048                     __end_of_EUSART_SetErrorHandler:
  2517                           	opt callstack 0
  2518                           
  2519 ;; *************** function _ProcessPeriodic *****************
  2520 ;; Defined at:
  2521 ;;		line 155 in file "Application.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  pf              2   20[COMRAM] PTR unsigned char 
  2526 ;;		 -> ProcessPeriodic@StrCommand(45), 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;Total ram usage:        4 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    8
  2543 ;; This function calls:
  2544 ;;		_GetsRS485
  2545 ;;		_PrintData
  2546 ;;		_PrintLed
  2547 ;;		_SendBT
  2548 ;;		_SendCX
  2549 ;;		_SendSY
  2550 ;;		_fifo_dequeue
  2551 ;;		_fifo_queue
  2552 ;;		_memcmp
  2553 ;; This function is called by:
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text10
  2559  00002C                     __ptext10:
  2560                           	opt callstack 0
  2561  00002C                     _ProcessPeriodic:
  2562                           	opt callstack 22
  2563                           
  2564                           ;Application.c: 157:     static int8_t Index, Mask = 0;;Application.c: 158:     uint8_t 
      +                          *pf;;Application.c: 159:     static uint8_t StrCommand[9U * 5U];;Application.c: 160:    
      +                           static uint8_t RS485Data, RxData, RxCks, i;;Application.c: 162:     PrintLed();
  2565                           
  2566                           ;incstack = 0
  2567  00002C  ECAD  F005         	call	_PrintLed	;wreg free
  2568                           
  2569                           ;Application.c: 164:     if(PORTDbits.RD0 == 0)
  2570  000030  B083               	btfsc	3971,0,c	;volatile
  2571  000032  D100               	goto	u1640
  2572                           
  2573                           ;Application.c: 165:     {;Application.c: 166:         if(GetsRS485(&RxData) == 1)
  2574  000034  0E39               	movlw	low ProcessPeriodic@RxData
  2575  000036  6E3D               	movwf	GetsRS485@RxData,c
  2576  000038  0E00               	movlw	high ProcessPeriodic@RxData
  2577  00003A  6E3E               	movwf	GetsRS485@RxData+1,c
  2578  00003C  ECFE  F006         	call	_GetsRS485	;wreg free
  2579  000040  06E8               	decf	wreg,f,c
  2580  000042  A4D8               	btfss	status,2,c
  2581  000044  D009               	goto	l2746
  2582                           
  2583                           ;Application.c: 167:         {;Application.c: 168:             fifo_queue(&AplicationQue
      +                          ue, RxData);
  2584  000046  0EB1               	movlw	low _AplicationQueue
  2585  000048  6E3D               	movwf	fifo_queue@p_fifo,c
  2586  00004A  0E00               	movlw	high _AplicationQueue
  2587  00004C  6E3E               	movwf	fifo_queue@p_fifo+1,c
  2588  00004E  C039  F03F         	movff	ProcessPeriodic@RxData,fifo_queue@p_data
  2589  000052  EC65  F004         	call	_fifo_queue	;wreg free
  2590                           
  2591                           ;Application.c: 169:         }else
  2592  000056  D0EE               	goto	u1640
  2593  000058                     l2746:
  2594                           
  2595                           ;Application.c: 170:         {;Application.c: 171:            if(CxFlag == 1)
  2596  000058  042D               	decf	_CxFlag,w,c
  2597  00005A  A4D8               	btfss	status,2,c
  2598  00005C  D0EB               	goto	u1640
  2599                           
  2600                           ;Application.c: 172:            {;Application.c: 173:                CxFlag = 0;
  2601  00005E  0E00               	movlw	0
  2602  000060  6E2D               	movwf	_CxFlag,c
  2603                           
  2604                           ;Application.c: 174:                fifo_queue(&AplicationQueue, 'C');
  2605  000062  0EB1               	movlw	low _AplicationQueue
  2606  000064  6E3D               	movwf	fifo_queue@p_fifo,c
  2607  000066  0E00               	movlw	high _AplicationQueue
  2608  000068  6E3E               	movwf	fifo_queue@p_fifo+1,c
  2609  00006A  0E43               	movlw	67
  2610  00006C  6E3F               	movwf	fifo_queue@p_data,c
  2611  00006E  EC65  F004         	call	_fifo_queue	;wreg free
  2612                           
  2613                           ;Application.c: 175:                fifo_queue(&AplicationQueue, 'x');
  2614  000072  0EB1               	movlw	low _AplicationQueue
  2615  000074  6E3D               	movwf	fifo_queue@p_fifo,c
  2616  000076  0E00               	movlw	high _AplicationQueue
  2617  000078  6E3E               	movwf	fifo_queue@p_fifo+1,c
  2618  00007A  0E78               	movlw	120
  2619  00007C  6E3F               	movwf	fifo_queue@p_data,c
  2620  00007E  EC65  F004         	call	_fifo_queue	;wreg free
  2621                           
  2622                           ;Application.c: 180:     while(fifo_dequeue(&AplicationQueue, &RS485Data) == 1)
  2623                           
  2624                           ;Application.c: 178:     }
  2625  000082  D0D8               	goto	u1640
  2626  000084                     l338:
  2627                           
  2628                           ;Application.c: 181:     {;Application.c: 182:         StrCommand[0] = StrCommand[1];
  2629  000084  C061  F060         	movff	ProcessPeriodic@StrCommand+1,ProcessPeriodic@StrCommand
  2630                           
  2631                           ;Application.c: 183:         StrCommand[1] = StrCommand[2];
  2632  000088  C062  F061         	movff	ProcessPeriodic@StrCommand+2,ProcessPeriodic@StrCommand+1
  2633                           
  2634                           ;Application.c: 184:         StrCommand[2] = StrCommand[3];
  2635  00008C  C063  F062         	movff	ProcessPeriodic@StrCommand+3,ProcessPeriodic@StrCommand+2
  2636                           
  2637                           ;Application.c: 185:         StrCommand[3] = StrCommand[4];
  2638  000090  C064  F063         	movff	ProcessPeriodic@StrCommand+4,ProcessPeriodic@StrCommand+3
  2639                           
  2640                           ;Application.c: 186:         StrCommand[4] = StrCommand[5];
  2641  000094  C065  F064         	movff	ProcessPeriodic@StrCommand+5,ProcessPeriodic@StrCommand+4
  2642                           
  2643                           ;Application.c: 187:         StrCommand[5] = StrCommand[6];
  2644  000098  C066  F065         	movff	ProcessPeriodic@StrCommand+6,ProcessPeriodic@StrCommand+5
  2645                           
  2646                           ;Application.c: 188:         StrCommand[6] = StrCommand[7];
  2647  00009C  C067  F066         	movff	ProcessPeriodic@StrCommand+7,ProcessPeriodic@StrCommand+6
  2648                           
  2649                           ;Application.c: 189:         StrCommand[7] = StrCommand[8];
  2650  0000A0  C068  F067         	movff	ProcessPeriodic@StrCommand+8,ProcessPeriodic@StrCommand+7
  2651                           
  2652                           ;Application.c: 190:         StrCommand[8] = StrCommand[9];
  2653  0000A4  C069  F068         	movff	ProcessPeriodic@StrCommand+9,ProcessPeriodic@StrCommand+8
  2654                           
  2655                           ;Application.c: 191:         StrCommand[9] = RS485Data;
  2656  0000A8  C03A  F069         	movff	ProcessPeriodic@RS485Data,ProcessPeriodic@StrCommand+9
  2657                           
  2658                           ;Application.c: 194:         for(Index = 0; Index < 3U; Index++)
  2659  0000AC  0E00               	movlw	0
  2660  0000AE  6E2B               	movwf	ProcessPeriodic@Index,c
  2661  0000B0                     l2760:
  2662                           
  2663                           ;Application.c: 195:         {;Application.c: 196:             for(Mask = 0; Mask < 9U; 
      +                          Mask++)
  2664  0000B0  0E00               	movlw	0
  2665  0000B2  6E2A               	movwf	ProcessPeriodic@Mask,c
  2666  0000B4                     l2766:
  2667                           
  2668                           ;Application.c: 197:             {;Application.c: 198:                 pf = &StrCommand[
      +                          Mask];
  2669  0000B4  0E60               	movlw	low ProcessPeriodic@StrCommand
  2670  0000B6  242A               	addwf	ProcessPeriodic@Mask,w,c
  2671  0000B8  6E4F               	movwf	ProcessPeriodic@pf,c
  2672  0000BA  6A50               	clrf	ProcessPeriodic@pf+1,c
  2673  0000BC  0E00               	movlw	high ProcessPeriodic@StrCommand
  2674  0000BE  2250               	addwfc	ProcessPeriodic@pf+1,f,c
  2675                           
  2676                           ;Application.c: 200:                 if(memcmp(pf, ProcessVector[Index].Str485Command, P
      +                          rocessVector[Index].CommandSize) == 0)
  2677  0000C0  C04F  F03D         	movff	ProcessPeriodic@pf,memcmp@vl
  2678  0000C4  C050  F03E         	movff	ProcessPeriodic@pf+1,memcmp@vl+1
  2679  0000C8  502B               	movf	ProcessPeriodic@Index,w,c
  2680  0000CA  0D0C               	mullw	12
  2681  0000CC  0E8D               	movlw	low _ProcessVector
  2682  0000CE  24F3               	addwf	prodl,w,c
  2683  0000D0  6E3F               	movwf	memcmp@vr,c
  2684  0000D2  0E00               	movlw	high _ProcessVector
  2685  0000D4  20F4               	addwfc	prodh,w,c
  2686  0000D6  6E40               	movwf	memcmp@vr+1,c
  2687  0000D8  502B               	movf	ProcessPeriodic@Index,w,c
  2688  0000DA  0D0C               	mullw	12
  2689  0000DC  0E96               	movlw	low (_ProcessVector+9)
  2690  0000DE  24F3               	addwf	prodl,w,c
  2691  0000E0  6ED9               	movwf	fsr2l,c
  2692  0000E2  0E00               	movlw	high (_ProcessVector+9)
  2693  0000E4  20F4               	addwfc	prodh,w,c
  2694  0000E6  6EDA               	movwf	fsr2h,c
  2695  0000E8  50DF               	movf	indf2,w,c
  2696  0000EA  6E4D               	movwf	??_ProcessPeriodic& (0+255),c
  2697  0000EC  504D               	movf	??_ProcessPeriodic,w,c
  2698  0000EE  6E41               	movwf	memcmp@n,c
  2699  0000F0  6A42               	clrf	memcmp@n+1,c
  2700  0000F2  EC3A  F005         	call	_memcmp	;wreg free
  2701  0000F6  503D               	movf	?_memcmp,w,c
  2702  0000F8  103E               	iorwf	?_memcmp+1,w,c
  2703  0000FA  A4D8               	btfss	status,2,c
  2704  0000FC  D02C               	goto	l2776
  2705                           
  2706                           ;Application.c: 201:                 {;Application.c: 202:                     StrComman
      +                          d[0] = 0;
  2707  0000FE  0E00               	movlw	0
  2708  000100  0100               	movlb	0	; () banked
  2709  000102  6F60               	movwf	ProcessPeriodic@StrCommand& (0+255),b
  2710                           
  2711                           ;Application.c: 203:                     StrCommand[1] = 0;
  2712  000104  0E00               	movlw	0
  2713  000106  6F61               	movwf	(ProcessPeriodic@StrCommand+1)& (0+255),b
  2714                           
  2715                           ;Application.c: 204:                     StrCommand[2] = 0;
  2716  000108  0E00               	movlw	0
  2717  00010A  6F62               	movwf	(ProcessPeriodic@StrCommand+2)& (0+255),b
  2718                           
  2719                           ;Application.c: 205:                     StrCommand[3] = 0;
  2720  00010C  0E00               	movlw	0
  2721  00010E  6F63               	movwf	(ProcessPeriodic@StrCommand+3)& (0+255),b
  2722                           
  2723                           ;Application.c: 206:                     StrCommand[4] = 0;
  2724  000110  0E00               	movlw	0
  2725  000112  6F64               	movwf	(ProcessPeriodic@StrCommand+4)& (0+255),b
  2726                           
  2727                           ;Application.c: 207:                     StrCommand[5] = 0;
  2728  000114  0E00               	movlw	0
  2729  000116  6F65               	movwf	(ProcessPeriodic@StrCommand+5)& (0+255),b
  2730                           
  2731                           ;Application.c: 208:                     StrCommand[6] = 0;
  2732  000118  0E00               	movlw	0
  2733  00011A  6F66               	movwf	(ProcessPeriodic@StrCommand+6)& (0+255),b
  2734                           
  2735                           ;Application.c: 209:                     StrCommand[7] = 0;
  2736  00011C  0E00               	movlw	0
  2737  00011E  6F67               	movwf	(ProcessPeriodic@StrCommand+7)& (0+255),b
  2738                           
  2739                           ;Application.c: 210:                     StrCommand[8] = 0;
  2740  000120  0E00               	movlw	0
  2741  000122  6F68               	movwf	(ProcessPeriodic@StrCommand+8)& (0+255),b
  2742                           
  2743                           ;Application.c: 211:                     StrCommand[9] = 0;
  2744  000124  0E00               	movlw	0
  2745  000126  6F69               	movwf	(ProcessPeriodic@StrCommand+9)& (0+255),b
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;Application.c: 213:                     ProcessVector[Index].PtrFunctionHandler();
  2749  000128  502B               	movf	ProcessPeriodic@Index,w,c
  2750  00012A  0D0C               	mullw	12
  2751  00012C  0E97               	movlw	low (_ProcessVector+10)
  2752  00012E  24F3               	addwf	prodl,w,c
  2753  000130  6ED9               	movwf	fsr2l,c
  2754  000132  0E00               	movlw	high (_ProcessVector+10)
  2755  000134  20F4               	addwfc	prodh,w,c
  2756  000136  6EDA               	movwf	fsr2h,c
  2757  000138  CFDE F04D          	movff	postinc2,??_ProcessPeriodic
  2758  00013C  CFDD F04E          	movff	postdec2,??_ProcessPeriodic+1
  2759  000140  D801               	call	u1558
  2760  000142  D074               	goto	u1630
  2761  000144                     u1558:
  2762  000144  0005               	push	
  2763  000146  6EFA               	movwf	pclath,c
  2764  000148  504D               	movf	??_ProcessPeriodic,w,c
  2765  00014A  6EFD               	movwf	tosl,c
  2766  00014C  504E               	movf	??_ProcessPeriodic+1,w,c
  2767  00014E  6EFE               	movwf	tosh,c
  2768  000150  6AFF               	clrf	tosu,c
  2769  000152  50FA               	movf	pclath,w,c
  2770  000154  0012               	return		;indir
  2771  000156                     l2776:
  2772                           
  2773                           ;Application.c: 217:                 {;Application.c: 218:                     RxCks = 0
      +                          ;
  2774  000156  0E00               	movlw	0
  2775  000158  6E29               	movwf	ProcessPeriodic@RxCks,c
  2776                           
  2777                           ;Application.c: 220:                     if(((StrCommand[2] == '+') || (StrCommand[2] ==
      +                           '-')) && (StrCommand[5] == '.'))
  2778  00015A  0E2B               	movlw	43
  2779  00015C  0100               	movlb	0	; () banked
  2780  00015E  1962               	xorwf	(ProcessPeriodic@StrCommand+2)& (0+255),w,b
  2781  000160  B4D8               	btfsc	status,2,c
  2782  000162  D004               	goto	u1570
  2783                           
  2784                           ; BSR set to: 0
  2785  000164  0E2D               	movlw	45
  2786  000166  1962               	xorwf	(ProcessPeriodic@StrCommand+2)& (0+255),w,b
  2787  000168  A4D8               	btfss	status,2,c
  2788  00016A  D05C               	goto	l2844
  2789  00016C                     u1570:
  2790                           
  2791                           ; BSR set to: 0
  2792  00016C  0E2E               	movlw	46
  2793  00016E  1965               	xorwf	(ProcessPeriodic@StrCommand+5)& (0+255),w,b
  2794  000170  A4D8               	btfss	status,2,c
  2795  000172  D058               	goto	l2844
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;Application.c: 221:                     {;Application.c: 222:                         f
      +                          or(i = 0; i < 8; i++)
  2799  000174  0E00               	movlw	0
  2800  000176  6E28               	movwf	ProcessPeriodic@i,c
  2801  000178                     l2790:
  2802                           
  2803                           ;Application.c: 223:                         {;Application.c: 224:                      
      +                                 RxCks ^= StrCommand[2 + i];
  2804  000178  0E62               	movlw	low (ProcessPeriodic@StrCommand+2)
  2805  00017A  2428               	addwf	ProcessPeriodic@i,w,c
  2806  00017C  6ED9               	movwf	fsr2l,c
  2807  00017E  6ADA               	clrf	fsr2h,c
  2808  000180  0E00               	movlw	high (ProcessPeriodic@StrCommand+2)
  2809  000182  22DA               	addwfc	fsr2h,f,c
  2810  000184  50DF               	movf	indf2,w,c
  2811  000186  1A29               	xorwf	ProcessPeriodic@RxCks,f,c
  2812                           
  2813                           ;Application.c: 225:                         }
  2814  000188  2A28               	incf	ProcessPeriodic@i,f,c
  2815  00018A  0E07               	movlw	7
  2816  00018C  6428               	cpfsgt	ProcessPeriodic@i,c
  2817  00018E  D7F4               	goto	l2790
  2818                           
  2819                           ;Application.c: 226:                         if(RxCks == 0)
  2820  000190  5029               	movf	ProcessPeriodic@RxCks,w,c
  2821  000192  A4D8               	btfss	status,2,c
  2822  000194  D047               	goto	l2844
  2823                           
  2824                           ;Application.c: 227:                         {;Application.c: 228:                      
      +                                 for(i = 0; i < 5; i++)
  2825  000196  0E00               	movlw	0
  2826  000198  6E28               	movwf	ProcessPeriodic@i,c
  2827  00019A                     l2804:
  2828                           
  2829                           ;Application.c: 229:                             {;Application.c: 230:                  
      +                                         StrTemp[i] = StrCommand[2 + i];
  2830  00019A  0E62               	movlw	low (ProcessPeriodic@StrCommand+2)
  2831  00019C  2428               	addwf	ProcessPeriodic@i,w,c
  2832  00019E  6ED9               	movwf	fsr2l,c
  2833  0001A0  6ADA               	clrf	fsr2h,c
  2834  0001A2  0E00               	movlw	high (ProcessPeriodic@StrCommand+2)
  2835  0001A4  22DA               	addwfc	fsr2h,f,c
  2836  0001A6  0E34               	movlw	low _StrTemp
  2837  0001A8  2428               	addwf	ProcessPeriodic@i,w,c
  2838  0001AA  6EE1               	movwf	fsr1l,c
  2839  0001AC  6AE2               	clrf	fsr1h,c
  2840  0001AE  0E00               	movlw	high _StrTemp
  2841  0001B0  22E2               	addwfc	fsr1h,f,c
  2842  0001B2  CFDF FFE7          	movff	indf2,indf1
  2843                           
  2844                           ;Application.c: 231:                             }
  2845  0001B6  2A28               	incf	ProcessPeriodic@i,f,c
  2846  0001B8  0E04               	movlw	4
  2847  0001BA  6428               	cpfsgt	ProcessPeriodic@i,c
  2848  0001BC  D7EE               	goto	l2804
  2849                           
  2850                           ;Application.c: 232:                             for(i = 0; i < 2; i++)
  2851  0001BE  0E00               	movlw	0
  2852  0001C0  6E28               	movwf	ProcessPeriodic@i,c
  2853  0001C2                     l2816:
  2854                           
  2855                           ;Application.c: 233:                             {;Application.c: 234:                  
      +                                         StrRH[i] = StrCommand[7 + i];
  2856  0001C2  0E67               	movlw	low (ProcessPeriodic@StrCommand+7)
  2857  0001C4  2428               	addwf	ProcessPeriodic@i,w,c
  2858  0001C6  6ED9               	movwf	fsr2l,c
  2859  0001C8  6ADA               	clrf	fsr2h,c
  2860  0001CA  0E00               	movlw	high (ProcessPeriodic@StrCommand+7)
  2861  0001CC  22DA               	addwfc	fsr2h,f,c
  2862  0001CE  0E2F               	movlw	low _StrRH
  2863  0001D0  2428               	addwf	ProcessPeriodic@i,w,c
  2864  0001D2  6EE1               	movwf	fsr1l,c
  2865  0001D4  6AE2               	clrf	fsr1h,c
  2866  0001D6  0E00               	movlw	high _StrRH
  2867  0001D8  22E2               	addwfc	fsr1h,f,c
  2868  0001DA  CFDF FFE7          	movff	indf2,indf1
  2869                           
  2870                           ;Application.c: 235:                             }
  2871  0001DE  2A28               	incf	ProcessPeriodic@i,f,c
  2872  0001E0  0E01               	movlw	1
  2873  0001E2  6428               	cpfsgt	ProcessPeriodic@i,c
  2874  0001E4  D7EE               	goto	l2816
  2875                           
  2876                           ;Application.c: 236:                             PrintData((uint8_t*)StrTemp, (uint8_t*)
      +                          StrRH);
  2877  0001E6  0E34               	movlw	low _StrTemp
  2878  0001E8  6E49               	movwf	PrintData@StrTemp,c
  2879  0001EA  0E00               	movlw	high _StrTemp
  2880  0001EC  6E4A               	movwf	PrintData@StrTemp+1,c
  2881  0001EE  0E2F               	movlw	low _StrRH
  2882  0001F0  6E4B               	movwf	PrintData@StrRH,c
  2883  0001F2  0E00               	movlw	high _StrRH
  2884  0001F4  6E4C               	movwf	PrintData@StrRH+1,c
  2885  0001F6  EC28  F001         	call	_PrintData	;wreg free
  2886                           
  2887                           ;Application.c: 238:                             StrCommand[0] = 0;
  2888  0001FA  0E00               	movlw	0
  2889  0001FC  0100               	movlb	0	; () banked
  2890  0001FE  6F60               	movwf	ProcessPeriodic@StrCommand& (0+255),b
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;Application.c: 239:                             StrCommand[1] = 0;
  2894  000200  0E00               	movlw	0
  2895  000202  6F61               	movwf	(ProcessPeriodic@StrCommand+1)& (0+255),b
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;Application.c: 240:                             StrCommand[2] = 0;
  2899  000204  0E00               	movlw	0
  2900  000206  6F62               	movwf	(ProcessPeriodic@StrCommand+2)& (0+255),b
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;Application.c: 241:                             StrCommand[3] = 0;
  2904  000208  0E00               	movlw	0
  2905  00020A  6F63               	movwf	(ProcessPeriodic@StrCommand+3)& (0+255),b
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;Application.c: 242:                             StrCommand[4] = 0;
  2909  00020C  0E00               	movlw	0
  2910  00020E  6F64               	movwf	(ProcessPeriodic@StrCommand+4)& (0+255),b
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;Application.c: 243:                             StrCommand[5] = 0;
  2914  000210  0E00               	movlw	0
  2915  000212  6F65               	movwf	(ProcessPeriodic@StrCommand+5)& (0+255),b
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;Application.c: 244:                             StrCommand[6] = 0;
  2919  000214  0E00               	movlw	0
  2920  000216  6F66               	movwf	(ProcessPeriodic@StrCommand+6)& (0+255),b
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;Application.c: 245:                             StrCommand[7] = 0;
  2924  000218  0E00               	movlw	0
  2925  00021A  6F67               	movwf	(ProcessPeriodic@StrCommand+7)& (0+255),b
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;Application.c: 246:                             StrCommand[8] = 0;
  2929  00021C  0E00               	movlw	0
  2930  00021E  6F68               	movwf	(ProcessPeriodic@StrCommand+8)& (0+255),b
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;Application.c: 247:                             StrCommand[9] = 0;
  2934  000220  0E00               	movlw	0
  2935  000222  6F69               	movwf	(ProcessPeriodic@StrCommand+9)& (0+255),b
  2936  000224                     l2844:
  2937                           
  2938                           ;Application.c: 251:             }
  2939  000224  2A2A               	incf	ProcessPeriodic@Mask,f,c
  2940  000226  0E08               	movlw	8
  2941  000228  642A               	cpfsgt	ProcessPeriodic@Mask,c
  2942  00022A  D744               	goto	l2766
  2943  00022C                     u1630:
  2944                           
  2945                           ;Application.c: 252:         }
  2946  00022C  2A2B               	incf	ProcessPeriodic@Index,f,c
  2947  00022E  0E02               	movlw	2
  2948  000230  642B               	cpfsgt	ProcessPeriodic@Index,c
  2949  000232  D73E               	goto	l2760
  2950  000234                     u1640:
  2951                           
  2952                           ;Application.c: 180:     while(fifo_dequeue(&AplicationQueue, &RS485Data) == 1)
  2953  000234  0EB1               	movlw	low _AplicationQueue
  2954  000236  6E3D               	movwf	fifo_dequeue@p_fifo,c
  2955  000238  0E00               	movlw	high _AplicationQueue
  2956  00023A  6E3E               	movwf	fifo_dequeue@p_fifo+1,c
  2957  00023C  0E3A               	movlw	low ProcessPeriodic@RS485Data
  2958  00023E  6E3F               	movwf	fifo_dequeue@p_data,c
  2959  000240  0E00               	movlw	high ProcessPeriodic@RS485Data
  2960  000242  6E40               	movwf	fifo_dequeue@p_data+1,c
  2961  000244  ECEC  F002         	call	_fifo_dequeue	;wreg free
  2962  000248  06E8               	decf	wreg,f,c
  2963  00024A  A4D8               	btfss	status,2,c
  2964  00024C  0012               	return	
  2965  00024E  D71A               	goto	l338
  2966  000250                     __end_of_ProcessPeriodic:
  2967                           	opt callstack 0
  2968                           
  2969 ;; *************** function _memcmp *****************
  2970 ;; Defined at:
  2971 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memcmp.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  vl              2    2[COMRAM] PTR const void 
  2974 ;;		 -> ProcessPeriodic@StrCommand(45), 
  2975 ;;  vr              2    4[COMRAM] PTR const void 
  2976 ;;		 -> ProcessVector.Str485Command(9), ProcessVector(36), 
  2977 ;;  n               2    6[COMRAM] unsigned int 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  r               2   12[COMRAM] PTR const unsigned char 
  2980 ;;		 -> ProcessVector.Str485Command(9), ProcessVector(36), 
  2981 ;;  l               2   10[COMRAM] PTR const unsigned char 
  2982 ;;		 -> ProcessPeriodic@StrCommand(45), 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  2    2[COMRAM] int 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2992 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;Total ram usage:       12 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    4
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_ProcessPeriodic
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text11
  3007  000A74                     __ptext11:
  3008                           	opt callstack 0
  3009  000A74                     _memcmp:
  3010                           	opt callstack 25
  3011                           
  3012                           ;incstack = 0
  3013  000A74  C03D  F045         	movff	memcmp@vl,memcmp@l
  3014  000A78  C03E  F046         	movff	memcmp@vl+1,memcmp@l+1
  3015  000A7C  C03F  F047         	movff	memcmp@vr,memcmp@r
  3016  000A80  C040  F048         	movff	memcmp@vr+1,memcmp@r+1
  3017  000A84  D007               	goto	l2606
  3018  000A86                     l2604:
  3019  000A86  0641               	decf	memcmp@n,f,c
  3020  000A88  A0D8               	btfss	status,0,c
  3021  000A8A  0642               	decf	memcmp@n+1,f,c
  3022  000A8C  4A45               	infsnz	memcmp@l,f,c
  3023  000A8E  2A46               	incf	memcmp@l+1,f,c
  3024  000A90  4A47               	infsnz	memcmp@r,f,c
  3025  000A92  2A48               	incf	memcmp@r+1,f,c
  3026  000A94                     l2606:
  3027  000A94  5041               	movf	memcmp@n,w,c
  3028  000A96  1042               	iorwf	memcmp@n+1,w,c
  3029  000A98  B4D8               	btfsc	status,2,c
  3030  000A9A  D00C               	goto	u1450
  3031  000A9C  C047  FFD9         	movff	memcmp@r,fsr2l
  3032  000AA0  C048  FFDA         	movff	memcmp@r+1,fsr2h
  3033  000AA4  C045  FFE1         	movff	memcmp@l,fsr1l
  3034  000AA8  C046  FFE2         	movff	memcmp@l+1,fsr1h
  3035  000AAC  50DE               	movf	postinc2,w,c
  3036  000AAE  18E6               	xorwf	postinc1,w,c
  3037  000AB0  B4D8               	btfsc	status,2,c
  3038  000AB2  D7E9               	goto	l2604
  3039  000AB4                     u1450:
  3040  000AB4  5041               	movf	memcmp@n,w,c
  3041  000AB6  1042               	iorwf	memcmp@n+1,w,c
  3042  000AB8  A4D8               	btfss	status,2,c
  3043  000ABA  D005               	goto	l2614
  3044  000ABC  0E00               	movlw	0
  3045  000ABE  6E3E               	movwf	?_memcmp+1,c
  3046  000AC0  0E00               	movlw	0
  3047  000AC2  6E3D               	movwf	?_memcmp,c
  3048  000AC4  0012               	return	
  3049  000AC6                     l2614:
  3050  000AC6  C045  FFD9         	movff	memcmp@l,fsr2l
  3051  000ACA  C046  FFDA         	movff	memcmp@l+1,fsr2h
  3052  000ACE  50DF               	movf	indf2,w,c
  3053  000AD0  6E43               	movwf	??_memcmp& (0+255),c
  3054  000AD2  C047  FFD9         	movff	memcmp@r,fsr2l
  3055  000AD6  C048  FFDA         	movff	memcmp@r+1,fsr2h
  3056  000ADA  50DF               	movf	indf2,w,c
  3057  000ADC  6E44               	movwf	(??_memcmp+1)& (0+255),c
  3058  000ADE  5044               	movf	??_memcmp+1,w,c
  3059  000AE0  5C43               	subwf	??_memcmp,w,c
  3060  000AE2  6E3D               	movwf	?_memcmp,c
  3061  000AE4  6A3E               	clrf	?_memcmp+1,c
  3062  000AE6  A0D8               	btfss	status,0,c
  3063  000AE8  063E               	decf	?_memcmp+1,f,c
  3064  000AEA  0012               	return		;funcret
  3065  000AEC                     __end_of_memcmp:
  3066                           	opt callstack 0
  3067                           
  3068 ;; *************** function _fifo_queue *****************
  3069 ;; Defined at:
  3070 ;;		line 46 in file "Queue.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  p_fifo          2    2[COMRAM] PTR struct .
  3073 ;;		 -> AplicationQueue(24), 
  3074 ;;  p_data          1    4[COMRAM] unsigned char 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  result          1    0        unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      unsigned char 
  3079 ;; Registers used:
  3080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3086 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;Total ram usage:        7 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    4
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_ProcessPeriodic
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text12
  3101  0008CA                     __ptext12:
  3102                           	opt callstack 0
  3103  0008CA                     _fifo_queue:
  3104                           	opt callstack 25
  3105                           
  3106                           ;Queue.c: 50:     if (p_fifo->full == 0)
  3107                           
  3108                           ;incstack = 0
  3109  0008CA  EE20 F017          	lfsr	2,23
  3110  0008CE  503D               	movf	fifo_queue@p_fifo,w,c
  3111  0008D0  26D9               	addwf	fsr2l,f,c
  3112  0008D2  503E               	movf	fifo_queue@p_fifo+1,w,c
  3113  0008D4  22DA               	addwfc	fsr2h,f,c
  3114  0008D6  50DF               	movf	indf2,w,c
  3115  0008D8  A4D8               	btfss	status,2,c
  3116  0008DA  0012               	return	
  3117                           
  3118                           ;Queue.c: 51:     {;Queue.c: 52:         p_fifo->v_data[p_fifo->back] = p_data;
  3119  0008DC  EE20 F016          	lfsr	2,22
  3120  0008E0  503D               	movf	fifo_queue@p_fifo,w,c
  3121  0008E2  26D9               	addwf	fsr2l,f,c
  3122  0008E4  503E               	movf	fifo_queue@p_fifo+1,w,c
  3123  0008E6  22DA               	addwfc	fsr2h,f,c
  3124  0008E8  50DF               	movf	indf2,w,c
  3125  0008EA  6E40               	movwf	??_fifo_queue& (0+255),c
  3126  0008EC  5040               	movf	??_fifo_queue,w,c
  3127  0008EE  243D               	addwf	fifo_queue@p_fifo,w,c
  3128  0008F0  6E41               	movwf	(??_fifo_queue+1)& (0+255),c
  3129  0008F2  0E00               	movlw	0
  3130  0008F4  203E               	addwfc	fifo_queue@p_fifo+1,w,c
  3131  0008F6  6E42               	movwf	(??_fifo_queue+2)& (0+255),c
  3132  0008F8  0E01               	movlw	1
  3133  0008FA  2441               	addwf	??_fifo_queue+1,w,c
  3134  0008FC  6ED9               	movwf	fsr2l,c
  3135  0008FE  0E00               	movlw	0
  3136  000900  2042               	addwfc	??_fifo_queue+2,w,c
  3137  000902  6EDA               	movwf	fsr2h,c
  3138  000904  C03F  FFDF         	movff	fifo_queue@p_data,indf2
  3139                           
  3140                           ;Queue.c: 53:         p_fifo->back++;
  3141  000908  EE20 F016          	lfsr	2,22
  3142  00090C  503D               	movf	fifo_queue@p_fifo,w,c
  3143  00090E  26D9               	addwf	fsr2l,f,c
  3144  000910  503E               	movf	fifo_queue@p_fifo+1,w,c
  3145  000912  22DA               	addwfc	fsr2h,f,c
  3146  000914  2ADF               	incf	indf2,f,c
  3147                           
  3148                           ;Queue.c: 55:         if (p_fifo->back == p_fifo->size)
  3149  000916  C03D  FFD9         	movff	fifo_queue@p_fifo,fsr2l
  3150  00091A  C03E  FFDA         	movff	fifo_queue@p_fifo+1,fsr2h
  3151  00091E  EE10 F016          	lfsr	1,22
  3152  000922  503D               	movf	fifo_queue@p_fifo,w,c
  3153  000924  26E1               	addwf	fsr1l,f,c
  3154  000926  503E               	movf	fifo_queue@p_fifo+1,w,c
  3155  000928  22E2               	addwfc	fsr1h,f,c
  3156  00092A  50DE               	movf	postinc2,w,c
  3157  00092C  18E6               	xorwf	postinc1,w,c
  3158  00092E  A4D8               	btfss	status,2,c
  3159  000930  D008               	goto	l2594
  3160                           
  3161                           ;Queue.c: 56:         {;Queue.c: 57:             p_fifo->back = 0;
  3162  000932  EE20 F016          	lfsr	2,22
  3163  000936  503D               	movf	fifo_queue@p_fifo,w,c
  3164  000938  26D9               	addwf	fsr2l,f,c
  3165  00093A  503E               	movf	fifo_queue@p_fifo+1,w,c
  3166  00093C  22DA               	addwfc	fsr2h,f,c
  3167  00093E  0E00               	movlw	0
  3168  000940  6EDF               	movwf	indf2,c
  3169  000942                     l2594:
  3170                           
  3171                           ;Queue.c: 59:         if (p_fifo->back == p_fifo->front)
  3172  000942  EE20 F015          	lfsr	2,21
  3173  000946  503D               	movf	fifo_queue@p_fifo,w,c
  3174  000948  26D9               	addwf	fsr2l,f,c
  3175  00094A  503E               	movf	fifo_queue@p_fifo+1,w,c
  3176  00094C  22DA               	addwfc	fsr2h,f,c
  3177  00094E  EE10 F016          	lfsr	1,22
  3178  000952  503D               	movf	fifo_queue@p_fifo,w,c
  3179  000954  26E1               	addwf	fsr1l,f,c
  3180  000956  503E               	movf	fifo_queue@p_fifo+1,w,c
  3181  000958  22E2               	addwfc	fsr1h,f,c
  3182  00095A  50DE               	movf	postinc2,w,c
  3183  00095C  18E6               	xorwf	postinc1,w,c
  3184  00095E  A4D8               	btfss	status,2,c
  3185  000960  0012               	return	
  3186                           
  3187                           ;Queue.c: 60:         {;Queue.c: 61:             p_fifo->full = 1;
  3188  000962  EE20 F017          	lfsr	2,23
  3189  000966  503D               	movf	fifo_queue@p_fifo,w,c
  3190  000968  26D9               	addwf	fsr2l,f,c
  3191  00096A  503E               	movf	fifo_queue@p_fifo+1,w,c
  3192  00096C  22DA               	addwfc	fsr2h,f,c
  3193  00096E  0E01               	movlw	1
  3194  000970  6EDF               	movwf	indf2,c
  3195  000972  0012               	return		;funcret
  3196  000974                     __end_of_fifo_queue:
  3197                           	opt callstack 0
  3198                           
  3199 ;; *************** function _fifo_dequeue *****************
  3200 ;; Defined at:
  3201 ;;		line 77 in file "Queue.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  p_fifo          2    2[COMRAM] PTR struct .
  3204 ;;		 -> AplicationQueue(24), 
  3205 ;;  p_data          2    4[COMRAM] PTR unsigned char 
  3206 ;;		 -> ProcessPeriodic@RS485Data(1), 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  result          1    9[COMRAM] unsigned char 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      unsigned char 
  3211 ;; Registers used:
  3212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3218 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;Total ram usage:        8 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    4
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_ProcessPeriodic
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           	psect	text13
  3233  0005D8                     __ptext13:
  3234                           	opt callstack 0
  3235  0005D8                     _fifo_dequeue:
  3236                           	opt callstack 25
  3237                           
  3238                           ;Queue.c: 77: uint8_t fifo_dequeue(fifo_t* p_fifo, uint8_t* p_data);Queue.c: 78: {;Queue
      +                          .c: 79:     uint8_t result = 0;
  3239                           
  3240                           ;incstack = 0
  3241  0005D8  0E00               	movlw	0
  3242  0005DA  6E44               	movwf	fifo_dequeue@result,c
  3243                           
  3244                           ;Queue.c: 81:     if (!(p_fifo->back == p_fifo->front) && (p_fifo->full == 0))
  3245  0005DC  EE20 F015          	lfsr	2,21
  3246  0005E0  503D               	movf	fifo_dequeue@p_fifo,w,c
  3247  0005E2  26D9               	addwf	fsr2l,f,c
  3248  0005E4  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3249  0005E6  22DA               	addwfc	fsr2h,f,c
  3250  0005E8  EE10 F016          	lfsr	1,22
  3251  0005EC  503D               	movf	fifo_dequeue@p_fifo,w,c
  3252  0005EE  26E1               	addwf	fsr1l,f,c
  3253  0005F0  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3254  0005F2  22E2               	addwfc	fsr1h,f,c
  3255  0005F4  50DE               	movf	postinc2,w,c
  3256  0005F6  18E6               	xorwf	postinc1,w,c
  3257  0005F8  B4D8               	btfsc	status,2,c
  3258  0005FA  D053               	goto	l2690
  3259  0005FC  EE20 F017          	lfsr	2,23
  3260  000600  503D               	movf	fifo_dequeue@p_fifo,w,c
  3261  000602  26D9               	addwf	fsr2l,f,c
  3262  000604  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3263  000606  22DA               	addwfc	fsr2h,f,c
  3264  000608  50DF               	movf	indf2,w,c
  3265  00060A  A4D8               	btfss	status,2,c
  3266  00060C  D04A               	goto	l2690
  3267                           
  3268                           ;Queue.c: 82:     {;Queue.c: 83:         if (p_fifo->full == 1)
  3269  00060E  EE20 F017          	lfsr	2,23
  3270  000612  503D               	movf	fifo_dequeue@p_fifo,w,c
  3271  000614  26D9               	addwf	fsr2l,f,c
  3272  000616  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3273  000618  22DA               	addwfc	fsr2h,f,c
  3274  00061A  04DE               	decf	postinc2,w,c
  3275  00061C  A4D8               	btfss	status,2,c
  3276  00061E  D008               	goto	l2682
  3277                           
  3278                           ;Queue.c: 84:         {;Queue.c: 85:             p_fifo->full = 0;
  3279  000620  EE20 F017          	lfsr	2,23
  3280  000624  503D               	movf	fifo_dequeue@p_fifo,w,c
  3281  000626  26D9               	addwf	fsr2l,f,c
  3282  000628  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3283  00062A  22DA               	addwfc	fsr2h,f,c
  3284  00062C  0E00               	movlw	0
  3285  00062E  6EDF               	movwf	indf2,c
  3286  000630                     l2682:
  3287                           
  3288                           ;Queue.c: 87:         *p_data = p_fifo->v_data[p_fifo->front];
  3289  000630  EE20 F015          	lfsr	2,21
  3290  000634  503D               	movf	fifo_dequeue@p_fifo,w,c
  3291  000636  26D9               	addwf	fsr2l,f,c
  3292  000638  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3293  00063A  22DA               	addwfc	fsr2h,f,c
  3294  00063C  50DF               	movf	indf2,w,c
  3295  00063E  6E41               	movwf	??_fifo_dequeue& (0+255),c
  3296  000640  5041               	movf	??_fifo_dequeue,w,c
  3297  000642  243D               	addwf	fifo_dequeue@p_fifo,w,c
  3298  000644  6E42               	movwf	(??_fifo_dequeue+1)& (0+255),c
  3299  000646  0E00               	movlw	0
  3300  000648  203E               	addwfc	fifo_dequeue@p_fifo+1,w,c
  3301  00064A  6E43               	movwf	(??_fifo_dequeue+2)& (0+255),c
  3302  00064C  0E01               	movlw	1
  3303  00064E  2442               	addwf	??_fifo_dequeue+1,w,c
  3304  000650  6ED9               	movwf	fsr2l,c
  3305  000652  0E00               	movlw	0
  3306  000654  2043               	addwfc	??_fifo_dequeue+2,w,c
  3307  000656  6EDA               	movwf	fsr2h,c
  3308  000658  C03F  FFE1         	movff	fifo_dequeue@p_data,fsr1l
  3309  00065C  C040  FFE2         	movff	fifo_dequeue@p_data+1,fsr1h
  3310  000660  CFDF FFE7          	movff	indf2,indf1
  3311                           
  3312                           ;Queue.c: 88:         p_fifo->front++;
  3313  000664  EE20 F015          	lfsr	2,21
  3314  000668  503D               	movf	fifo_dequeue@p_fifo,w,c
  3315  00066A  26D9               	addwf	fsr2l,f,c
  3316  00066C  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3317  00066E  22DA               	addwfc	fsr2h,f,c
  3318  000670  2ADF               	incf	indf2,f,c
  3319                           
  3320                           ;Queue.c: 91:         if (p_fifo->front == (p_fifo->size))
  3321  000672  C03D  FFD9         	movff	fifo_dequeue@p_fifo,fsr2l
  3322  000676  C03E  FFDA         	movff	fifo_dequeue@p_fifo+1,fsr2h
  3323  00067A  EE10 F015          	lfsr	1,21
  3324  00067E  503D               	movf	fifo_dequeue@p_fifo,w,c
  3325  000680  26E1               	addwf	fsr1l,f,c
  3326  000682  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3327  000684  22E2               	addwfc	fsr1h,f,c
  3328  000686  50DE               	movf	postinc2,w,c
  3329  000688  18E6               	xorwf	postinc1,w,c
  3330  00068A  A4D8               	btfss	status,2,c
  3331  00068C  D008               	goto	l2688
  3332                           
  3333                           ;Queue.c: 92:         {;Queue.c: 93:             p_fifo->front = 0;
  3334  00068E  EE20 F015          	lfsr	2,21
  3335  000692  503D               	movf	fifo_dequeue@p_fifo,w,c
  3336  000694  26D9               	addwf	fsr2l,f,c
  3337  000696  503E               	movf	fifo_dequeue@p_fifo+1,w,c
  3338  000698  22DA               	addwfc	fsr2h,f,c
  3339  00069A  0E00               	movlw	0
  3340  00069C  6EDF               	movwf	indf2,c
  3341  00069E                     l2688:
  3342                           
  3343                           ;Queue.c: 95:         result = 1;
  3344  00069E  0E01               	movlw	1
  3345  0006A0  6E44               	movwf	fifo_dequeue@result,c
  3346  0006A2                     l2690:
  3347                           
  3348                           ;Queue.c: 97:     return (result);
  3349  0006A2  5044               	movf	fifo_dequeue@result,w,c
  3350  0006A4  0012               	return		;funcret
  3351  0006A6                     __end_of_fifo_dequeue:
  3352                           	opt callstack 0
  3353                           
  3354 ;; *************** function _SendBT *****************
  3355 ;; Defined at:
  3356 ;;		line 98 in file "Application.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    6
  3377 ;; This function calls:
  3378 ;;		_PutsRS485
  3379 ;; This function is called by:
  3380 ;;		_ProcessInit
  3381 ;;		_ProcessPeriodic
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text14
  3386  000FD2                     __ptext14:
  3387                           	opt callstack 0
  3388  000FD2                     _SendBT:
  3389                           	opt callstack 23
  3390                           
  3391                           ;Application.c: 101:     PutsRS485((char*)"Bt");
  3392                           
  3393                           ;incstack = 0
  3394  000FD2  0EF5               	movlw	low STR_3
  3395  000FD4  6E41               	movwf	PutsRS485@s,c
  3396  000FD6  0EFF               	movlw	high STR_3
  3397  000FD8  6E42               	movwf	PutsRS485@s+1,c
  3398  000FDA  EC0E  F006         	call	_PutsRS485	;wreg free
  3399  000FDE  0012               	return		;funcret
  3400  000FE0                     __end_of_SendBT:
  3401                           	opt callstack 0
  3402                           
  3403 ;; *************** function _SendCX *****************
  3404 ;; Defined at:
  3405 ;;		line 81 in file "Application.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;Total ram usage:        0 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    6
  3426 ;; This function calls:
  3427 ;;		_PutsRS485
  3428 ;; This function is called by:
  3429 ;;		_ProcessInit
  3430 ;;		_ProcessPeriodic
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text15
  3435  000FE0                     __ptext15:
  3436                           	opt callstack 0
  3437  000FE0                     _SendCX:
  3438                           	opt callstack 23
  3439                           
  3440                           ;Application.c: 83:     PutsRS485((char*)"Cx");
  3441                           
  3442                           ;incstack = 0
  3443  000FE0  0EF8               	movlw	low STR_1
  3444  000FE2  6E41               	movwf	PutsRS485@s,c
  3445  000FE4  0EFF               	movlw	high STR_1
  3446  000FE6  6E42               	movwf	PutsRS485@s+1,c
  3447  000FE8  EC0E  F006         	call	_PutsRS485	;wreg free
  3448  000FEC  0012               	return		;funcret
  3449  000FEE                     __end_of_SendCX:
  3450                           	opt callstack 0
  3451                           
  3452 ;; *************** function _SendSY *****************
  3453 ;; Defined at:
  3454 ;;		line 89 in file "Application.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;		None
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;Total ram usage:        0 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    6
  3475 ;; This function calls:
  3476 ;;		_PutsRS485
  3477 ;; This function is called by:
  3478 ;;		_ProcessInit
  3479 ;;		_ProcessPeriodic
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text16
  3484  000FEE                     __ptext16:
  3485                           	opt callstack 0
  3486  000FEE                     _SendSY:
  3487                           	opt callstack 23
  3488                           
  3489                           ;Application.c: 92:     PutsRS485((char*)"Sy");
  3490                           
  3491                           ;incstack = 0
  3492  000FEE  0EFB               	movlw	low STR_2
  3493  000FF0  6E41               	movwf	PutsRS485@s,c
  3494  000FF2  0EFF               	movlw	high STR_2
  3495  000FF4  6E42               	movwf	PutsRS485@s+1,c
  3496  000FF6  EC0E  F006         	call	_PutsRS485	;wreg free
  3497  000FFA  0012               	return		;funcret
  3498  000FFC                     __end_of_SendSY:
  3499                           	opt callstack 0
  3500                           
  3501 ;; *************** function _PutsRS485 *****************
  3502 ;; Defined at:
  3503 ;;		line 19 in file "Rs485.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  s               2    6[COMRAM] PTR unsigned char 
  3506 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  i               2   10[COMRAM] int 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      void 
  3511 ;; Registers used:
  3512 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;Total ram usage:        6 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    5
  3525 ;; This function calls:
  3526 ;;		_EUSART_Write
  3527 ;;		_EUSART_is_tx_done
  3528 ;;		_strlen
  3529 ;; This function is called by:
  3530 ;;		_SendCX
  3531 ;;		_SendSY
  3532 ;;		_SendBT
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text17
  3537  000C1C                     __ptext17:
  3538                           	opt callstack 0
  3539  000C1C                     _PutsRS485:
  3540                           	opt callstack 23
  3541                           
  3542                           ;incstack = 0
  3543                           ;Rs485.c: 19: void PutsRS485( char* s );Rs485.c: 20: {;Rs485.c: 21:     do { LATDbits.LA
      +                          TD0 = 1; } while(0);
  3544  000C1C  808C               	bsf	3980,0,c	;volatile
  3545                           
  3546                           ;Rs485.c: 23:     for( int i = 0; i < strlen(s); i++ )
  3547  000C1E  0E00               	movlw	0
  3548  000C20  6E46               	movwf	PutsRS485@i+1,c
  3549  000C22  0E00               	movlw	0
  3550  000C24  6E45               	movwf	PutsRS485@i,c
  3551  000C26  D011               	goto	l2280
  3552  000C28                     l2276:
  3553                           
  3554                           ;Rs485.c: 24:     {;Rs485.c: 25:         EUSART_Write(s[i]);
  3555  000C28  5045               	movf	PutsRS485@i,w,c
  3556  000C2A  2441               	addwf	PutsRS485@s,w,c
  3557  000C2C  6E43               	movwf	??_PutsRS485& (0+255),c
  3558  000C2E  5046               	movf	PutsRS485@i+1,w,c
  3559  000C30  2042               	addwfc	PutsRS485@s+1,w,c
  3560  000C32  6E44               	movwf	(??_PutsRS485+1)& (0+255),c
  3561  000C34  C043  FFF6         	movff	??_PutsRS485,tblptrl
  3562  000C38  C044  FFF7         	movff	??_PutsRS485+1,tblptrh
  3563  000C3C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3564  000C3C  6AF8               	clrf	tblptru,c
  3565  000C3E                     	endif
  3566  000C3E                     	if	0	;tblptru may be non-zero
  3567  000C3E                     	endif
  3568  000C3E  0008               	tblrd		*
  3569  000C40  50F5               	movf	tablat,w,c
  3570  000C42  EC04  F008         	call	_EUSART_Write
  3571                           
  3572                           ;Rs485.c: 26:     }
  3573  000C46  4A45               	infsnz	PutsRS485@i,f,c
  3574  000C48  2A46               	incf	PutsRS485@i+1,f,c
  3575  000C4A                     l2280:
  3576  000C4A  C041  F03D         	movff	PutsRS485@s,strlen@s
  3577  000C4E  C042  F03E         	movff	PutsRS485@s+1,strlen@s+1
  3578  000C52  EC30  F007         	call	_strlen	;wreg free
  3579  000C56  503D               	movf	?_strlen,w,c
  3580  000C58  5C45               	subwf	PutsRS485@i,w,c
  3581  000C5A  503E               	movf	?_strlen+1,w,c
  3582  000C5C  5846               	subwfb	PutsRS485@i+1,w,c
  3583  000C5E  A0D8               	btfss	status,0,c
  3584  000C60  D7E3               	goto	l2276
  3585  000C62                     u1080:
  3586                           
  3587                           ;Rs485.c: 28:     while(!EUSART_is_tx_done())
  3588  000C62  ECFE  F007         	call	_EUSART_is_tx_done	;wreg free
  3589  000C66  0900               	iorlw	0
  3590  000C68  B4D8               	btfsc	status,2,c
  3591  000C6A  D7FB               	goto	u1080
  3592                           
  3593                           ;Rs485.c: 33:     do { LATDbits.LATD0 = 0; } while(0);
  3594  000C6C  908C               	bcf	3980,0,c	;volatile
  3595  000C6E  0012               	return		;funcret
  3596  000C70                     __end_of_PutsRS485:
  3597                           	opt callstack 0
  3598                           
  3599 ;; *************** function _strlen *****************
  3600 ;; Defined at:
  3601 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  s               2    2[COMRAM] PTR const unsigned char 
  3604 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  a               2    4[COMRAM] PTR const unsigned char 
  3607 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  2    2[COMRAM] unsigned int 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;Total ram usage:        4 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:    4
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_PutsRS485
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text18
  3632  000E60                     __ptext18:
  3633                           	opt callstack 0
  3634  000E60                     _strlen:
  3635                           	opt callstack 23
  3636                           
  3637                           ;incstack = 0
  3638  000E60  C03D  F03F         	movff	strlen@s,strlen@a
  3639  000E64  C03E  F040         	movff	strlen@s+1,strlen@a+1
  3640  000E68  D002               	goto	l2242
  3641  000E6A                     l2240:
  3642  000E6A  4A3D               	infsnz	strlen@s,f,c
  3643  000E6C  2A3E               	incf	strlen@s+1,f,c
  3644  000E6E                     l2242:
  3645  000E6E  C03D  FFF6         	movff	strlen@s,tblptrl
  3646  000E72  C03E  FFF7         	movff	strlen@s+1,tblptrh
  3647  000E76                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3648  000E76  6AF8               	clrf	tblptru,c
  3649  000E78                     	endif
  3650  000E78                     	if	0	;tblptru may be non-zero
  3651  000E78                     	endif
  3652  000E78  0008               	tblrd		*
  3653  000E7A  50F5               	movf	tablat,w,c
  3654  000E7C  0900               	iorlw	0
  3655  000E7E  A4D8               	btfss	status,2,c
  3656  000E80  D7F4               	goto	l2240
  3657  000E82  503F               	movf	strlen@a,w,c
  3658  000E84  5C3D               	subwf	strlen@s,w,c
  3659  000E86  6E3D               	movwf	?_strlen,c
  3660  000E88  5040               	movf	strlen@a+1,w,c
  3661  000E8A  583E               	subwfb	strlen@s+1,w,c
  3662  000E8C  6E3E               	movwf	?_strlen+1,c
  3663  000E8E  0012               	return		;funcret
  3664  000E90                     __end_of_strlen:
  3665                           	opt callstack 0
  3666                           
  3667 ;; *************** function _EUSART_is_tx_done *****************
  3668 ;; Defined at:
  3669 ;;		line 103 in file "mcc_generated_files/eusart.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      _Bool 
  3676 ;; Registers used:
  3677 ;;		wreg
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;Total ram usage:        0 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    4
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_PutsRS485
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text19
  3698  000FFC                     __ptext19:
  3699                           	opt callstack 0
  3700  000FFC                     _EUSART_is_tx_done:
  3701                           	opt callstack 23
  3702                           
  3703                           ;mcc_generated_files/eusart.c: 105:     return TXSTAbits.TRMT;
  3704                           
  3705                           ;incstack = 0
  3706  000FFC  A2AC               	btfss	4012,1,c	;volatile
  3707  000FFE  D002               	goto	u1020
  3708  001000  0E01               	movlw	1
  3709  001002  0012               	return	
  3710  001004                     u1020:
  3711  001004  0E00               	movlw	0
  3712  001006  0012               	return		;funcret
  3713  001008                     __end_of_EUSART_is_tx_done:
  3714                           	opt callstack 0
  3715                           
  3716 ;; *************** function _EUSART_Write *****************
  3717 ;; Defined at:
  3718 ;;		line 131 in file "mcc_generated_files/eusart.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  txData          1    wreg     unsigned char 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  txData          1    2[COMRAM] unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;Total ram usage:        1 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    4
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_PutsRS485
  3743 ;;		_putch
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text20
  3748  001008                     __ptext20:
  3749                           	opt callstack 0
  3750  001008                     _EUSART_Write:
  3751                           	opt callstack 23
  3752                           
  3753                           ;incstack = 0
  3754                           ;EUSART_Write@txData stored from wreg
  3755  001008  6E3D               	movwf	EUSART_Write@txData,c
  3756  00100A                     
  3757                           ;mcc_generated_files/eusart.c: 133:     while(0 == PIR1bits.TX1IF)
  3758                           
  3759                           ;mcc_generated_files/eusart.c: 134:     {;mcc_generated_files/eusart.c: 135:     }
  3760  00100A  A89E               	btfss	3998,4,c	;volatile
  3761  00100C  D7FE               	goto	l2230
  3762                           
  3763                           ;mcc_generated_files/eusart.c: 137:     TXREG = txData;
  3764  00100E  C03D  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  3765  001012  0012               	return		;funcret
  3766  001014                     __end_of_EUSART_Write:
  3767                           	opt callstack 0
  3768                           
  3769 ;; *************** function _PrintLed *****************
  3770 ;; Defined at:
  3771 ;;		line 256 in file "Application.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;		None
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;Total ram usage:        0 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:    7
  3792 ;; This function calls:
  3793 ;;		_Ws0010BufGotoXY
  3794 ;;		_Ws0010BufPatern
  3795 ;;		_Ws0010Refresh
  3796 ;; This function is called by:
  3797 ;;		_ProcessPeriodic
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text21
  3802  000B5A                     __ptext21:
  3803                           	opt callstack 0
  3804  000B5A                     _PrintLed:
  3805                           	opt callstack 22
  3806                           
  3807                           ;Application.c: 258:     static uint8_t flag;;Application.c: 259:     if(RunFlag == 1)
  3808                           
  3809                           ;incstack = 0
  3810  000B5A  042C               	decf	_RunFlag,w,c
  3811  000B5C  A4D8               	btfss	status,2,c
  3812  000B5E  0012               	return	
  3813                           
  3814                           ;Application.c: 260:     {;Application.c: 261:         RunFlag = 0;
  3815  000B60  0E00               	movlw	0
  3816  000B62  6E2C               	movwf	_RunFlag,c
  3817                           
  3818                           ;Application.c: 262:          Ws0010BufGotoXY(1, 1);
  3819  000B64  0E01               	movlw	1
  3820  000B66  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  3821  000B68  0E01               	movlw	1
  3822  000B6A  EC73  F007         	call	_Ws0010BufGotoXY
  3823                           
  3824                           ;Application.c: 263:         if(flag == 1)
  3825  000B6E  0427               	decf	PrintLed@flag,w,c
  3826  000B70  A4D8               	btfss	status,2,c
  3827  000B72  D010               	goto	l2564
  3828                           
  3829                           ;Application.c: 264:         {;Application.c: 266:             Ws0010BufPatern(0x06, 1);
  3830  000B74  0E01               	movlw	1
  3831  000B76  6E3D               	movwf	Ws0010BufPatern@count,c
  3832  000B78  0E06               	movlw	6
  3833  000B7A  EC17  F007         	call	_Ws0010BufPatern
  3834                           
  3835                           ;Application.c: 267:             Ws0010BufPatern(0x0F, 2);
  3836  000B7E  0E02               	movlw	2
  3837  000B80  6E3D               	movwf	Ws0010BufPatern@count,c
  3838  000B82  0E0F               	movlw	15
  3839  000B84  EC17  F007         	call	_Ws0010BufPatern
  3840                           
  3841                           ;Application.c: 268:             Ws0010BufPatern(0x06, 1);
  3842  000B88  0E01               	movlw	1
  3843  000B8A  6E3D               	movwf	Ws0010BufPatern@count,c
  3844  000B8C  0E06               	movlw	6
  3845  000B8E  EC17  F007         	call	_Ws0010BufPatern
  3846                           
  3847                           ;Application.c: 270:         }
  3848  000B92  D00F               	goto	l363
  3849  000B94                     l2564:
  3850                           
  3851                           ;Application.c: 272:         {;Application.c: 275:             Ws0010BufPatern(0x06, 1);
  3852  000B94  0E01               	movlw	1
  3853  000B96  6E3D               	movwf	Ws0010BufPatern@count,c
  3854  000B98  0E06               	movlw	6
  3855  000B9A  EC17  F007         	call	_Ws0010BufPatern
  3856                           
  3857                           ;Application.c: 276:             Ws0010BufPatern(0x09, 2);
  3858  000B9E  0E02               	movlw	2
  3859  000BA0  6E3D               	movwf	Ws0010BufPatern@count,c
  3860  000BA2  0E09               	movlw	9
  3861  000BA4  EC17  F007         	call	_Ws0010BufPatern
  3862                           
  3863                           ;Application.c: 277:             Ws0010BufPatern(0x06, 1);
  3864  000BA8  0E01               	movlw	1
  3865  000BAA  6E3D               	movwf	Ws0010BufPatern@count,c
  3866  000BAC  0E06               	movlw	6
  3867  000BAE  EC17  F007         	call	_Ws0010BufPatern
  3868  000BB2                     l363:
  3869                           
  3870                           ;Application.c: 279:         Ws0010Refresh();
  3871  000BB2  EC85  F006         	call	_Ws0010Refresh	;wreg free
  3872                           
  3873                           ;Application.c: 280:         flag = ! flag;
  3874  000BB6  5027               	movf	PrintLed@flag,w,c
  3875  000BB8  A4D8               	btfss	status,2,c
  3876  000BBA  D002               	goto	u1370
  3877  000BBC  0E01               	movlw	1
  3878  000BBE  D001               	goto	u1380
  3879  000BC0                     u1370:
  3880  000BC0  0E00               	movlw	0
  3881  000BC2                     u1380:
  3882  000BC2  6E27               	movwf	PrintLed@flag,c
  3883  000BC4  0012               	return		;funcret
  3884  000BC6                     __end_of_PrintLed:
  3885                           	opt callstack 0
  3886                           
  3887 ;; *************** function _PrintData *****************
  3888 ;; Defined at:
  3889 ;;		line 284 in file "Application.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  StrTemp         2   14[COMRAM] PTR unsigned char 
  3892 ;;		 -> StrTemp(5), 
  3893 ;;  StrRH           2   16[COMRAM] PTR unsigned char 
  3894 ;;		 -> StrRH(5), 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;Total ram usage:        4 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; Hardware stack levels required when called:    7
  3913 ;; This function calls:
  3914 ;;		_Ws0010Buf5x7Char
  3915 ;;		_Ws0010Buf9x16Char
  3916 ;;		_Ws0010BufGotoXY
  3917 ;;		_Ws0010BufPatern
  3918 ;;		_Ws0010PutGotoXY
  3919 ;;		_Ws0010Refresh
  3920 ;; This function is called by:
  3921 ;;		_ProcessPeriodic
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text22
  3926  000250                     __ptext22:
  3927                           	opt callstack 0
  3928  000250                     _PrintData:
  3929                           	opt callstack 22
  3930                           
  3931                           ;Application.c: 284: void PrintData(uint8_t* StrTemp, uint8_t* StrRH);Application.c: 285
      +                          : {;Application.c: 286:     Ws0010PutGotoXY(1, 1);
  3932                           
  3933                           ;incstack = 0
  3934  000250  0E01               	movlw	1
  3935  000252  6E41               	movwf	Ws0010PutGotoXY@posy,c
  3936  000254  0E01               	movlw	1
  3937  000256  ECB5  F007         	call	_Ws0010PutGotoXY
  3938                           
  3939                           ;Application.c: 287:     Ws0010BufGotoXY(1, 1);
  3940  00025A  0E01               	movlw	1
  3941  00025C  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  3942  00025E  0E01               	movlw	1
  3943  000260  EC73  F007         	call	_Ws0010BufGotoXY
  3944                           
  3945                           ;Application.c: 288:     Ws0010BufPatern(0x00, 200);
  3946  000264  0EC8               	movlw	200
  3947  000266  6E3D               	movwf	Ws0010BufPatern@count,c
  3948  000268  0E00               	movlw	0
  3949  00026A  EC17  F007         	call	_Ws0010BufPatern
  3950                           
  3951                           ;Application.c: 289:     Ws0010PutGotoXY(1, 1);
  3952  00026E  0E01               	movlw	1
  3953  000270  6E41               	movwf	Ws0010PutGotoXY@posy,c
  3954  000272  0E01               	movlw	1
  3955  000274  ECB5  F007         	call	_Ws0010PutGotoXY
  3956                           
  3957                           ;Application.c: 290:     Ws0010BufGotoXY(1, 1);
  3958  000278  0E01               	movlw	1
  3959  00027A  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  3960  00027C  0E01               	movlw	1
  3961  00027E  EC73  F007         	call	_Ws0010BufGotoXY
  3962                           
  3963                           ;Application.c: 291:     Ws0010BufPatern(0x0F, 1);
  3964  000282  0E01               	movlw	1
  3965  000284  6E3D               	movwf	Ws0010BufPatern@count,c
  3966  000286  0E0F               	movlw	15
  3967  000288  EC17  F007         	call	_Ws0010BufPatern
  3968                           
  3969                           ;Application.c: 292:     Ws0010BufPatern(0x09, 2);
  3970  00028C  0E02               	movlw	2
  3971  00028E  6E3D               	movwf	Ws0010BufPatern@count,c
  3972  000290  0E09               	movlw	9
  3973  000292  EC17  F007         	call	_Ws0010BufPatern
  3974                           
  3975                           ;Application.c: 293:     Ws0010BufPatern(0x0F, 1);
  3976  000296  0E01               	movlw	1
  3977  000298  6E3D               	movwf	Ws0010BufPatern@count,c
  3978  00029A  0E0F               	movlw	15
  3979  00029C  EC17  F007         	call	_Ws0010BufPatern
  3980                           
  3981                           ;Application.c: 294:     Ws0010BufGotoXY(1, 2);
  3982  0002A0  0E02               	movlw	2
  3983  0002A2  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  3984  0002A4  0E01               	movlw	1
  3985  0002A6  EC73  F007         	call	_Ws0010BufGotoXY
  3986                           
  3987                           ;Application.c: 295:     Ws0010Buf5x7Char((uint8_t)StrTemp[0], 0);
  3988  0002AA  0E00               	movlw	0
  3989  0002AC  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  3990  0002AE  C049  FFD9         	movff	PrintData@StrTemp,fsr2l
  3991  0002B2  C04A  FFDA         	movff	PrintData@StrTemp+1,fsr2h
  3992  0002B6  50DF               	movf	indf2,w,c
  3993  0002B8  EC7F  F002         	call	_Ws0010Buf5x7Char
  3994                           
  3995                           ;Application.c: 296:     Ws0010BufGotoXY(8, 1);
  3996  0002BC  0E01               	movlw	1
  3997  0002BE  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  3998  0002C0  0E08               	movlw	8
  3999  0002C2  EC73  F007         	call	_Ws0010BufGotoXY
  4000                           
  4001                           ;Application.c: 297:     Ws0010Buf9x16Char(StrTemp[1], 0);
  4002  0002C6  0E00               	movlw	0
  4003  0002C8  6E41               	movwf	Ws0010Buf9x16Char@inv,c
  4004  0002CA  EE20 F001          	lfsr	2,1
  4005  0002CE  5049               	movf	PrintData@StrTemp,w,c
  4006  0002D0  26D9               	addwf	fsr2l,f,c
  4007  0002D2  504A               	movf	PrintData@StrTemp+1,w,c
  4008  0002D4  22DA               	addwfc	fsr2h,f,c
  4009  0002D6  50DF               	movf	indf2,w,c
  4010  0002D8  ECE6  F001         	call	_Ws0010Buf9x16Char
  4011                           
  4012                           ;Application.c: 298:     Ws0010Buf9x16Char(StrTemp[2], 0);
  4013  0002DC  0E00               	movlw	0
  4014  0002DE  6E41               	movwf	Ws0010Buf9x16Char@inv,c
  4015  0002E0  EE20 F002          	lfsr	2,2
  4016  0002E4  5049               	movf	PrintData@StrTemp,w,c
  4017  0002E6  26D9               	addwf	fsr2l,f,c
  4018  0002E8  504A               	movf	PrintData@StrTemp+1,w,c
  4019  0002EA  22DA               	addwfc	fsr2h,f,c
  4020  0002EC  50DF               	movf	indf2,w,c
  4021  0002EE  ECE6  F001         	call	_Ws0010Buf9x16Char
  4022                           
  4023                           ;Application.c: 299:     Ws0010BufGotoXY(28, 2);
  4024  0002F2  0E02               	movlw	2
  4025  0002F4  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4026  0002F6  0E1C               	movlw	28
  4027  0002F8  EC73  F007         	call	_Ws0010BufGotoXY
  4028                           
  4029                           ;Application.c: 300:     Ws0010Buf5x7Char('.', 0);
  4030  0002FC  0E00               	movlw	0
  4031  0002FE  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  4032  000300  0E2E               	movlw	46
  4033  000302  EC7F  F002         	call	_Ws0010Buf5x7Char
  4034                           
  4035                           ;Application.c: 301:     Ws0010BufGotoXY(33, 1);
  4036  000306  0E01               	movlw	1
  4037  000308  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4038  00030A  0E21               	movlw	33
  4039  00030C  EC73  F007         	call	_Ws0010BufGotoXY
  4040                           
  4041                           ;Application.c: 302:     Ws0010Buf9x16Char(StrTemp[4], 0);
  4042  000310  0E00               	movlw	0
  4043  000312  6E41               	movwf	Ws0010Buf9x16Char@inv,c
  4044  000314  EE20 F004          	lfsr	2,4
  4045  000318  5049               	movf	PrintData@StrTemp,w,c
  4046  00031A  26D9               	addwf	fsr2l,f,c
  4047  00031C  504A               	movf	PrintData@StrTemp+1,w,c
  4048  00031E  22DA               	addwfc	fsr2h,f,c
  4049  000320  50DF               	movf	indf2,w,c
  4050  000322  ECE6  F001         	call	_Ws0010Buf9x16Char
  4051                           
  4052                           ;Application.c: 303:     Ws0010BufGotoXY(44, 1);
  4053  000326  0E01               	movlw	1
  4054  000328  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4055  00032A  0E2C               	movlw	44
  4056  00032C  EC73  F007         	call	_Ws0010BufGotoXY
  4057                           
  4058                           ;Application.c: 304:     Ws0010BufPatern(0x06, 1);
  4059  000330  0E01               	movlw	1
  4060  000332  6E3D               	movwf	Ws0010BufPatern@count,c
  4061  000334  0E06               	movlw	6
  4062  000336  EC17  F007         	call	_Ws0010BufPatern
  4063                           
  4064                           ;Application.c: 305:     Ws0010BufPatern(0x09, 2);
  4065  00033A  0E02               	movlw	2
  4066  00033C  6E3D               	movwf	Ws0010BufPatern@count,c
  4067  00033E  0E09               	movlw	9
  4068  000340  EC17  F007         	call	_Ws0010BufPatern
  4069                           
  4070                           ;Application.c: 306:     Ws0010BufPatern(0x06, 1);
  4071  000344  0E01               	movlw	1
  4072  000346  6E3D               	movwf	Ws0010BufPatern@count,c
  4073  000348  0E06               	movlw	6
  4074  00034A  EC17  F007         	call	_Ws0010BufPatern
  4075                           
  4076                           ;Application.c: 308:     Ws0010BufGotoXY(49, 1);
  4077  00034E  0E01               	movlw	1
  4078  000350  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4079  000352  0E31               	movlw	49
  4080  000354  EC73  F007         	call	_Ws0010BufGotoXY
  4081                           
  4082                           ;Application.c: 309:     Ws0010Buf5x7Char('C', 0);
  4083  000358  0E00               	movlw	0
  4084  00035A  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  4085  00035C  0E43               	movlw	67
  4086  00035E  EC7F  F002         	call	_Ws0010Buf5x7Char
  4087                           
  4088                           ;Application.c: 310:     Ws0010BufGotoXY(66, 1);
  4089  000362  0E01               	movlw	1
  4090  000364  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4091  000366  0E42               	movlw	66
  4092  000368  EC73  F007         	call	_Ws0010BufGotoXY
  4093                           
  4094                           ;Application.c: 311:     Ws0010Buf9x16Char(StrRH[0], 0);
  4095  00036C  0E00               	movlw	0
  4096  00036E  6E41               	movwf	Ws0010Buf9x16Char@inv,c
  4097  000370  C04B  FFD9         	movff	PrintData@StrRH,fsr2l
  4098  000374  C04C  FFDA         	movff	PrintData@StrRH+1,fsr2h
  4099  000378  50DF               	movf	indf2,w,c
  4100  00037A  ECE6  F001         	call	_Ws0010Buf9x16Char
  4101                           
  4102                           ;Application.c: 312:     Ws0010Buf9x16Char(StrRH[1], 0);
  4103  00037E  0E00               	movlw	0
  4104  000380  6E41               	movwf	Ws0010Buf9x16Char@inv,c
  4105  000382  EE20 F001          	lfsr	2,1
  4106  000386  504B               	movf	PrintData@StrRH,w,c
  4107  000388  26D9               	addwf	fsr2l,f,c
  4108  00038A  504C               	movf	PrintData@StrRH+1,w,c
  4109  00038C  22DA               	addwfc	fsr2h,f,c
  4110  00038E  50DF               	movf	indf2,w,c
  4111  000390  ECE6  F001         	call	_Ws0010Buf9x16Char
  4112                           
  4113                           ;Application.c: 313:     Ws0010BufGotoXY(88, 1);
  4114  000394  0E01               	movlw	1
  4115  000396  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4116  000398  0E58               	movlw	88
  4117  00039A  EC73  F007         	call	_Ws0010BufGotoXY
  4118                           
  4119                           ;Application.c: 314:     Ws0010Buf5x7Char('%', 0);
  4120  00039E  0E00               	movlw	0
  4121  0003A0  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  4122  0003A2  0E25               	movlw	37
  4123  0003A4  EC7F  F002         	call	_Ws0010Buf5x7Char
  4124                           
  4125                           ;Application.c: 315:     Ws0010BufGotoXY(88, 2);
  4126  0003A8  0E02               	movlw	2
  4127  0003AA  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4128  0003AC  0E58               	movlw	88
  4129  0003AE  EC73  F007         	call	_Ws0010BufGotoXY
  4130                           
  4131                           ;Application.c: 316:     Ws0010Buf5x7Char('R', 0);
  4132  0003B2  0E00               	movlw	0
  4133  0003B4  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  4134  0003B6  0E52               	movlw	82
  4135  0003B8  EC7F  F002         	call	_Ws0010Buf5x7Char
  4136                           
  4137                           ;Application.c: 317:     Ws0010Buf5x7Char('H', 0);
  4138  0003BC  0E00               	movlw	0
  4139  0003BE  6E3D               	movwf	Ws0010Buf5x7Char@inv,c
  4140  0003C0  0E48               	movlw	72
  4141  0003C2  EC7F  F002         	call	_Ws0010Buf5x7Char
  4142                           
  4143                           ;Application.c: 318:     Ws0010Refresh();
  4144  0003C6  EC85  F006         	call	_Ws0010Refresh	;wreg free
  4145  0003CA  0012               	return		;funcret
  4146  0003CC                     __end_of_PrintData:
  4147                           	opt callstack 0
  4148                           
  4149 ;; *************** function _Ws0010Buf9x16Char *****************
  4150 ;; Defined at:
  4151 ;;		line 176 in file "WS0010.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  carac           1    wreg     unsigned char 
  4154 ;;  inv             1    6[COMRAM] unsigned char 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  carac           1   11[COMRAM] unsigned char 
  4157 ;;  j               2   12[COMRAM] unsigned short 
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      void 
  4160 ;; Registers used:
  4161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4167 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;Total ram usage:        8 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; Hardware stack levels required when called:    5
  4174 ;; This function calls:
  4175 ;;		_Ws0010BufGotoXY
  4176 ;; This function is called by:
  4177 ;;		_PrintData
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           	psect	text23
  4182  0003CC                     __ptext23:
  4183                           	opt callstack 0
  4184  0003CC                     _Ws0010Buf9x16Char:
  4185                           	opt callstack 23
  4186                           
  4187                           ;incstack = 0
  4188                           ;Ws0010Buf9x16Char@carac stored from wreg
  4189  0003CC  6E46               	movwf	Ws0010Buf9x16Char@carac,c
  4190                           
  4191                           ;WS0010.c: 176: void Ws0010Buf9x16Char(uint8_t carac, uint8_t inv);WS0010.c: 177: {;WS00
      +                          10.c: 178:     uint16_t j;;WS0010.c: 180:     for (j = 0; j < 18; j++)
  4192  0003CE  0E00               	movlw	0
  4193  0003D0  6E48               	movwf	Ws0010Buf9x16Char@j+1,c
  4194  0003D2  0E00               	movlw	0
  4195  0003D4  6E47               	movwf	Ws0010Buf9x16Char@j,c
  4196  0003D6                     l2362:
  4197                           
  4198                           ;WS0010.c: 181:     {;WS0010.c: 182:         if (j == 9)
  4199  0003D6  0E09               	movlw	9
  4200  0003D8  1847               	xorwf	Ws0010Buf9x16Char@j,w,c
  4201  0003DA  1048               	iorwf	Ws0010Buf9x16Char@j+1,w,c
  4202  0003DC  A4D8               	btfss	status,2,c
  4203  0003DE  D01C               	goto	l2376
  4204                           
  4205                           ;WS0010.c: 183:         {;WS0010.c: 184:             if (inv)
  4206  0003E0  5041               	movf	Ws0010Buf9x16Char@inv,w,c
  4207  0003E2  B4D8               	btfsc	status,2,c
  4208  0003E4  D00B               	goto	l2370
  4209                           
  4210                           ;WS0010.c: 185:                 Ws0010_buffer[ptr++] = ~0x00;
  4211  0003E6  0E00               	movlw	low _Ws0010_buffer
  4212  0003E8  241F               	addwf	_ptr,w,c
  4213  0003EA  6ED9               	movwf	fsr2l,c
  4214  0003EC  0E01               	movlw	high _Ws0010_buffer
  4215  0003EE  2020               	addwfc	_ptr+1,w,c
  4216  0003F0  6EDA               	movwf	fsr2h,c
  4217  0003F2  0EFF               	movlw	255
  4218  0003F4  6EDF               	movwf	indf2,c
  4219  0003F6  4A1F               	infsnz	_ptr,f,c
  4220  0003F8  2A20               	incf	_ptr+1,f,c
  4221  0003FA  D008               	goto	l2374
  4222  0003FC                     l2370:
  4223                           
  4224                           ;WS0010.c: 187:                 Ws0010_buffer[ptr++] = 0x00;
  4225  0003FC  0E00               	movlw	low _Ws0010_buffer
  4226  0003FE  241F               	addwf	_ptr,w,c
  4227  000400  6ED9               	movwf	fsr2l,c
  4228  000402  0E01               	movlw	high _Ws0010_buffer
  4229  000404  2020               	addwfc	_ptr+1,w,c
  4230  000406  6EDA               	movwf	fsr2h,c
  4231  000408  0E00               	movlw	0
  4232  00040A  D7F4               	goto	L1
  4233  00040C                     l2374:
  4234                           
  4235                           ;WS0010.c: 188:             Ws0010BufGotoXY((ptr - 9), 2);
  4236  00040C  0E02               	movlw	2
  4237  00040E  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4238  000410  501F               	movf	_ptr,w,c
  4239  000412  0FF7               	addlw	247
  4240  000414  EC73  F007         	call	_Ws0010BufGotoXY
  4241  000418                     l2376:
  4242                           
  4243                           ;WS0010.c: 190:         if (inv)
  4244  000418  5041               	movf	Ws0010Buf9x16Char@inv,w,c
  4245  00041A  B4D8               	btfsc	status,2,c
  4246  00041C  D028               	goto	l2382
  4247                           
  4248                           ;WS0010.c: 191:             Ws0010_buffer[ptr++] = ~ascii_table9x16[carac - 0x30][j];
  4249  00041E  0E00               	movlw	low _Ws0010_buffer
  4250  000420  241F               	addwf	_ptr,w,c
  4251  000422  6ED9               	movwf	fsr2l,c
  4252  000424  0E01               	movlw	high _Ws0010_buffer
  4253  000426  2020               	addwfc	_ptr+1,w,c
  4254  000428  6EDA               	movwf	fsr2h,c
  4255  00042A  0EA0               	movlw	160
  4256  00042C  6E42               	movwf	??_Ws0010Buf9x16Char& (0+255),c
  4257  00042E  0EFC               	movlw	252
  4258  000430  6E43               	movwf	(??_Ws0010Buf9x16Char+1)& (0+255),c
  4259  000432  5046               	movf	Ws0010Buf9x16Char@carac,w,c
  4260  000434  0D12               	mullw	18
  4261  000436  0E66               	movlw	low _ascii_table9x16
  4262  000438  6E44               	movwf	(??_Ws0010Buf9x16Char+2)& (0+255),c
  4263  00043A  0EFE               	movlw	high _ascii_table9x16
  4264  00043C  6E45               	movwf	(??_Ws0010Buf9x16Char+3)& (0+255),c
  4265  00043E  50F3               	movf	prodl,w,c
  4266  000440  2644               	addwf	??_Ws0010Buf9x16Char+2,f,c
  4267  000442  50F4               	movf	prodh,w,c
  4268  000444  2245               	addwfc	??_Ws0010Buf9x16Char+3,f,c
  4269  000446  5047               	movf	Ws0010Buf9x16Char@j,w,c
  4270  000448  2644               	addwf	??_Ws0010Buf9x16Char+2,f,c
  4271  00044A  5048               	movf	Ws0010Buf9x16Char@j+1,w,c
  4272  00044C  2245               	addwfc	??_Ws0010Buf9x16Char+3,f,c
  4273  00044E  5042               	movf	??_Ws0010Buf9x16Char,w,c
  4274  000450  2644               	addwf	??_Ws0010Buf9x16Char+2,f,c
  4275  000452  5043               	movf	??_Ws0010Buf9x16Char+1,w,c
  4276  000454  2245               	addwfc	??_Ws0010Buf9x16Char+3,f,c
  4277  000456  C044  FFF6         	movff	??_Ws0010Buf9x16Char+2,tblptrl
  4278  00045A  C045  FFF7         	movff	??_Ws0010Buf9x16Char+3,tblptrh
  4279  00045E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4280  00045E  6AF8               	clrf	tblptru,c
  4281  000460                     	endif
  4282  000460                     	if	0	;tblptru may be non-zero
  4283  000460                     	endif
  4284  000460  0008               	tblrd		*
  4285  000462  50F5               	movf	tablat,w,c
  4286  000464  0AFF               	xorlw	255
  4287  000466  6EDF               	movwf	indf2,c
  4288  000468                     l2380:
  4289  000468  4A1F               	infsnz	_ptr,f,c
  4290  00046A  2A20               	incf	_ptr+1,f,c
  4291  00046C  D025               	goto	l2386
  4292  00046E                     l2382:
  4293                           
  4294                           ;WS0010.c: 193:             Ws0010_buffer[ptr++] = ascii_table9x16[carac - 0x30][j];
  4295  00046E  0EA0               	movlw	160
  4296  000470  6E42               	movwf	??_Ws0010Buf9x16Char& (0+255),c
  4297  000472  0EFC               	movlw	252
  4298  000474  6E43               	movwf	(??_Ws0010Buf9x16Char+1)& (0+255),c
  4299  000476  5046               	movf	Ws0010Buf9x16Char@carac,w,c
  4300  000478  0D12               	mullw	18
  4301  00047A  0E66               	movlw	low _ascii_table9x16
  4302  00047C  6E44               	movwf	(??_Ws0010Buf9x16Char+2)& (0+255),c
  4303  00047E  0EFE               	movlw	high _ascii_table9x16
  4304  000480  6E45               	movwf	(??_Ws0010Buf9x16Char+3)& (0+255),c
  4305  000482  50F3               	movf	prodl,w,c
  4306  000484  2644               	addwf	??_Ws0010Buf9x16Char+2,f,c
  4307  000486  50F4               	movf	prodh,w,c
  4308  000488  2245               	addwfc	??_Ws0010Buf9x16Char+3,f,c
  4309  00048A  5047               	movf	Ws0010Buf9x16Char@j,w,c
  4310  00048C  2644               	addwf	??_Ws0010Buf9x16Char+2,f,c
  4311  00048E  5048               	movf	Ws0010Buf9x16Char@j+1,w,c
  4312  000490  2245               	addwfc	??_Ws0010Buf9x16Char+3,f,c
  4313  000492  5042               	movf	??_Ws0010Buf9x16Char,w,c
  4314  000494  2644               	addwf	??_Ws0010Buf9x16Char+2,f,c
  4315  000496  5043               	movf	??_Ws0010Buf9x16Char+1,w,c
  4316  000498  2245               	addwfc	??_Ws0010Buf9x16Char+3,f,c
  4317  00049A  C044  FFF6         	movff	??_Ws0010Buf9x16Char+2,tblptrl
  4318  00049E  C045  FFF7         	movff	??_Ws0010Buf9x16Char+3,tblptrh
  4319  0004A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4320  0004A2  6AF8               	clrf	tblptru,c
  4321  0004A4                     	endif
  4322  0004A4                     	if	0	;tblptru may be non-zero
  4323  0004A4                     	endif
  4324  0004A4  0E00               	movlw	low _Ws0010_buffer
  4325  0004A6  241F               	addwf	_ptr,w,c
  4326  0004A8  6ED9               	movwf	fsr2l,c
  4327  0004AA  0E01               	movlw	high _Ws0010_buffer
  4328  0004AC  2020               	addwfc	_ptr+1,w,c
  4329  0004AE  6EDA               	movwf	fsr2h,c
  4330  0004B0  0008               	tblrd		*
  4331  0004B2  CFF5 FFDF          	movff	tablat,indf2
  4332  0004B6  D7D8               	goto	l2380
  4333  0004B8                     l2386:
  4334                           
  4335                           ;WS0010.c: 194:     }
  4336  0004B8  4A47               	infsnz	Ws0010Buf9x16Char@j,f,c
  4337  0004BA  2A48               	incf	Ws0010Buf9x16Char@j+1,f,c
  4338  0004BC  5048               	movf	Ws0010Buf9x16Char@j+1,w,c
  4339  0004BE  E104               	bnz	u1210
  4340  0004C0  0E12               	movlw	18
  4341  0004C2  5C47               	subwf	Ws0010Buf9x16Char@j,w,c
  4342  0004C4  A0D8               	btfss	status,0,c
  4343  0004C6  D787               	goto	l2362
  4344  0004C8                     u1210:
  4345                           
  4346                           ;WS0010.c: 195:     if (inv)
  4347  0004C8  5041               	movf	Ws0010Buf9x16Char@inv,w,c
  4348  0004CA  B4D8               	btfsc	status,2,c
  4349  0004CC  D00B               	goto	l2396
  4350                           
  4351                           ;WS0010.c: 196:         Ws0010_buffer[ptr++] = ~0x00;
  4352  0004CE  0E00               	movlw	low _Ws0010_buffer
  4353  0004D0  241F               	addwf	_ptr,w,c
  4354  0004D2  6ED9               	movwf	fsr2l,c
  4355  0004D4  0E01               	movlw	high _Ws0010_buffer
  4356  0004D6  2020               	addwfc	_ptr+1,w,c
  4357  0004D8  6EDA               	movwf	fsr2h,c
  4358  0004DA  0EFF               	movlw	255
  4359  0004DC  6EDF               	movwf	indf2,c
  4360  0004DE  4A1F               	infsnz	_ptr,f,c
  4361  0004E0  2A20               	incf	_ptr+1,f,c
  4362  0004E2  D008               	goto	l2400
  4363  0004E4                     l2396:
  4364                           
  4365                           ;WS0010.c: 198:         Ws0010_buffer[ptr++] = 0x00;
  4366  0004E4  0E00               	movlw	low _Ws0010_buffer
  4367  0004E6  241F               	addwf	_ptr,w,c
  4368  0004E8  6ED9               	movwf	fsr2l,c
  4369  0004EA  0E01               	movlw	high _Ws0010_buffer
  4370  0004EC  2020               	addwfc	_ptr+1,w,c
  4371  0004EE  6EDA               	movwf	fsr2h,c
  4372  0004F0  0E00               	movlw	0
  4373  0004F2  D7F4               	goto	L2
  4374  0004F4                     l2400:
  4375                           
  4376                           ;WS0010.c: 200:     ptr -= 100;
  4377  0004F4  0E64               	movlw	100
  4378  0004F6  5E1F               	subwf	_ptr,f,c
  4379  0004F8  0E00               	movlw	0
  4380  0004FA  5A20               	subwfb	_ptr+1,f,c
  4381  0004FC  0012               	return		;funcret
  4382  0004FE                     __end_of_Ws0010Buf9x16Char:
  4383                           	opt callstack 0
  4384                           
  4385 ;; *************** function _Ws0010Buf5x7Char *****************
  4386 ;; Defined at:
  4387 ;;		line 160 in file "WS0010.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  carac           1    wreg     unsigned char 
  4390 ;;  inv             1    2[COMRAM] unsigned char 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  carac           1    7[COMRAM] unsigned char 
  4393 ;;  j               1    8[COMRAM] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      void 
  4396 ;; Registers used:
  4397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4403 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;Total ram usage:        7 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    4
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_PrintData
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text24
  4418  0004FE                     __ptext24:
  4419                           	opt callstack 0
  4420  0004FE                     _Ws0010Buf5x7Char:
  4421                           	opt callstack 24
  4422                           
  4423                           ;incstack = 0
  4424                           ;Ws0010Buf5x7Char@carac stored from wreg
  4425  0004FE  6E42               	movwf	Ws0010Buf5x7Char@carac,c
  4426                           
  4427                           ;WS0010.c: 160: void Ws0010Buf5x7Char(uint8_t carac, uint8_t inv);WS0010.c: 161: {;WS001
      +                          0.c: 162:     uint8_t j;;WS0010.c: 163:     for (j = 0; j < 5; j++)
  4428  000500  0E00               	movlw	0
  4429  000502  6E43               	movwf	Ws0010Buf5x7Char@j,c
  4430  000504                     l2332:
  4431                           
  4432                           ;WS0010.c: 164:     {;WS0010.c: 165:         if (inv)
  4433  000504  503D               	movf	Ws0010Buf5x7Char@inv,w,c
  4434  000506  B4D8               	btfsc	status,2,c
  4435  000508  D028               	goto	l2338
  4436                           
  4437                           ;WS0010.c: 166:             Ws0010_buffer[ptr++] = ~ascii_table5x7[(carac - 0x20)][j];
  4438  00050A  0E00               	movlw	low _Ws0010_buffer
  4439  00050C  241F               	addwf	_ptr,w,c
  4440  00050E  6ED9               	movwf	fsr2l,c
  4441  000510  0E01               	movlw	high _Ws0010_buffer
  4442  000512  2020               	addwfc	_ptr+1,w,c
  4443  000514  6EDA               	movwf	fsr2h,c
  4444  000516  0E60               	movlw	96
  4445  000518  6E3E               	movwf	??_Ws0010Buf5x7Char& (0+255),c
  4446  00051A  0EFF               	movlw	255
  4447  00051C  6E3F               	movwf	(??_Ws0010Buf5x7Char+1)& (0+255),c
  4448  00051E  5042               	movf	Ws0010Buf5x7Char@carac,w,c
  4449  000520  0D05               	mullw	5
  4450  000522  0E81               	movlw	low _ascii_table5x7
  4451  000524  6E40               	movwf	(??_Ws0010Buf5x7Char+2)& (0+255),c
  4452  000526  0EFC               	movlw	high _ascii_table5x7
  4453  000528  6E41               	movwf	(??_Ws0010Buf5x7Char+3)& (0+255),c
  4454  00052A  50F3               	movf	prodl,w,c
  4455  00052C  2640               	addwf	??_Ws0010Buf5x7Char+2,f,c
  4456  00052E  50F4               	movf	prodh,w,c
  4457  000530  2241               	addwfc	??_Ws0010Buf5x7Char+3,f,c
  4458  000532  5043               	movf	Ws0010Buf5x7Char@j,w,c
  4459  000534  2640               	addwf	??_Ws0010Buf5x7Char+2,f,c
  4460  000536  0E00               	movlw	0
  4461  000538  2241               	addwfc	??_Ws0010Buf5x7Char+3,f,c
  4462  00053A  503E               	movf	??_Ws0010Buf5x7Char,w,c
  4463  00053C  2640               	addwf	??_Ws0010Buf5x7Char+2,f,c
  4464  00053E  503F               	movf	??_Ws0010Buf5x7Char+1,w,c
  4465  000540  2241               	addwfc	??_Ws0010Buf5x7Char+3,f,c
  4466  000542  C040  FFF6         	movff	??_Ws0010Buf5x7Char+2,tblptrl
  4467  000546  C041  FFF7         	movff	??_Ws0010Buf5x7Char+3,tblptrh
  4468  00054A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4469  00054A  6AF8               	clrf	tblptru,c
  4470  00054C                     	endif
  4471  00054C                     	if	0	;tblptru may be non-zero
  4472  00054C                     	endif
  4473  00054C  0008               	tblrd		*
  4474  00054E  50F5               	movf	tablat,w,c
  4475  000550  0AFF               	xorlw	255
  4476  000552  6EDF               	movwf	indf2,c
  4477  000554                     l2336:
  4478  000554  4A1F               	infsnz	_ptr,f,c
  4479  000556  2A20               	incf	_ptr+1,f,c
  4480  000558  D025               	goto	l2342
  4481  00055A                     l2338:
  4482                           
  4483                           ;WS0010.c: 168:             Ws0010_buffer[ptr++] = ascii_table5x7[(carac - 0x20)][j];
  4484  00055A  0E60               	movlw	96
  4485  00055C  6E3E               	movwf	??_Ws0010Buf5x7Char& (0+255),c
  4486  00055E  0EFF               	movlw	255
  4487  000560  6E3F               	movwf	(??_Ws0010Buf5x7Char+1)& (0+255),c
  4488  000562  5042               	movf	Ws0010Buf5x7Char@carac,w,c
  4489  000564  0D05               	mullw	5
  4490  000566  0E81               	movlw	low _ascii_table5x7
  4491  000568  6E40               	movwf	(??_Ws0010Buf5x7Char+2)& (0+255),c
  4492  00056A  0EFC               	movlw	high _ascii_table5x7
  4493  00056C  6E41               	movwf	(??_Ws0010Buf5x7Char+3)& (0+255),c
  4494  00056E  50F3               	movf	prodl,w,c
  4495  000570  2640               	addwf	??_Ws0010Buf5x7Char+2,f,c
  4496  000572  50F4               	movf	prodh,w,c
  4497  000574  2241               	addwfc	??_Ws0010Buf5x7Char+3,f,c
  4498  000576  5043               	movf	Ws0010Buf5x7Char@j,w,c
  4499  000578  2640               	addwf	??_Ws0010Buf5x7Char+2,f,c
  4500  00057A  0E00               	movlw	0
  4501  00057C  2241               	addwfc	??_Ws0010Buf5x7Char+3,f,c
  4502  00057E  503E               	movf	??_Ws0010Buf5x7Char,w,c
  4503  000580  2640               	addwf	??_Ws0010Buf5x7Char+2,f,c
  4504  000582  503F               	movf	??_Ws0010Buf5x7Char+1,w,c
  4505  000584  2241               	addwfc	??_Ws0010Buf5x7Char+3,f,c
  4506  000586  C040  FFF6         	movff	??_Ws0010Buf5x7Char+2,tblptrl
  4507  00058A  C041  FFF7         	movff	??_Ws0010Buf5x7Char+3,tblptrh
  4508  00058E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4509  00058E  6AF8               	clrf	tblptru,c
  4510  000590                     	endif
  4511  000590                     	if	0	;tblptru may be non-zero
  4512  000590                     	endif
  4513  000590  0E00               	movlw	low _Ws0010_buffer
  4514  000592  241F               	addwf	_ptr,w,c
  4515  000594  6ED9               	movwf	fsr2l,c
  4516  000596  0E01               	movlw	high _Ws0010_buffer
  4517  000598  2020               	addwfc	_ptr+1,w,c
  4518  00059A  6EDA               	movwf	fsr2h,c
  4519  00059C  0008               	tblrd		*
  4520  00059E  CFF5 FFDF          	movff	tablat,indf2
  4521  0005A2  D7D8               	goto	l2336
  4522  0005A4                     l2342:
  4523                           
  4524                           ;WS0010.c: 169:     }
  4525  0005A4  2A43               	incf	Ws0010Buf5x7Char@j,f,c
  4526  0005A6  0E04               	movlw	4
  4527  0005A8  6443               	cpfsgt	Ws0010Buf5x7Char@j,c
  4528  0005AA  D7AC               	goto	l2332
  4529                           
  4530                           ;WS0010.c: 170:     if (inv)
  4531  0005AC  503D               	movf	Ws0010Buf5x7Char@inv,w,c
  4532  0005AE  B4D8               	btfsc	status,2,c
  4533  0005B0  D00B               	goto	l2352
  4534                           
  4535                           ;WS0010.c: 171:         Ws0010_buffer[ptr++] = ~0x00;
  4536  0005B2  0E00               	movlw	low _Ws0010_buffer
  4537  0005B4  241F               	addwf	_ptr,w,c
  4538  0005B6  6ED9               	movwf	fsr2l,c
  4539  0005B8  0E01               	movlw	high _Ws0010_buffer
  4540  0005BA  2020               	addwfc	_ptr+1,w,c
  4541  0005BC  6EDA               	movwf	fsr2h,c
  4542  0005BE  0EFF               	movlw	255
  4543  0005C0  6EDF               	movwf	indf2,c
  4544  0005C2  4A1F               	infsnz	_ptr,f,c
  4545  0005C4  2A20               	incf	_ptr+1,f,c
  4546  0005C6  0012               	return	
  4547  0005C8                     l2352:
  4548                           
  4549                           ;WS0010.c: 173:         Ws0010_buffer[ptr++] = 0x00;
  4550  0005C8  0E00               	movlw	low _Ws0010_buffer
  4551  0005CA  241F               	addwf	_ptr,w,c
  4552  0005CC  6ED9               	movwf	fsr2l,c
  4553  0005CE  0E01               	movlw	high _Ws0010_buffer
  4554  0005D0  2020               	addwfc	_ptr+1,w,c
  4555  0005D2  6EDA               	movwf	fsr2h,c
  4556  0005D4  0E00               	movlw	0
  4557  0005D6  D7F4               	goto	L3
  4558  0005D8                     __end_of_Ws0010Buf5x7Char:
  4559                           	opt callstack 0
  4560                           
  4561 ;; *************** function _GetsRS485 *****************
  4562 ;; Defined at:
  4563 ;;		line 36 in file "Rs485.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  RxData          2    2[COMRAM] PTR unsigned char 
  4566 ;;		 -> ProcessPeriodic@RxData(1), 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  Ret             1    4[COMRAM] unsigned char 
  4569 ;;  RxStatus        1    5[COMRAM] volatile struct .
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      unsigned char 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4580 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;Total ram usage:        4 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:    5
  4586 ;; This function calls:
  4587 ;;		_EUSART_Read
  4588 ;;		_EUSART_get_last_status
  4589 ;;		_EUSART_is_rx_ready
  4590 ;; This function is called by:
  4591 ;;		_ProcessPeriodic
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text25
  4596  000DFC                     __ptext25:
  4597                           	opt callstack 0
  4598  000DFC                     _GetsRS485:
  4599                           	opt callstack 24
  4600                           
  4601                           ;Rs485.c: 36: uint8_t GetsRS485(uint8_t* RxData);Rs485.c: 37: {;Rs485.c: 39:     volatil
      +                          e eusart_status_t RxStatus;;Rs485.c: 40:     uint8_t Ret = 0;
  4602                           
  4603                           ;incstack = 0
  4604  000DFC  0E00               	movlw	0
  4605  000DFE  6E3F               	movwf	GetsRS485@Ret,c
  4606                           
  4607                           ;Rs485.c: 41:     if(EUSART_is_rx_ready())
  4608  000E00  EC0A  F008         	call	_EUSART_is_rx_ready	;wreg free
  4609  000E04  0900               	iorlw	0
  4610  000E06  B4D8               	btfsc	status,2,c
  4611  000E08  D010               	goto	l427
  4612                           
  4613                           ;Rs485.c: 42:     {;Rs485.c: 43:         *RxData = EUSART_Read();
  4614  000E0A  ECCE  F007         	call	_EUSART_Read	;wreg free
  4615  000E0E  C03D  FFD9         	movff	GetsRS485@RxData,fsr2l
  4616  000E12  C03E  FFDA         	movff	GetsRS485@RxData+1,fsr2h
  4617  000E16  6EDF               	movwf	indf2,c
  4618                           
  4619                           ;Rs485.c: 44:         Ret = 1;
  4620  000E18  0E01               	movlw	1
  4621  000E1A  6E3F               	movwf	GetsRS485@Ret,c
  4622                           
  4623                           ;Rs485.c: 45:         RxStatus = EUSART_get_last_status();
  4624  000E1C  EC2C  F008         	call	_EUSART_get_last_status	;wreg free
  4625  000E20  6E40               	movwf	GetsRS485@RxStatus,c	;volatile
  4626                           
  4627                           ;Rs485.c: 46:         if (RxStatus.ferr)
  4628  000E22  A240               	btfss	GetsRS485@RxStatus,1,c	;volatile
  4629  000E24  D002               	goto	l427
  4630                           
  4631                           ;Rs485.c: 47:         {;Rs485.c: 48:             Ret = 0;
  4632  000E26  0E00               	movlw	0
  4633  000E28  6E3F               	movwf	GetsRS485@Ret,c
  4634  000E2A                     l427:
  4635                           
  4636                           ;Rs485.c: 51:     return(Ret);
  4637  000E2A  503F               	movf	GetsRS485@Ret,w,c
  4638  000E2C  0012               	return		;funcret
  4639  000E2E                     __end_of_GetsRS485:
  4640                           	opt callstack 0
  4641                           
  4642 ;; *************** function _EUSART_is_rx_ready *****************
  4643 ;; Defined at:
  4644 ;;		line 98 in file "mcc_generated_files/eusart.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      _Bool 
  4651 ;; Registers used:
  4652 ;;		wreg
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;Total ram usage:        0 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:    4
  4665 ;; This function calls:
  4666 ;;		Nothing
  4667 ;; This function is called by:
  4668 ;;		_GetsRS485
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text26
  4673  001014                     __ptext26:
  4674                           	opt callstack 0
  4675  001014                     _EUSART_is_rx_ready:
  4676                           	opt callstack 24
  4677                           
  4678                           ;mcc_generated_files/eusart.c: 100:     return PIR1bits.RC1IF;
  4679                           
  4680                           ;incstack = 0
  4681  001014  AA9E               	btfss	3998,5,c	;volatile
  4682  001016  D002               	goto	u1050
  4683  001018  0E01               	movlw	1
  4684  00101A  0012               	return	
  4685  00101C                     u1050:
  4686  00101C  0E00               	movlw	0
  4687  00101E  0012               	return		;funcret
  4688  001020                     __end_of_EUSART_is_rx_ready:
  4689                           	opt callstack 0
  4690                           
  4691 ;; *************** function _EUSART_get_last_status *****************
  4692 ;; Defined at:
  4693 ;;		line 108 in file "mcc_generated_files/eusart.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;		None
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      struct .
  4700 ;; Registers used:
  4701 ;;		wreg, status,2
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;Total ram usage:        0 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    4
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_GetsRS485
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text27
  4722  001058                     __ptext27:
  4723                           	opt callstack 0
  4724  001058                     _EUSART_get_last_status:
  4725                           	opt callstack 24
  4726                           
  4727                           ;mcc_generated_files/eusart.c: 109:     return eusartRxLastError;
  4728                           
  4729                           ;incstack = 0
  4730  001058  502E               	movf	_eusartRxLastError,w,c	;volatile
  4731  00105A  0012               	return		;funcret
  4732  00105C                     __end_of_EUSART_get_last_status:
  4733                           	opt callstack 0
  4734                           
  4735 ;; *************** function _EUSART_Read *****************
  4736 ;; Defined at:
  4737 ;;		line 112 in file "mcc_generated_files/eusart.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      unsigned char 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;Total ram usage:        0 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    4
  4758 ;; This function calls:
  4759 ;;		Nothing
  4760 ;; This function is called by:
  4761 ;;		_GetsRS485
  4762 ;;		_getch
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text28
  4767  000F9C                     __ptext28:
  4768                           	opt callstack 0
  4769  000F9C                     _EUSART_Read:
  4770                           	opt callstack 24
  4771                           
  4772                           ;mcc_generated_files/eusart.c: 114:     while(!PIR1bits.RC1IF)
  4773                           
  4774                           ;mcc_generated_files/eusart.c: 115:     {;mcc_generated_files/eusart.c: 116:     }
  4775                           
  4776                           ;incstack = 0
  4777  000F9C  AA9E               	btfss	3998,5,c	;volatile
  4778  000F9E  D7FE               	goto	_EUSART_Read
  4779                           
  4780                           ;mcc_generated_files/eusart.c: 118:     eusartRxLastError.status = 0;
  4781  000FA0  0E00               	movlw	0
  4782  000FA2  6E2E               	movwf	_eusartRxLastError,c	;volatile
  4783                           
  4784                           ;mcc_generated_files/eusart.c: 120:     if(1 == RCSTAbits.OERR)
  4785  000FA4  A2AB               	btfss	4011,1,c	;volatile
  4786  000FA6  D002               	goto	l2270
  4787                           
  4788                           ;mcc_generated_files/eusart.c: 121:     {;mcc_generated_files/eusart.c: 124:         RCS
      +                          TAbits.CREN = 0;
  4789  000FA8  98AB               	bcf	4011,4,c	;volatile
  4790                           
  4791                           ;mcc_generated_files/eusart.c: 125:         RCSTAbits.CREN = 1;
  4792  000FAA  88AB               	bsf	4011,4,c	;volatile
  4793  000FAC                     l2270:
  4794                           
  4795                           ;mcc_generated_files/eusart.c: 128:     return RCREG;
  4796  000FAC  50AE               	movf	4014,w,c	;volatile
  4797  000FAE  0012               	return		;funcret
  4798  000FB0                     __end_of_EUSART_Read:
  4799                           	opt callstack 0
  4800                           
  4801 ;; *************** function _ProcessInit *****************
  4802 ;; Defined at:
  4803 ;;		line 121 in file "Application.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;Total ram usage:        0 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    7
  4824 ;; This function calls:
  4825 ;;		_DelayLongo
  4826 ;;		_SetProcessFunc
  4827 ;;		_TMR0_SetInterruptHandler
  4828 ;;		_TMR0_StartTimer
  4829 ;;		_TMR0_StopTimer
  4830 ;;		_Ws0010BufBitmap
  4831 ;;		_Ws0010BufGotoXY
  4832 ;;		_Ws0010BufPatern
  4833 ;;		_Ws0010Init
  4834 ;;		_Ws0010PutGotoXY
  4835 ;;		_Ws0010Refresh
  4836 ;;		_fifo_init
  4837 ;; This function is called by:
  4838 ;;		_main
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text29
  4843  0006A6                     __ptext29:
  4844                           	opt callstack 0
  4845  0006A6                     _ProcessInit:
  4846                           	opt callstack 23
  4847                           
  4848                           ;Application.c: 123:     TMR0_StopTimer();
  4849                           
  4850                           ;incstack = 0
  4851  0006A6  EC2E  F008         	call	_TMR0_StopTimer	;wreg free
  4852                           
  4853                           ;Application.c: 126:     SetProcessFunc(0, "Cx", 2, SendCX);
  4854  0006AA  0EF8               	movlw	low STR_1
  4855  0006AC  6E48               	movwf	SetProcessFunc@Command,c
  4856  0006AE  0EFF               	movlw	high STR_1
  4857  0006B0  6E49               	movwf	SetProcessFunc@Command+1,c
  4858  0006B2  0E02               	movlw	2
  4859  0006B4  6E4A               	movwf	SetProcessFunc@Size,c
  4860  0006B6  0EE0               	movlw	low _SendCX
  4861  0006B8  6E4B               	movwf	SetProcessFunc@FunctionHandler,c
  4862  0006BA  0E0F               	movlw	high _SendCX
  4863  0006BC  6E4C               	movwf	SetProcessFunc@FunctionHandler+1,c
  4864  0006BE  0E00               	movlw	0
  4865  0006C0  EC38  F006         	call	_SetProcessFunc
  4866                           
  4867                           ;Application.c: 127:     SetProcessFunc(1, "Ok", 2, SendSY);
  4868  0006C4  0EF2               	movlw	low STR_5
  4869  0006C6  6E48               	movwf	SetProcessFunc@Command,c
  4870  0006C8  0EFF               	movlw	high STR_5
  4871  0006CA  6E49               	movwf	SetProcessFunc@Command+1,c
  4872  0006CC  0E02               	movlw	2
  4873  0006CE  6E4A               	movwf	SetProcessFunc@Size,c
  4874  0006D0  0EEE               	movlw	low _SendSY
  4875  0006D2  6E4B               	movwf	SetProcessFunc@FunctionHandler,c
  4876  0006D4  0E0F               	movlw	high _SendSY
  4877  0006D6  6E4C               	movwf	SetProcessFunc@FunctionHandler+1,c
  4878  0006D8  0E01               	movlw	1
  4879  0006DA  EC38  F006         	call	_SetProcessFunc
  4880                           
  4881                           ;Application.c: 128:     SetProcessFunc(2, "Bt", 2, SendBT);
  4882  0006DE  0EF5               	movlw	low STR_3
  4883  0006E0  6E48               	movwf	SetProcessFunc@Command,c
  4884  0006E2  0EFF               	movlw	high STR_3
  4885  0006E4  6E49               	movwf	SetProcessFunc@Command+1,c
  4886  0006E6  0E02               	movlw	2
  4887  0006E8  6E4A               	movwf	SetProcessFunc@Size,c
  4888  0006EA  0ED2               	movlw	low _SendBT
  4889  0006EC  6E4B               	movwf	SetProcessFunc@FunctionHandler,c
  4890  0006EE  0E0F               	movlw	high _SendBT
  4891  0006F0  6E4C               	movwf	SetProcessFunc@FunctionHandler+1,c
  4892  0006F2  0E02               	movlw	2
  4893  0006F4  EC38  F006         	call	_SetProcessFunc
  4894                           
  4895                           ;Application.c: 131:     fifo_init(&AplicationQueue, 4);
  4896  0006F8  0EB1               	movlw	low _AplicationQueue
  4897  0006FA  6E3D               	movwf	fifo_init@p_fifo,c
  4898  0006FC  0E00               	movlw	high _AplicationQueue
  4899  0006FE  6E3E               	movwf	fifo_init@p_fifo+1,c
  4900  000700  0E04               	movlw	4
  4901  000702  6E3F               	movwf	fifo_init@size,c
  4902  000704  ECE3  F005         	call	_fifo_init	;wreg free
  4903                           
  4904                           ;Application.c: 134:     TMR0_SetInterruptHandler(SetTick1S);
  4905  000708  0E8A               	movlw	low _SetTick1S
  4906  00070A  6E3D               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  4907  00070C  0E0D               	movlw	high _SetTick1S
  4908  00070E  6E3E               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  4909  000710  EC24  F008         	call	_TMR0_SetInterruptHandler	;wreg free
  4910                           
  4911                           ;Application.c: 137:     Ws0010Init();
  4912  000714  ECFC  F004         	call	_Ws0010Init	;wreg free
  4913                           
  4914                           ;Application.c: 140:     Ws0010PutGotoXY(1, 1);
  4915  000718  0E01               	movlw	1
  4916  00071A  6E41               	movwf	Ws0010PutGotoXY@posy,c
  4917  00071C  0E01               	movlw	1
  4918  00071E  ECB5  F007         	call	_Ws0010PutGotoXY
  4919                           
  4920                           ;Application.c: 141:     Ws0010BufGotoXY(1, 1);
  4921  000722  0E01               	movlw	1
  4922  000724  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  4923  000726  0E01               	movlw	1
  4924  000728  EC73  F007         	call	_Ws0010BufGotoXY
  4925                           
  4926                           ;Application.c: 142:     Ws0010BufBitmap(LogoClk, 180);
  4927  00072C  0E3E               	movlw	low _LogoClk
  4928  00072E  6E45               	movwf	Ws0010BufBitmap@Image,c
  4929  000730  0EFF               	movlw	high _LogoClk
  4930  000732  6E46               	movwf	Ws0010BufBitmap@Image+1,c
  4931  000734  0EB4               	movlw	180
  4932  000736  6E47               	movwf	Ws0010BufBitmap@Size,c
  4933  000738  ECAF  F003         	call	_Ws0010BufBitmap	;wreg free
  4934                           
  4935                           ;Application.c: 143:     Ws0010Refresh();
  4936  00073C  EC85  F006         	call	_Ws0010Refresh	;wreg free
  4937                           
  4938                           ;Application.c: 144:     DelayLongo();
  4939  000740  EC85  F007         	call	_DelayLongo	;wreg free
  4940                           
  4941                           ;Application.c: 145:     DelayLongo();
  4942  000744  EC85  F007         	call	_DelayLongo	;wreg free
  4943                           
  4944                           ;Application.c: 146:     Ws0010BufPatern(0x00, 200);
  4945  000748  0EC8               	movlw	200
  4946  00074A  6E3D               	movwf	Ws0010BufPatern@count,c
  4947  00074C  0E00               	movlw	0
  4948  00074E  EC17  F007         	call	_Ws0010BufPatern
  4949                           
  4950                           ;Application.c: 147:     Ws0010Refresh();
  4951  000752  EC85  F006         	call	_Ws0010Refresh	;wreg free
  4952                           
  4953                           ;Application.c: 148:     TMR0_StartTimer();
  4954  000756  EC30  F008         	call	_TMR0_StartTimer	;wreg free
  4955  00075A  908C               	bcf	3980,0,c	;volatile
  4956  00075C  0012               	return		;funcret
  4957  00075E                     __end_of_ProcessInit:
  4958                           	opt callstack 0
  4959                           
  4960 ;; *************** function _fifo_init *****************
  4961 ;; Defined at:
  4962 ;;		line 26 in file "Queue.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  p_fifo          2    2[COMRAM] PTR struct .
  4965 ;;		 -> AplicationQueue(24), 
  4966 ;;  size            1    4[COMRAM] unsigned char 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;		None
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1    wreg      void 
  4971 ;; Registers used:
  4972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4978 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;Total ram usage:        3 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; Hardware stack levels required when called:    4
  4985 ;; This function calls:
  4986 ;;		Nothing
  4987 ;; This function is called by:
  4988 ;;		_ProcessInit
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           	psect	text30
  4993  000BC6                     __ptext30:
  4994                           	opt callstack 0
  4995  000BC6                     _fifo_init:
  4996                           	opt callstack 25
  4997                           
  4998                           ;Queue.c: 26: void fifo_init(fifo_t* p_fifo, uint8_t size);Queue.c: 27: {;Queue.c: 28:  
      +                             if (p_fifo)
  4999                           
  5000                           ;incstack = 0
  5001  000BC6  503D               	movf	fifo_init@p_fifo,w,c
  5002  000BC8  103E               	iorwf	fifo_init@p_fifo+1,w,c
  5003  000BCA  B4D8               	btfsc	status,2,c
  5004  000BCC  0012               	return	
  5005                           
  5006                           ;Queue.c: 29:     {;Queue.c: 30:         p_fifo->v_data[0] = 0;
  5007  000BCE  EE20 F001          	lfsr	2,1
  5008  000BD2  503D               	movf	fifo_init@p_fifo,w,c
  5009  000BD4  26D9               	addwf	fsr2l,f,c
  5010  000BD6  503E               	movf	fifo_init@p_fifo+1,w,c
  5011  000BD8  22DA               	addwfc	fsr2h,f,c
  5012  000BDA  0E00               	movlw	0
  5013  000BDC  6EDF               	movwf	indf2,c
  5014                           
  5015                           ;Queue.c: 31:         p_fifo->size = size;
  5016  000BDE  C03D  FFD9         	movff	fifo_init@p_fifo,fsr2l
  5017  000BE2  C03E  FFDA         	movff	fifo_init@p_fifo+1,fsr2h
  5018  000BE6  C03F  FFDF         	movff	fifo_init@size,indf2
  5019                           
  5020                           ;Queue.c: 32:         p_fifo->full = 0;
  5021  000BEA  EE20 F017          	lfsr	2,23
  5022  000BEE  503D               	movf	fifo_init@p_fifo,w,c
  5023  000BF0  26D9               	addwf	fsr2l,f,c
  5024  000BF2  503E               	movf	fifo_init@p_fifo+1,w,c
  5025  000BF4  22DA               	addwfc	fsr2h,f,c
  5026  000BF6  0E00               	movlw	0
  5027  000BF8  6EDF               	movwf	indf2,c
  5028                           
  5029                           ;Queue.c: 33:         p_fifo->front = 0;
  5030  000BFA  EE20 F015          	lfsr	2,21
  5031  000BFE  503D               	movf	fifo_init@p_fifo,w,c
  5032  000C00  26D9               	addwf	fsr2l,f,c
  5033  000C02  503E               	movf	fifo_init@p_fifo+1,w,c
  5034  000C04  22DA               	addwfc	fsr2h,f,c
  5035  000C06  0E00               	movlw	0
  5036  000C08  6EDF               	movwf	indf2,c
  5037                           
  5038                           ;Queue.c: 34:         p_fifo->back = 0;
  5039  000C0A  EE20 F016          	lfsr	2,22
  5040  000C0E  503D               	movf	fifo_init@p_fifo,w,c
  5041  000C10  26D9               	addwf	fsr2l,f,c
  5042  000C12  503E               	movf	fifo_init@p_fifo+1,w,c
  5043  000C14  22DA               	addwfc	fsr2h,f,c
  5044  000C16  0E00               	movlw	0
  5045  000C18  6EDF               	movwf	indf2,c
  5046  000C1A  0012               	return		;funcret
  5047  000C1C                     __end_of_fifo_init:
  5048                           	opt callstack 0
  5049                           
  5050 ;; *************** function _Ws0010Refresh *****************
  5051 ;; Defined at:
  5052 ;;		line 326 in file "WS0010.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  j               1    9[COMRAM] unsigned char 
  5057 ;;  dado            1    8[COMRAM] unsigned char 
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      void 
  5060 ;; Registers used:
  5061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;Total ram usage:        2 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; Hardware stack levels required when called:    6
  5074 ;; This function calls:
  5075 ;;		_Ws0010PutByte
  5076 ;;		_Ws0010PutGotoXY
  5077 ;; This function is called by:
  5078 ;;		_ProcessInit
  5079 ;;		_PrintLed
  5080 ;;		_PrintData
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text31
  5085  000D0A                     __ptext31:
  5086                           	opt callstack 0
  5087  000D0A                     _Ws0010Refresh:
  5088                           	opt callstack 22
  5089                           
  5090                           ;WS0010.c: 328:     uint8_t j, dado;;WS0010.c: 329:     Ws0010PutGotoXY(1, 1);
  5091                           
  5092                           ;incstack = 0
  5093  000D0A  0E01               	movlw	1
  5094  000D0C  6E41               	movwf	Ws0010PutGotoXY@posy,c
  5095  000D0E  0E01               	movlw	1
  5096  000D10  ECB5  F007         	call	_Ws0010PutGotoXY
  5097                           
  5098                           ;WS0010.c: 331:     for (j = 0; j < 200; j++)
  5099  000D14  0E00               	movlw	0
  5100  000D16  6E44               	movwf	Ws0010Refresh@j,c
  5101  000D18                     l2304:
  5102                           
  5103                           ;WS0010.c: 332:     {;WS0010.c: 333:         dado = Ws0010_buffer[j];
  5104  000D18  0E00               	movlw	low _Ws0010_buffer
  5105  000D1A  2444               	addwf	Ws0010Refresh@j,w,c
  5106  000D1C  6ED9               	movwf	fsr2l,c
  5107  000D1E  6ADA               	clrf	fsr2h,c
  5108  000D20  0E01               	movlw	high _Ws0010_buffer
  5109  000D22  22DA               	addwfc	fsr2h,f,c
  5110  000D24  50DF               	movf	indf2,w,c
  5111  000D26  6E43               	movwf	Ws0010Refresh@dado,c
  5112                           
  5113                           ;WS0010.c: 334:         if (!dado)
  5114  000D28  5043               	movf	Ws0010Refresh@dado,w,c
  5115  000D2A  A4D8               	btfss	status,2,c
  5116  000D2C  D005               	goto	l561
  5117                           
  5118                           ;WS0010.c: 335:             Ws0010PutByte(0, 0x06);
  5119  000D2E  0E06               	movlw	6
  5120  000D30  6E3D               	movwf	Ws0010PutByte@fras,c
  5121  000D32  0E00               	movlw	0
  5122  000D34  EC0B  F004         	call	_Ws0010PutByte
  5123  000D38                     l561:
  5124                           
  5125                           ;WS0010.c: 336:         Ws0010PutByte(1, dado);
  5126  000D38  C043  F03D         	movff	Ws0010Refresh@dado,Ws0010PutByte@fras
  5127  000D3C  0E01               	movlw	1
  5128  000D3E  EC0B  F004         	call	_Ws0010PutByte
  5129                           
  5130                           ;WS0010.c: 337:     }
  5131  000D42  2A44               	incf	Ws0010Refresh@j,f,c
  5132  000D44  0EC7               	movlw	199
  5133  000D46  6444               	cpfsgt	Ws0010Refresh@j,c
  5134  000D48  D7E7               	goto	l2304
  5135  000D4A  0012               	return	
  5136  000D4C                     __end_of_Ws0010Refresh:
  5137                           	opt callstack 0
  5138                           
  5139 ;; *************** function _Ws0010PutGotoXY *****************
  5140 ;; Defined at:
  5141 ;;		line 125 in file "WS0010.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  posx            1    wreg     unsigned char 
  5144 ;;  posy            1    6[COMRAM] unsigned char 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  posx            1    7[COMRAM] unsigned char 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, status,2, status,0, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5156 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;Total ram usage:        2 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:    5
  5163 ;; This function calls:
  5164 ;;		_Ws0010PutByte
  5165 ;; This function is called by:
  5166 ;;		_ProcessInit
  5167 ;;		_PrintData
  5168 ;;		_Ws0010Refresh
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text32
  5173  000F6A                     __ptext32:
  5174                           	opt callstack 0
  5175  000F6A                     _Ws0010PutGotoXY:
  5176                           	opt callstack 22
  5177                           
  5178                           ;incstack = 0
  5179                           ;Ws0010PutGotoXY@posx stored from wreg
  5180  000F6A  6E42               	movwf	Ws0010PutGotoXY@posx,c
  5181                           
  5182                           ;WS0010.c: 125: void Ws0010PutGotoXY(uint8_t posx, uint8_t posy);WS0010.c: 126: {;WS0010
      +                          .c: 127:     Ws0010PutByte(0, posx + 0x7F);
  5183  000F6C  5042               	movf	Ws0010PutGotoXY@posx,w,c
  5184  000F6E  0F7F               	addlw	127
  5185  000F70  6E3D               	movwf	Ws0010PutByte@fras,c
  5186  000F72  0E00               	movlw	0
  5187  000F74  EC0B  F004         	call	_Ws0010PutByte
  5188                           
  5189                           ;WS0010.c: 128:     Ws0010PutByte(0, posy + 0x3F);
  5190  000F78  5041               	movf	Ws0010PutGotoXY@posy,w,c
  5191  000F7A  0F3F               	addlw	63
  5192  000F7C  6E3D               	movwf	Ws0010PutByte@fras,c
  5193  000F7E  0E00               	movlw	0
  5194  000F80  EC0B  F004         	call	_Ws0010PutByte
  5195  000F84  0012               	return		;funcret
  5196  000F86                     __end_of_Ws0010PutGotoXY:
  5197                           	opt callstack 0
  5198                           
  5199 ;; *************** function _Ws0010PutByte *****************
  5200 ;; Defined at:
  5201 ;;		line 41 in file "WS0010.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  end             1    wreg     unsigned char 
  5204 ;;  fras            1    2[COMRAM] unsigned char 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  end             1    5[COMRAM] unsigned char 
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  1    wreg      void 
  5209 ;; Registers used:
  5210 ;;		wreg, status,2, status,0
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5216 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;Total ram usage:        4 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; Hardware stack levels required when called:    4
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_Ws0010PutGotoXY
  5227 ;;		_Ws0010Refresh
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text33
  5232  000816                     __ptext33:
  5233                           	opt callstack 0
  5234  000816                     _Ws0010PutByte:
  5235                           	opt callstack 22
  5236                           
  5237                           ;incstack = 0
  5238                           ;Ws0010PutByte@end stored from wreg
  5239  000816  6E40               	movwf	Ws0010PutByte@end,c
  5240                           
  5241                           ;WS0010.c: 41: void Ws0010PutByte(uint8_t end, uint8_t fras);WS0010.c: 42: {;WS0010.c: 4
      +                          3:     TRISA &= 0xF0;
  5242  000818  0EF0               	movlw	240
  5243  00081A  1692               	andwf	3986,f,c	;volatile
  5244                           
  5245                           ;WS0010.c: 44:     LATEbits.LATE0 = end;
  5246  00081C  B040               	btfsc	Ws0010PutByte@end,0,c
  5247  00081E  D002               	bra	u1005
  5248  000820  908D               	bcf	3981,0,c	;volatile
  5249  000822  D001               	bra	u1006
  5250  000824                     u1005:
  5251  000824  808D               	bsf	3981,0,c	;volatile
  5252  000826                     u1006:
  5253                           
  5254                           ;WS0010.c: 47:     fras = ((fras & 0x0F) << 4 | (fras & 0xF0) >> 4);
  5255  000826  C03D  F03E         	movff	Ws0010PutByte@fras,??_Ws0010PutByte
  5256  00082A  3A3E               	swapf	??_Ws0010PutByte,f,c
  5257  00082C  0E0F               	movlw	15
  5258  00082E  163E               	andwf	??_Ws0010PutByte,f,c
  5259  000830  0E0F               	movlw	15
  5260  000832  163E               	andwf	??_Ws0010PutByte,f,c
  5261  000834  C03D  F03F         	movff	Ws0010PutByte@fras,??_Ws0010PutByte+1
  5262  000838  0E0F               	movlw	15
  5263  00083A  163F               	andwf	??_Ws0010PutByte+1,f,c
  5264  00083C  383F               	swapf	??_Ws0010PutByte+1,w,c
  5265  00083E  0BF0               	andlw	240
  5266  000840  103E               	iorwf	??_Ws0010PutByte,w,c
  5267  000842  6E3D               	movwf	Ws0010PutByte@fras,c
  5268                           
  5269                           ;WS0010.c: 51:     LATA &= 0xF0;
  5270  000844  0EF0               	movlw	240
  5271  000846  1689               	andwf	3977,f,c	;volatile
  5272                           
  5273                           ;WS0010.c: 52:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5274  000848  0E21               	movlw	33
  5275  00084A                     u1807:
  5276  00084A  2EE8               	decfsz	wreg,f,c
  5277  00084C  D7FE               	bra	u1807
  5278  00084E  F000               	nop	
  5279                           
  5280                           ;WS0010.c: 53:     (LATA |= (fras & 0x0F));
  5281  000850  503D               	movf	Ws0010PutByte@fras,w,c
  5282  000852  0B0F               	andlw	15
  5283  000854  1289               	iorwf	3977,f,c	;volatile
  5284                           
  5285                           ;WS0010.c: 54:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5286  000856  0E21               	movlw	33
  5287  000858                     u1817:
  5288  000858  2EE8               	decfsz	wreg,f,c
  5289  00085A  D7FE               	bra	u1817
  5290  00085C  F000               	nop	
  5291                           
  5292                           ;WS0010.c: 55:     LATEbits.LATE1 = 1;
  5293  00085E  828D               	bsf	3981,1,c	;volatile
  5294                           
  5295                           ;WS0010.c: 56:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5296  000860  0E21               	movlw	33
  5297  000862                     u1827:
  5298  000862  2EE8               	decfsz	wreg,f,c
  5299  000864  D7FE               	bra	u1827
  5300  000866  F000               	nop	
  5301                           
  5302                           ;WS0010.c: 57:     LATEbits.LATE1 = 0;
  5303  000868  928D               	bcf	3981,1,c	;volatile
  5304                           
  5305                           ;WS0010.c: 58:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5306  00086A  0E21               	movlw	33
  5307  00086C                     u1837:
  5308  00086C  2EE8               	decfsz	wreg,f,c
  5309  00086E  D7FE               	bra	u1837
  5310  000870  F000               	nop	
  5311                           
  5312                           ;WS0010.c: 59:     LATEbits.LATE0 = end;
  5313  000872  B040               	btfsc	Ws0010PutByte@end,0,c
  5314  000874  D002               	bra	u1015
  5315  000876  908D               	bcf	3981,0,c	;volatile
  5316  000878  D001               	bra	u1016
  5317  00087A                     u1015:
  5318  00087A  808D               	bsf	3981,0,c	;volatile
  5319  00087C                     u1016:
  5320                           
  5321                           ;WS0010.c: 61:     fras = ((fras & 0x0F) << 4 | (fras & 0xF0) >> 4);
  5322  00087C  C03D  F03E         	movff	Ws0010PutByte@fras,??_Ws0010PutByte
  5323  000880  3A3E               	swapf	??_Ws0010PutByte,f,c
  5324  000882  0E0F               	movlw	15
  5325  000884  163E               	andwf	??_Ws0010PutByte,f,c
  5326  000886  0E0F               	movlw	15
  5327  000888  163E               	andwf	??_Ws0010PutByte,f,c
  5328  00088A  C03D  F03F         	movff	Ws0010PutByte@fras,??_Ws0010PutByte+1
  5329  00088E  0E0F               	movlw	15
  5330  000890  163F               	andwf	??_Ws0010PutByte+1,f,c
  5331  000892  383F               	swapf	??_Ws0010PutByte+1,w,c
  5332  000894  0BF0               	andlw	240
  5333  000896  103E               	iorwf	??_Ws0010PutByte,w,c
  5334  000898  6E3D               	movwf	Ws0010PutByte@fras,c
  5335                           
  5336                           ;WS0010.c: 63:     LATA &= 0xF0;
  5337  00089A  0EF0               	movlw	240
  5338  00089C  1689               	andwf	3977,f,c	;volatile
  5339                           
  5340                           ;WS0010.c: 64:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5341  00089E  0E21               	movlw	33
  5342  0008A0                     u1847:
  5343  0008A0  2EE8               	decfsz	wreg,f,c
  5344  0008A2  D7FE               	bra	u1847
  5345  0008A4  F000               	nop	
  5346                           
  5347                           ;WS0010.c: 65:     (LATA |= (fras & 0x0F));
  5348  0008A6  503D               	movf	Ws0010PutByte@fras,w,c
  5349  0008A8  0B0F               	andlw	15
  5350  0008AA  1289               	iorwf	3977,f,c	;volatile
  5351                           
  5352                           ;WS0010.c: 66:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5353  0008AC  0E21               	movlw	33
  5354  0008AE                     u1857:
  5355  0008AE  2EE8               	decfsz	wreg,f,c
  5356  0008B0  D7FE               	bra	u1857
  5357  0008B2  F000               	nop	
  5358                           
  5359                           ;WS0010.c: 67:     LATEbits.LATE1 = 1;
  5360  0008B4  828D               	bsf	3981,1,c	;volatile
  5361                           
  5362                           ;WS0010.c: 68:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5363  0008B6  0E21               	movlw	33
  5364  0008B8                     u1867:
  5365  0008B8  2EE8               	decfsz	wreg,f,c
  5366  0008BA  D7FE               	bra	u1867
  5367  0008BC  F000               	nop	
  5368                           
  5369                           ;WS0010.c: 69:     LATEbits.LATE1 = 0;
  5370  0008BE  928D               	bcf	3981,1,c	;volatile
  5371                           
  5372                           ;WS0010.c: 70:     _delay((unsigned long)((10)*(40000000/4000000.0)));
  5373  0008C0  0E21               	movlw	33
  5374  0008C2                     u1877:
  5375  0008C2  2EE8               	decfsz	wreg,f,c
  5376  0008C4  D7FE               	bra	u1877
  5377  0008C6  F000               	nop	
  5378  0008C8  0012               	return		;funcret
  5379  0008CA                     __end_of_Ws0010PutByte:
  5380                           	opt callstack 0
  5381                           
  5382 ;; *************** function _Ws0010Init *****************
  5383 ;; Defined at:
  5384 ;;		line 88 in file "WS0010.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;		None
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;  init           14    2[COMRAM] unsigned char [14]
  5389 ;;  i               1   16[COMRAM] unsigned char 
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      void 
  5392 ;; Registers used:
  5393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5400 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5403 ;;Total ram usage:       15 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; Hardware stack levels required when called:    4
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_ProcessInit
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text34
  5414  0009F8                     __ptext34:
  5415                           	opt callstack 0
  5416  0009F8                     _Ws0010Init:
  5417                           	opt callstack 25
  5418                           
  5419                           ;WS0010.c: 93:     uint8_t init[14] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x22, 0x88, 0
      +                          x00, 0xCC, 0x11, 0xFF, 0x00, 0x66};
  5420                           
  5421                           ;incstack = 0
  5422  0009F8  EE20  F001         	lfsr	2,Ws0010Init@F3174
  5423  0009FC  EE10  F03D         	lfsr	1,Ws0010Init@init
  5424  000A00  0E0D               	movlw	13
  5425  000A02                     u1301:
  5426  000A02  CFDB FFE3          	movff	plusw2,plusw1
  5427  000A06  06E8               	decf	wreg,f,c
  5428  000A08  E2FC               	bc	u1301
  5429                           
  5430                           ;WS0010.c: 98:     uint8_t i;;WS0010.c: 100:     TRISEbits.TRISE1 = 0;
  5431  000A0A  9296               	bcf	3990,1,c	;volatile
  5432                           
  5433                           ;WS0010.c: 101:     TRISEbits.TRISE0 = 0;
  5434  000A0C  9096               	bcf	3990,0,c	;volatile
  5435                           
  5436                           ;WS0010.c: 103:     for (i = 0; i < 14; i++)
  5437  000A0E  0E00               	movlw	0
  5438  000A10  6E4B               	movwf	Ws0010Init@i,c
  5439  000A12                     l2498:
  5440                           
  5441                           ;WS0010.c: 104:     {;WS0010.c: 105:         TRISA &= 0xF0;
  5442  000A12  0EF0               	movlw	240
  5443  000A14  1692               	andwf	3986,f,c	;volatile
  5444                           
  5445                           ;WS0010.c: 106:         LATEbits.LATE0 = 0;
  5446  000A16  908D               	bcf	3981,0,c	;volatile
  5447                           
  5448                           ;WS0010.c: 107:         LATA &= 0xF0;
  5449  000A18  0EF0               	movlw	240
  5450  000A1A  1689               	andwf	3977,f,c	;volatile
  5451                           
  5452                           ;WS0010.c: 108:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5453  000A1C  0E21               	movlw	33
  5454  000A1E                     u1887:
  5455  000A1E  2EE8               	decfsz	wreg,f,c
  5456  000A20  D7FE               	bra	u1887
  5457  000A22  F000               	nop	
  5458                           
  5459                           ;WS0010.c: 109:         (LATA |= (init[i] & 0x0F));
  5460  000A24  0E3D               	movlw	low Ws0010Init@init
  5461  000A26  244B               	addwf	Ws0010Init@i,w,c
  5462  000A28  6ED9               	movwf	fsr2l,c
  5463  000A2A  6ADA               	clrf	fsr2h,c
  5464  000A2C  0E00               	movlw	high Ws0010Init@init
  5465  000A2E  22DA               	addwfc	fsr2h,f,c
  5466  000A30  50DF               	movf	indf2,w,c
  5467  000A32  0B0F               	andlw	15
  5468  000A34  1289               	iorwf	3977,f,c	;volatile
  5469                           
  5470                           ;WS0010.c: 110:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5471  000A36  0E21               	movlw	33
  5472  000A38                     u1897:
  5473  000A38  2EE8               	decfsz	wreg,f,c
  5474  000A3A  D7FE               	bra	u1897
  5475  000A3C  F000               	nop	
  5476                           
  5477                           ;WS0010.c: 111:         LATEbits.LATE1 = 1;
  5478  000A3E  828D               	bsf	3981,1,c	;volatile
  5479                           
  5480                           ;WS0010.c: 112:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5481  000A40  0E21               	movlw	33
  5482  000A42                     u1907:
  5483  000A42  2EE8               	decfsz	wreg,f,c
  5484  000A44  D7FE               	bra	u1907
  5485  000A46  F000               	nop	
  5486                           
  5487                           ;WS0010.c: 113:         LATEbits.LATE1 = 0;
  5488  000A48  928D               	bcf	3981,1,c	;volatile
  5489                           
  5490                           ;WS0010.c: 114:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5491  000A4A  0E21               	movlw	33
  5492  000A4C                     u1917:
  5493  000A4C  2EE8               	decfsz	wreg,f,c
  5494  000A4E  D7FE               	bra	u1917
  5495  000A50  F000               	nop	
  5496                           
  5497                           ;WS0010.c: 115:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5498  000A52  0E21               	movlw	33
  5499  000A54                     u1927:
  5500  000A54  2EE8               	decfsz	wreg,f,c
  5501  000A56  D7FE               	bra	u1927
  5502  000A58  F000               	nop	
  5503                           
  5504                           ;WS0010.c: 116:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5505  000A5A  0E21               	movlw	33
  5506  000A5C                     u1937:
  5507  000A5C  2EE8               	decfsz	wreg,f,c
  5508  000A5E  D7FE               	bra	u1937
  5509  000A60  F000               	nop	
  5510                           
  5511                           ;WS0010.c: 117:         _delay((unsigned long)((10)*(40000000/4000000.0)));
  5512  000A62  0E21               	movlw	33
  5513  000A64                     u1947:
  5514  000A64  2EE8               	decfsz	wreg,f,c
  5515  000A66  D7FE               	bra	u1947
  5516  000A68  F000               	nop	
  5517                           
  5518                           ;WS0010.c: 118:     }
  5519  000A6A  2A4B               	incf	Ws0010Init@i,f,c
  5520  000A6C  0E0D               	movlw	13
  5521  000A6E  644B               	cpfsgt	Ws0010Init@i,c
  5522  000A70  D7D0               	goto	l2498
  5523  000A72  0012               	return	
  5524  000A74                     __end_of_Ws0010Init:
  5525                           	opt callstack 0
  5526                           
  5527 ;; *************** function _Ws0010BufPatern *****************
  5528 ;; Defined at:
  5529 ;;		line 293 in file "WS0010.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  dado            1    wreg     unsigned char 
  5532 ;;  count           1    2[COMRAM] unsigned char 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  dado            1    3[COMRAM] unsigned char 
  5535 ;;  i               1    4[COMRAM] unsigned char 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  1    wreg      void 
  5538 ;; Registers used:
  5539 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5545 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5548 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;Total ram usage:        3 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    4
  5552 ;; This function calls:
  5553 ;;		Nothing
  5554 ;; This function is called by:
  5555 ;;		_ProcessInit
  5556 ;;		_PrintLed
  5557 ;;		_PrintData
  5558 ;;		_Ws0010BufBinary
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text35
  5563  000E2E                     __ptext35:
  5564                           	opt callstack 0
  5565  000E2E                     _Ws0010BufPatern:
  5566                           	opt callstack 24
  5567                           
  5568                           ;incstack = 0
  5569                           ;Ws0010BufPatern@dado stored from wreg
  5570  000E2E  6E3E               	movwf	Ws0010BufPatern@dado,c
  5571                           
  5572                           ;WS0010.c: 293: void Ws0010BufPatern(uint8_t dado, uint8_t count);WS0010.c: 294: {;WS001
      +                          0.c: 295:     uint8_t i;;WS0010.c: 296:     if (count > 200)
  5573  000E30  0EC8               	movlw	200
  5574  000E32  643D               	cpfsgt	Ws0010BufPatern@count,c
  5575  000E34  D002               	goto	l544
  5576                           
  5577                           ;WS0010.c: 297:         count = 200;
  5578  000E36  0EC8               	movlw	200
  5579  000E38  6E3D               	movwf	Ws0010BufPatern@count,c
  5580  000E3A                     l544:
  5581                           
  5582                           ;WS0010.c: 298:     for (i = 0; i < count; i++)
  5583  000E3A  0E00               	movlw	0
  5584  000E3C  6E3F               	movwf	Ws0010BufPatern@i,c
  5585  000E3E  D00B               	goto	l2324
  5586  000E40                     l2318:
  5587                           
  5588                           ;WS0010.c: 299:     {;WS0010.c: 300:         Ws0010_buffer[ptr++] = dado;
  5589  000E40  0E00               	movlw	low _Ws0010_buffer
  5590  000E42  241F               	addwf	_ptr,w,c
  5591  000E44  6ED9               	movwf	fsr2l,c
  5592  000E46  0E01               	movlw	high _Ws0010_buffer
  5593  000E48  2020               	addwfc	_ptr+1,w,c
  5594  000E4A  6EDA               	movwf	fsr2h,c
  5595  000E4C  C03E  FFDF         	movff	Ws0010BufPatern@dado,indf2
  5596  000E50  4A1F               	infsnz	_ptr,f,c
  5597  000E52  2A20               	incf	_ptr+1,f,c
  5598                           
  5599                           ;WS0010.c: 301:     }
  5600  000E54  2A3F               	incf	Ws0010BufPatern@i,f,c
  5601  000E56                     l2324:
  5602  000E56  503D               	movf	Ws0010BufPatern@count,w,c
  5603  000E58  5C3F               	subwf	Ws0010BufPatern@i,w,c
  5604  000E5A  B0D8               	btfsc	status,0,c
  5605  000E5C  0012               	return	
  5606  000E5E  D7F0               	goto	l2318
  5607  000E60                     __end_of_Ws0010BufPatern:
  5608                           	opt callstack 0
  5609                           
  5610 ;; *************** function _Ws0010BufBitmap *****************
  5611 ;; Defined at:
  5612 ;;		line 344 in file "WS0010.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  Image           2   10[COMRAM] PTR const unsigned char 
  5615 ;;		 -> LogoClk(180), 
  5616 ;;  Size            1   12[COMRAM] unsigned char 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  j               2   16[COMRAM] unsigned short 
  5619 ;;  gap             1   15[COMRAM] unsigned char 
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5629 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5633 ;;Total ram usage:        8 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    5
  5636 ;; This function calls:
  5637 ;;		_Ws0010BufGotoXY
  5638 ;;		___awdiv
  5639 ;; This function is called by:
  5640 ;;		_ProcessInit
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text36
  5645  00075E                     __ptext36:
  5646                           	opt callstack 0
  5647  00075E                     _Ws0010BufBitmap:
  5648                           	opt callstack 24
  5649                           
  5650                           ;WS0010.c: 344: void Ws0010BufBitmap(const uint8_t* Image, uint8_t Size);WS0010.c: 345: 
      +                          {;WS0010.c: 346:     uint8_t gap;;WS0010.c: 347:     uint16_t j;;WS0010.c: 348:     gap 
      +                          = (200 - Size) / 4;
  5651                           
  5652                           ;incstack = 0
  5653  00075E  5047               	movf	Ws0010BufBitmap@Size,w,c
  5654  000760  08C8               	sublw	200
  5655  000762  6E3D               	movwf	___awdiv@dividend,c
  5656  000764  0E00               	movlw	0
  5657  000766  A0D8               	btfss	status,0,c
  5658  000768  2AE8               	incf	wreg,f,c
  5659  00076A  0800               	sublw	0
  5660  00076C  6E3E               	movwf	___awdiv@dividend+1,c
  5661  00076E  0E00               	movlw	0
  5662  000770  6E40               	movwf	___awdiv@divisor+1,c
  5663  000772  0E04               	movlw	4
  5664  000774  6E3F               	movwf	___awdiv@divisor,c
  5665  000776  ECBA  F004         	call	___awdiv	;wreg free
  5666  00077A  503D               	movf	?___awdiv,w,c
  5667  00077C  6E4A               	movwf	Ws0010BufBitmap@gap,c
  5668                           
  5669                           ;WS0010.c: 349:     Ws0010BufGotoXY(1, 1);
  5670  00077E  0E01               	movlw	1
  5671  000780  6E3D               	movwf	Ws0010BufGotoXY@posy,c
  5672  000782  0E01               	movlw	1
  5673  000784  EC73  F007         	call	_Ws0010BufGotoXY
  5674                           
  5675                           ;WS0010.c: 350:     for (j = 0; j < Size; j++)
  5676  000788  0E00               	movlw	0
  5677  00078A  6E4C               	movwf	Ws0010BufBitmap@j+1,c
  5678  00078C  0E00               	movlw	0
  5679  00078E  6E4B               	movwf	Ws0010BufBitmap@j,c
  5680  000790  D038               	goto	l2542
  5681  000792                     l2532:
  5682                           
  5683                           ;WS0010.c: 351:     {;WS0010.c: 352:         if (j < Size / 2)
  5684  000792  C047  F03D         	movff	Ws0010BufBitmap@Size,___awdiv@dividend
  5685  000796  6A3E               	clrf	___awdiv@dividend+1,c
  5686  000798  0E00               	movlw	0
  5687  00079A  6E40               	movwf	___awdiv@divisor+1,c
  5688  00079C  0E02               	movlw	2
  5689  00079E  6E3F               	movwf	___awdiv@divisor,c
  5690  0007A0  ECBA  F004         	call	___awdiv	;wreg free
  5691  0007A4  503D               	movf	?___awdiv,w,c
  5692  0007A6  5C4B               	subwf	Ws0010BufBitmap@j,w,c
  5693  0007A8  503E               	movf	?___awdiv+1,w,c
  5694  0007AA  584C               	subwfb	Ws0010BufBitmap@j+1,w,c
  5695  0007AC  B0D8               	btfsc	status,0,c
  5696  0007AE  D00D               	goto	l2536
  5697                           
  5698                           ;WS0010.c: 353:             Ws0010_buffer[j + gap] = *Image;
  5699  0007B0  C045  FFF6         	movff	Ws0010BufBitmap@Image,tblptrl
  5700  0007B4  C046  FFF7         	movff	Ws0010BufBitmap@Image+1,tblptrh
  5701  0007B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5702  0007B8  6AF8               	clrf	tblptru,c
  5703  0007BA                     	endif
  5704  0007BA                     	if	0	;tblptru may be non-zero
  5705  0007BA                     	endif
  5706  0007BA  0E00               	movlw	low _Ws0010_buffer
  5707  0007BC  6E48               	movwf	??_Ws0010BufBitmap& (0+255),c
  5708  0007BE  0E01               	movlw	high _Ws0010_buffer
  5709  0007C0  6E49               	movwf	(??_Ws0010BufBitmap+1)& (0+255),c
  5710  0007C2  504A               	movf	Ws0010BufBitmap@gap,w,c
  5711  0007C4  2648               	addwf	??_Ws0010BufBitmap,f,c
  5712  0007C6  0E00               	movlw	0
  5713  0007C8  D00E               	goto	L4
  5714  0007CA                     l2536:
  5715                           
  5716                           ;WS0010.c: 355:             Ws0010_buffer[j + (3 * gap)] = *Image;
  5717  0007CA  C045  FFF6         	movff	Ws0010BufBitmap@Image,tblptrl
  5718  0007CE  C046  FFF7         	movff	Ws0010BufBitmap@Image+1,tblptrh
  5719  0007D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5720  0007D2  6AF8               	clrf	tblptru,c
  5721  0007D4                     	endif
  5722  0007D4                     	if	0	;tblptru may be non-zero
  5723  0007D4                     	endif
  5724  0007D4  504A               	movf	Ws0010BufBitmap@gap,w,c
  5725  0007D6  0D03               	mullw	3
  5726  0007D8  0E00               	movlw	low _Ws0010_buffer
  5727  0007DA  6E48               	movwf	??_Ws0010BufBitmap& (0+255),c
  5728  0007DC  0E01               	movlw	high _Ws0010_buffer
  5729  0007DE  6E49               	movwf	(??_Ws0010BufBitmap+1)& (0+255),c
  5730  0007E0  50F3               	movf	prodl,w,c
  5731  0007E2  2648               	addwf	??_Ws0010BufBitmap,f,c
  5732  0007E4  50F4               	movf	prodh,w,c
  5733  0007E6                     L4:
  5734  0007E6  2249               	addwfc	??_Ws0010BufBitmap+1,f,c
  5735  0007E8  504B               	movf	Ws0010BufBitmap@j,w,c
  5736  0007EA  2448               	addwf	??_Ws0010BufBitmap,w,c
  5737  0007EC  6ED9               	movwf	fsr2l,c
  5738  0007EE  504C               	movf	Ws0010BufBitmap@j+1,w,c
  5739  0007F0  2049               	addwfc	??_Ws0010BufBitmap+1,w,c
  5740  0007F2  6EDA               	movwf	fsr2h,c
  5741  0007F4  0008               	tblrd		*
  5742  0007F6  CFF5 FFDF          	movff	tablat,indf2
  5743                           
  5744                           ;WS0010.c: 357:         Image++;
  5745  0007FA  4A45               	infsnz	Ws0010BufBitmap@Image,f,c
  5746  0007FC  2A46               	incf	Ws0010BufBitmap@Image+1,f,c
  5747                           
  5748                           ;WS0010.c: 358:     }
  5749  0007FE  4A4B               	infsnz	Ws0010BufBitmap@j,f,c
  5750  000800  2A4C               	incf	Ws0010BufBitmap@j+1,f,c
  5751  000802                     l2542:
  5752  000802  5047               	movf	Ws0010BufBitmap@Size,w,c
  5753  000804  6E48               	movwf	??_Ws0010BufBitmap& (0+255),c
  5754  000806  6A49               	clrf	(??_Ws0010BufBitmap+1)& (0+255),c
  5755  000808  5048               	movf	??_Ws0010BufBitmap,w,c
  5756  00080A  5C4B               	subwf	Ws0010BufBitmap@j,w,c
  5757  00080C  5049               	movf	??_Ws0010BufBitmap+1,w,c
  5758  00080E  584C               	subwfb	Ws0010BufBitmap@j+1,w,c
  5759  000810  B0D8               	btfsc	status,0,c
  5760  000812  0012               	return	
  5761  000814  D7BE               	goto	l2532
  5762  000816                     __end_of_Ws0010BufBitmap:
  5763                           	opt callstack 0
  5764                           
  5765 ;; *************** function ___awdiv *****************
  5766 ;; Defined at:
  5767 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  dividend        2    2[COMRAM] int 
  5770 ;;  divisor         2    4[COMRAM] int 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  quotient        2    8[COMRAM] int 
  5773 ;;  sign            1    7[COMRAM] unsigned char 
  5774 ;;  counter         1    6[COMRAM] unsigned char 
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  2    2[COMRAM] int 
  5777 ;; Registers used:
  5778 ;;		wreg, status,2, status,0
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5784 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;Total ram usage:        8 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:    4
  5791 ;; This function calls:
  5792 ;;		Nothing
  5793 ;; This function is called by:
  5794 ;;		_Ws0010BufBitmap
  5795 ;;		_Ws0010Bufu8
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           	psect	text37
  5800  000974                     __ptext37:
  5801                           	opt callstack 0
  5802  000974                     ___awdiv:
  5803                           	opt callstack 24
  5804                           
  5805                           ;incstack = 0
  5806  000974  0E00               	movlw	0
  5807  000976  6E42               	movwf	___awdiv@sign,c
  5808  000978  AE40               	btfss	___awdiv@divisor+1,7,c
  5809  00097A  D006               	goto	l2410
  5810  00097C  6C3F               	negf	___awdiv@divisor,c
  5811  00097E  1E40               	comf	___awdiv@divisor+1,f,c
  5812  000980  B0D8               	btfsc	status,0,c
  5813  000982  2A40               	incf	___awdiv@divisor+1,f,c
  5814  000984  0E01               	movlw	1
  5815  000986  6E42               	movwf	___awdiv@sign,c
  5816  000988                     l2410:
  5817  000988  AE3E               	btfss	___awdiv@dividend+1,7,c
  5818  00098A  D006               	goto	l2416
  5819  00098C  6C3D               	negf	___awdiv@dividend,c
  5820  00098E  1E3E               	comf	___awdiv@dividend+1,f,c
  5821  000990  B0D8               	btfsc	status,0,c
  5822  000992  2A3E               	incf	___awdiv@dividend+1,f,c
  5823  000994  0E01               	movlw	1
  5824  000996  1A42               	xorwf	___awdiv@sign,f,c
  5825  000998                     l2416:
  5826  000998  0E00               	movlw	0
  5827  00099A  6E44               	movwf	___awdiv@quotient+1,c
  5828  00099C  0E00               	movlw	0
  5829  00099E  6E43               	movwf	___awdiv@quotient,c
  5830  0009A0  503F               	movf	___awdiv@divisor,w,c
  5831  0009A2  1040               	iorwf	___awdiv@divisor+1,w,c
  5832  0009A4  B4D8               	btfsc	status,2,c
  5833  0009A6  D01C               	goto	l2438
  5834  0009A8  0E01               	movlw	1
  5835  0009AA  6E41               	movwf	___awdiv@counter,c
  5836  0009AC  D004               	goto	l2424
  5837  0009AE                     l2422:
  5838  0009AE  90D8               	bcf	status,0,c
  5839  0009B0  363F               	rlcf	___awdiv@divisor,f,c
  5840  0009B2  3640               	rlcf	___awdiv@divisor+1,f,c
  5841  0009B4  2A41               	incf	___awdiv@counter,f,c
  5842  0009B6                     l2424:
  5843  0009B6  AE40               	btfss	___awdiv@divisor+1,7,c
  5844  0009B8  D7FA               	goto	l2422
  5845  0009BA                     u1260:
  5846  0009BA  90D8               	bcf	status,0,c
  5847  0009BC  3643               	rlcf	___awdiv@quotient,f,c
  5848  0009BE  3644               	rlcf	___awdiv@quotient+1,f,c
  5849  0009C0  503F               	movf	___awdiv@divisor,w,c
  5850  0009C2  5C3D               	subwf	___awdiv@dividend,w,c
  5851  0009C4  5040               	movf	___awdiv@divisor+1,w,c
  5852  0009C6  583E               	subwfb	___awdiv@dividend+1,w,c
  5853  0009C8  A0D8               	btfss	status,0,c
  5854  0009CA  D005               	goto	l2434
  5855  0009CC  503F               	movf	___awdiv@divisor,w,c
  5856  0009CE  5E3D               	subwf	___awdiv@dividend,f,c
  5857  0009D0  5040               	movf	___awdiv@divisor+1,w,c
  5858  0009D2  5A3E               	subwfb	___awdiv@dividend+1,f,c
  5859  0009D4  8043               	bsf	___awdiv@quotient,0,c
  5860  0009D6                     l2434:
  5861  0009D6  90D8               	bcf	status,0,c
  5862  0009D8  3240               	rrcf	___awdiv@divisor+1,f,c
  5863  0009DA  323F               	rrcf	___awdiv@divisor,f,c
  5864  0009DC  2E41               	decfsz	___awdiv@counter,f,c
  5865  0009DE  D7ED               	goto	u1260
  5866  0009E0                     l2438:
  5867  0009E0  5042               	movf	___awdiv@sign,w,c
  5868  0009E2  B4D8               	btfsc	status,2,c
  5869  0009E4  D004               	goto	l2442
  5870  0009E6  6C43               	negf	___awdiv@quotient,c
  5871  0009E8  1E44               	comf	___awdiv@quotient+1,f,c
  5872  0009EA  B0D8               	btfsc	status,0,c
  5873  0009EC  2A44               	incf	___awdiv@quotient+1,f,c
  5874  0009EE                     l2442:
  5875  0009EE  C043  F03D         	movff	___awdiv@quotient,?___awdiv
  5876  0009F2  C044  F03E         	movff	___awdiv@quotient+1,?___awdiv+1
  5877  0009F6  0012               	return		;funcret
  5878  0009F8                     __end_of___awdiv:
  5879                           	opt callstack 0
  5880                           
  5881 ;; *************** function _Ws0010BufGotoXY *****************
  5882 ;; Defined at:
  5883 ;;		line 135 in file "WS0010.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  posx            1    wreg     unsigned char 
  5886 ;;  posy            1    2[COMRAM] unsigned char 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  posx            1    5[COMRAM] unsigned char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      void 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0, prodl, prodh
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5898 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5902 ;;Total ram usage:        4 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    4
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_ProcessInit
  5909 ;;		_PrintLed
  5910 ;;		_PrintData
  5911 ;;		_Ws0010Buf9x16Char
  5912 ;;		_Ws0010BufBitmap
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text38
  5917  000EE6                     __ptext38:
  5918                           	opt callstack 0
  5919  000EE6                     _Ws0010BufGotoXY:
  5920                           	opt callstack 24
  5921                           
  5922                           ;incstack = 0
  5923                           ;Ws0010BufGotoXY@posx stored from wreg
  5924  000EE6  6E40               	movwf	Ws0010BufGotoXY@posx,c
  5925                           
  5926                           ;WS0010.c: 135: void Ws0010BufGotoXY(uint8_t posx, uint8_t posy);WS0010.c: 136: {;WS0010
      +                          .c: 137:     ptr = (posx - 1) + ((200 / 2) * (posy - 1));
  5927  000EE8  503D               	movf	Ws0010BufGotoXY@posy,w,c
  5928  000EEA  0D64               	mullw	100
  5929  000EEC  CFF3 F03E          	movff	prodl,??_Ws0010BufGotoXY
  5930  000EF0  CFF4 F03F          	movff	prodh,??_Ws0010BufGotoXY+1
  5931  000EF4  5040               	movf	Ws0010BufGotoXY@posx,w,c
  5932  000EF6  263E               	addwf	??_Ws0010BufGotoXY,f,c
  5933  000EF8  0E00               	movlw	0
  5934  000EFA  223F               	addwfc	??_Ws0010BufGotoXY+1,f,c
  5935  000EFC  0E9B               	movlw	155
  5936  000EFE  243E               	addwf	??_Ws0010BufGotoXY,w,c
  5937  000F00  6E1F               	movwf	_ptr,c
  5938  000F02  0EFF               	movlw	255
  5939  000F04  203F               	addwfc	??_Ws0010BufGotoXY+1,w,c
  5940  000F06  6E20               	movwf	_ptr+1,c
  5941  000F08  0012               	return		;funcret
  5942  000F0A                     __end_of_Ws0010BufGotoXY:
  5943                           	opt callstack 0
  5944                           
  5945 ;; *************** function _TMR0_StopTimer *****************
  5946 ;; Defined at:
  5947 ;;		line 103 in file "mcc_generated_files/tmr0.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;		None
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;		None
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  1    wreg      void 
  5954 ;; Registers used:
  5955 ;;		None
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5965 ;;Total ram usage:        0 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; Hardware stack levels required when called:    4
  5968 ;; This function calls:
  5969 ;;		Nothing
  5970 ;; This function is called by:
  5971 ;;		_ProcessInit
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           	psect	text39
  5976  00105C                     __ptext39:
  5977                           	opt callstack 0
  5978  00105C                     _TMR0_StopTimer:
  5979                           	opt callstack 25
  5980                           
  5981                           ;mcc_generated_files/tmr0.c: 106:     T0CONbits.TMR0ON = 0;
  5982                           
  5983                           ;incstack = 0
  5984  00105C  9ED5               	bcf	4053,7,c	;volatile
  5985  00105E  0012               	return		;funcret
  5986  001060                     __end_of_TMR0_StopTimer:
  5987                           	opt callstack 0
  5988                           
  5989 ;; *************** function _TMR0_StartTimer *****************
  5990 ;; Defined at:
  5991 ;;		line 97 in file "mcc_generated_files/tmr0.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;		None
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;		None
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  1    wreg      void 
  5998 ;; Registers used:
  5999 ;;		None
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6009 ;;Total ram usage:        0 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:    4
  6012 ;; This function calls:
  6013 ;;		Nothing
  6014 ;; This function is called by:
  6015 ;;		_ProcessInit
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text40
  6020  001060                     __ptext40:
  6021                           	opt callstack 0
  6022  001060                     _TMR0_StartTimer:
  6023                           	opt callstack 25
  6024                           
  6025                           ;mcc_generated_files/tmr0.c: 100:     T0CONbits.TMR0ON = 1;
  6026                           
  6027                           ;incstack = 0
  6028  001060  8ED5               	bsf	4053,7,c	;volatile
  6029  001062  0012               	return		;funcret
  6030  001064                     __end_of_TMR0_StartTimer:
  6031                           	opt callstack 0
  6032                           
  6033 ;; *************** function _TMR0_SetInterruptHandler *****************
  6034 ;; Defined at:
  6035 ;;		line 164 in file "mcc_generated_files/tmr0.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  6038 ;;		 -> SetTick1S(1), 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      void 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;Total ram usage:        2 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    4
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_ProcessInit
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text41
  6065  001048                     __ptext41:
  6066                           	opt callstack 0
  6067  001048                     _TMR0_SetInterruptHandler:
  6068                           	opt callstack 25
  6069                           
  6070                           ;mcc_generated_files/tmr0.c: 164: void TMR0_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr0.c: 165: {;mcc_generated_files/tmr0.c: 166:     TMR0_In
      +                          terruptHandler = InterruptHandler;
  6071                           
  6072                           ;incstack = 0
  6073  001048  C03D  F025         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  6074  00104C  C03E  F026         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  6075  001050  0012               	return		;funcret
  6076  001052                     __end_of_TMR0_SetInterruptHandler:
  6077                           	opt callstack 0
  6078                           
  6079 ;; *************** function _SetProcessFunc *****************
  6080 ;; Defined at:
  6081 ;;		line 111 in file "Application.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  Index           1    wreg     unsigned char 
  6084 ;;  Command         2   13[COMRAM] PTR unsigned char 
  6085 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  6086 ;;  Size            1   15[COMRAM] unsigned char 
  6087 ;;  FunctionHand    2   16[COMRAM] PTR FTN()void 
  6088 ;;		 -> SendBT(1), SendSY(1), SendCX(1), 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;  Index           1   18[COMRAM] unsigned char 
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  1    wreg      void 
  6093 ;; Registers used:
  6094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6100 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6103 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;Total ram usage:        6 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:    5
  6107 ;; This function calls:
  6108 ;;		_memcpy
  6109 ;; This function is called by:
  6110 ;;		_ProcessInit
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text42
  6115  000C70                     __ptext42:
  6116                           	opt callstack 0
  6117  000C70                     _SetProcessFunc:
  6118                           	opt callstack 24
  6119                           
  6120                           ;incstack = 0
  6121                           ;SetProcessFunc@Index stored from wreg
  6122  000C70  6E4D               	movwf	SetProcessFunc@Index,c
  6123                           
  6124                           ;Application.c: 111: void SetProcessFunc(uint8_t Index, char Command[], uint8_t Size, vo
      +                          id (*FunctionHandler)(void));Application.c: 112: {;Application.c: 113:   memcpy(ProcessV
      +                          ector[Index].Str485Command, Command, Size);
  6125  000C72  504D               	movf	SetProcessFunc@Index,w,c
  6126  000C74  0D0C               	mullw	12
  6127  000C76  0E8D               	movlw	low _ProcessVector
  6128  000C78  24F3               	addwf	prodl,w,c
  6129  000C7A  6E3D               	movwf	memcpy@d1,c
  6130  000C7C  0E00               	movlw	high _ProcessVector
  6131  000C7E  20F4               	addwfc	prodh,w,c
  6132  000C80  6E3E               	movwf	memcpy@d1+1,c
  6133  000C82  C048  F03F         	movff	SetProcessFunc@Command,memcpy@s1
  6134  000C86  C049  F040         	movff	SetProcessFunc@Command+1,memcpy@s1+1
  6135  000C8A  C04A  F041         	movff	SetProcessFunc@Size,memcpy@n
  6136  000C8E  6A42               	clrf	memcpy@n+1,c
  6137  000C90  EC61  F006         	call	_memcpy	;wreg free
  6138                           
  6139                           ;Application.c: 114:   ProcessVector[Index].CommandSize = Size;
  6140  000C94  504D               	movf	SetProcessFunc@Index,w,c
  6141  000C96  0D0C               	mullw	12
  6142  000C98  0E96               	movlw	low (_ProcessVector+9)
  6143  000C9A  24F3               	addwf	prodl,w,c
  6144  000C9C  6ED9               	movwf	fsr2l,c
  6145  000C9E  0E00               	movlw	high (_ProcessVector+9)
  6146  000CA0  20F4               	addwfc	prodh,w,c
  6147  000CA2  6EDA               	movwf	fsr2h,c
  6148  000CA4  C04A  FFDF         	movff	SetProcessFunc@Size,indf2
  6149                           
  6150                           ;Application.c: 115:   ProcessVector[Index].PtrFunctionHandler = FunctionHandler;
  6151  000CA8  504D               	movf	SetProcessFunc@Index,w,c
  6152  000CAA  0D0C               	mullw	12
  6153  000CAC  0E97               	movlw	low (_ProcessVector+10)
  6154  000CAE  24F3               	addwf	prodl,w,c
  6155  000CB0  6ED9               	movwf	fsr2l,c
  6156  000CB2  0E00               	movlw	high (_ProcessVector+10)
  6157  000CB4  20F4               	addwfc	prodh,w,c
  6158  000CB6  6EDA               	movwf	fsr2h,c
  6159  000CB8  C04B  FFDE         	movff	SetProcessFunc@FunctionHandler,postinc2
  6160  000CBC  C04C  FFDD         	movff	SetProcessFunc@FunctionHandler+1,postdec2
  6161  000CC0  0012               	return		;funcret
  6162  000CC2                     __end_of_SetProcessFunc:
  6163                           	opt callstack 0
  6164                           
  6165 ;; *************** function _memcpy *****************
  6166 ;; Defined at:
  6167 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memcpy.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  d1              2    2[COMRAM] PTR void 
  6170 ;;		 -> ProcessVector(36), 
  6171 ;;  s1              2    4[COMRAM] PTR const void 
  6172 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  6173 ;;  n               2    6[COMRAM] unsigned int 
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;  s               2   10[COMRAM] PTR const unsigned char 
  6176 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  6177 ;;  d               2    8[COMRAM] PTR unsigned char 
  6178 ;;		 -> ProcessVector(36), 
  6179 ;;  tmp             1   12[COMRAM] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  2    2[COMRAM] PTR void 
  6182 ;; Registers used:
  6183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6189 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;Total ram usage:       11 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    4
  6196 ;; This function calls:
  6197 ;;		Nothing
  6198 ;; This function is called by:
  6199 ;;		_SetProcessFunc
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text43
  6204  000CC2                     __ptext43:
  6205                           	opt callstack 0
  6206  000CC2                     _memcpy:
  6207                           	opt callstack 24
  6208                           
  6209                           ;incstack = 0
  6210  000CC2  C03F  F045         	movff	memcpy@s1,memcpy@s
  6211  000CC6  C040  F046         	movff	memcpy@s1+1,memcpy@s+1
  6212  000CCA  C03D  F043         	movff	memcpy@d1,memcpy@d
  6213  000CCE  C03E  F044         	movff	memcpy@d1+1,memcpy@d+1
  6214  000CD2  D012               	goto	l2294
  6215  000CD4                     l2286:
  6216  000CD4  C045  FFF6         	movff	memcpy@s,tblptrl
  6217  000CD8  C046  FFF7         	movff	memcpy@s+1,tblptrh
  6218  000CDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6219  000CDC  6AF8               	clrf	tblptru,c
  6220  000CDE                     	endif
  6221  000CDE                     	if	0	;tblptru may be non-zero
  6222  000CDE                     	endif
  6223  000CDE  0008               	tblrd		*
  6224  000CE0  CFF5 F047          	movff	tablat,memcpy@tmp
  6225  000CE4  4A45               	infsnz	memcpy@s,f,c
  6226  000CE6  2A46               	incf	memcpy@s+1,f,c
  6227  000CE8  C043  FFD9         	movff	memcpy@d,fsr2l
  6228  000CEC  C044  FFDA         	movff	memcpy@d+1,fsr2h
  6229  000CF0  C047  FFDF         	movff	memcpy@tmp,indf2
  6230  000CF4  4A43               	infsnz	memcpy@d,f,c
  6231  000CF6  2A44               	incf	memcpy@d+1,f,c
  6232  000CF8                     l2294:
  6233  000CF8  0641               	decf	memcpy@n,f,c
  6234  000CFA  A0D8               	btfss	status,0,c
  6235  000CFC  0642               	decf	memcpy@n+1,f,c
  6236  000CFE  2841               	incf	memcpy@n,w,c
  6237  000D00  E1E9               	bnz	l2286
  6238  000D02  2842               	incf	memcpy@n+1,w,c
  6239  000D04  B4D8               	btfsc	status,2,c
  6240  000D06  0012               	return	
  6241  000D08  D7E5               	goto	l2286
  6242  000D0A                     __end_of_memcpy:
  6243                           	opt callstack 0
  6244                           
  6245 ;; *************** function _DelayLongo *****************
  6246 ;; Defined at:
  6247 ;;		line 25 in file "WS0010.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;		None
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  f               1    4[COMRAM] unsigned char 
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1    wreg      void 
  6254 ;; Registers used:
  6255 ;;		wreg, status,2, status,0
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;Total ram usage:        3 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    4
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_ProcessInit
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text44
  6276  000F0A                     __ptext44:
  6277                           	opt callstack 0
  6278  000F0A                     _DelayLongo:
  6279                           	opt callstack 25
  6280                           
  6281                           ;WS0010.c: 27:     uint8_t f;;WS0010.c: 28:     for (f = 0; f < 10; f++)
  6282                           
  6283                           ;incstack = 0
  6284  000F0A  0E00               	movlw	0
  6285  000F0C  6E3F               	movwf	DelayLongo@f,c
  6286  000F0E                     l2550:
  6287                           
  6288                           ;WS0010.c: 29:     {;WS0010.c: 30:         _delay((unsigned long)((200)*(40000000/4000.0
      +                          )));
  6289  000F0E  0E0B               	movlw	11
  6290  000F10  6E3E               	movwf	(??_DelayLongo+1)& (0+255),c
  6291  000F12  0E26               	movlw	38
  6292  000F14  6E3D               	movwf	??_DelayLongo& (0+255),c
  6293  000F16  0E5E               	movlw	94
  6294  000F18                     u1957:
  6295  000F18  2EE8               	decfsz	wreg,f,c
  6296  000F1A  D7FE               	bra	u1957
  6297  000F1C  2E3D               	decfsz	??_DelayLongo& (0+255),f,c
  6298  000F1E  D7FC               	bra	u1957
  6299  000F20  2E3E               	decfsz	(??_DelayLongo+1)& (0+255),f,c
  6300  000F22  D7FA               	bra	u1957
  6301                           
  6302                           ;WS0010.c: 31:     }
  6303  000F24  2A3F               	incf	DelayLongo@f,f,c
  6304  000F26  0E09               	movlw	9
  6305  000F28  643F               	cpfsgt	DelayLongo@f,c
  6306  000F2A  D7F1               	goto	l2550
  6307  000F2C  0012               	return	
  6308  000F2E                     __end_of_DelayLongo:
  6309                           	opt callstack 0
  6310                           
  6311 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  6312 ;; Defined at:
  6313 ;;		line 65 in file "mcc_generated_files/interrupt_manager.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;		None
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;		None
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  1    wreg      void 
  6320 ;; Registers used:
  6321 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;Total ram usage:        2 bytes
  6332 ;; Hardware stack levels used:    1
  6333 ;; Hardware stack levels required when called:    3
  6334 ;; This function calls:
  6335 ;;		_TMR0_ISR
  6336 ;; This function is called by:
  6337 ;;		Interrupt level 2
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           	psect	intcode
  6342  000008                     __pintcode:
  6343                           	opt callstack 0
  6344  000008                     _INTERRUPT_InterruptManagerHigh:
  6345                           	opt callstack 22
  6346                           
  6347                           ;incstack = 0
  6348  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6349  00000A  CFFA F03B          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  6350  00000E  CFFB F03C          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  6351                           
  6352                           ;mcc_generated_files/interrupt_manager.c: 68:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6353  000012  BAF2               	btfsc	4082,5,c	;volatile
  6354  000014  A4F2               	btfss	4082,2,c	;volatile
  6355  000016  D002               	goto	i2l159
  6356                           
  6357                           ;mcc_generated_files/interrupt_manager.c: 69:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 70:         TMR0_ISR();
  6358  000018  ECE1  F007         	call	_TMR0_ISR	;wreg free
  6359  00001C                     i2l159:
  6360  00001C  C03C  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  6361  000020  C03B  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  6362  000024  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6363  000026  0011               	retfie		f
  6364  000028                     __end_of_INTERRUPT_InterruptManagerHigh:
  6365                           	opt callstack 0
  6366                           
  6367 ;; *************** function _TMR0_ISR *****************
  6368 ;; Defined at:
  6369 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;		None
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;		None
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      void 
  6376 ;; Registers used:
  6377 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;Total ram usage:        0 bytes
  6388 ;; Hardware stack levels used:    1
  6389 ;; Hardware stack levels required when called:    2
  6390 ;; This function calls:
  6391 ;;		_TMR0_CallBack
  6392 ;; This function is called by:
  6393 ;;		_INTERRUPT_InterruptManagerHigh
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text46
  6398  000FC2                     __ptext46:
  6399                           	opt callstack 0
  6400  000FC2                     _TMR0_ISR:
  6401                           	opt callstack 22
  6402                           
  6403                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  6404                           
  6405                           ;incstack = 0
  6406  000FC2  94F2               	bcf	4082,2,c	;volatile
  6407                           
  6408                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  6409  000FC4  5058               	movf	_timer0ReloadVal+1,w,c	;volatile
  6410  000FC6  6ED7               	movwf	4055,c	;volatile
  6411                           
  6412                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  6413  000FC8  C057  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6414                           
  6415                           ;mcc_generated_files/tmr0.c: 149:     TMR0_CallBack();
  6416  000FCC  ECA6  F007         	call	_TMR0_CallBack	;wreg free
  6417  000FD0  0012               	return		;funcret
  6418  000FD2                     __end_of_TMR0_ISR:
  6419                           	opt callstack 0
  6420                           
  6421 ;; *************** function _TMR0_CallBack *****************
  6422 ;; Defined at:
  6423 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;		None
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6441 ;;Total ram usage:        0 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    1
  6444 ;; This function calls:
  6445 ;;		Absolute function
  6446 ;;		_SetTick1S
  6447 ;; This function is called by:
  6448 ;;		_TMR0_ISR
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           	psect	text47
  6453  000F4C                     __ptext47:
  6454                           	opt callstack 0
  6455  000F4C                     _TMR0_CallBack:
  6456                           	opt callstack 22
  6457                           
  6458                           ;mcc_generated_files/tmr0.c: 158:     if(TMR0_InterruptHandler)
  6459                           
  6460                           ;incstack = 0
  6461  000F4C  5025               	movf	_TMR0_InterruptHandler,w,c
  6462  000F4E  1026               	iorwf	_TMR0_InterruptHandler+1,w,c
  6463  000F50  B4D8               	btfsc	status,2,c
  6464  000F52  0012               	return	
  6465                           
  6466                           ;mcc_generated_files/tmr0.c: 159:     {;mcc_generated_files/tmr0.c: 160:         TMR0_In
      +                          terruptHandler();
  6467  000F54  D801               	call	i2u33_48
  6468  000F56  0012               	return	
  6469  000F58                     i2u33_48:
  6470  000F58  0005               	push	
  6471  000F5A  6EFA               	movwf	pclath,c
  6472  000F5C  5025               	movf	_TMR0_InterruptHandler,w,c
  6473  000F5E  6EFD               	movwf	tosl,c
  6474  000F60  5026               	movf	_TMR0_InterruptHandler+1,w,c
  6475  000F62  6EFE               	movwf	tosh,c
  6476  000F64  6AFF               	clrf	tosu,c
  6477  000F66  50FA               	movf	pclath,w,c
  6478  000F68  0012               	return		;indir
  6479  000F6A                     __end_of_TMR0_CallBack:
  6480                           	opt callstack 0
  6481                           
  6482 ;; *************** function _SetTick1S *****************
  6483 ;; Defined at:
  6484 ;;		line 62 in file "Application.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  1    wreg      void 
  6491 ;; Registers used:
  6492 ;;		wreg, status,2, status,0
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;Total ram usage:        0 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; This function calls:
  6505 ;;		Nothing
  6506 ;; This function is called by:
  6507 ;;		_ProcessInit
  6508 ;;		_TMR0_CallBack
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text48
  6513  000D8A                     __ptext48:
  6514                           	opt callstack 0
  6515  000D8A                     _SetTick1S:
  6516                           	opt callstack 22
  6517                           
  6518                           ;Application.c: 64:     if(++CounterB > 500)
  6519                           
  6520                           ;incstack = 0
  6521  000D8A  4A21               	infsnz	_CounterB,f,c
  6522  000D8C  2A22               	incf	_CounterB+1,f,c
  6523  000D8E  0EF5               	movlw	245
  6524  000D90  5C21               	subwf	_CounterB,w,c
  6525  000D92  0E01               	movlw	1
  6526  000D94  5822               	subwfb	_CounterB+1,w,c
  6527  000D96  A0D8               	btfss	status,0,c
  6528  000D98  D006               	goto	i2l1366
  6529                           
  6530                           ;Application.c: 65:     {;Application.c: 66:        CounterB = 0;
  6531  000D9A  0E00               	movlw	0
  6532  000D9C  6E22               	movwf	_CounterB+1,c
  6533  000D9E  0E00               	movlw	0
  6534  000DA0  6E21               	movwf	_CounterB,c
  6535                           
  6536                           ;Application.c: 67:        RunFlag = 1;
  6537  000DA2  0E01               	movlw	1
  6538  000DA4  6E2C               	movwf	_RunFlag,c
  6539  000DA6                     i2l1366:
  6540                           
  6541                           ;Application.c: 71:     if(++CounterA > 10000)
  6542  000DA6  4A23               	infsnz	_CounterA,f,c
  6543  000DA8  2A24               	incf	_CounterA+1,f,c
  6544  000DAA  0E11               	movlw	17
  6545  000DAC  5C23               	subwf	_CounterA,w,c
  6546  000DAE  0E27               	movlw	39
  6547  000DB0  5824               	subwfb	_CounterA+1,w,c
  6548  000DB2  A0D8               	btfss	status,0,c
  6549  000DB4  0012               	return	
  6550                           
  6551                           ;Application.c: 72:     {;Application.c: 73:         CounterA = 0;
  6552  000DB6  0E00               	movlw	0
  6553  000DB8  6E24               	movwf	_CounterA+1,c
  6554  000DBA  0E00               	movlw	0
  6555  000DBC  6E23               	movwf	_CounterA,c
  6556                           
  6557                           ;Application.c: 74:         CxFlag = 1;
  6558  000DBE  0E01               	movlw	1
  6559  000DC0  6E2D               	movwf	_CxFlag,c
  6560  000DC2  0012               	return		;funcret
  6561  000DC4                     __end_of_SetTick1S:
  6562                           	opt callstack 0
  6563                           
  6564                           	psect	text49
  6565  000000                     __ptext49:
  6566                           	opt callstack 0
  6567                           
  6568                           	psect	rparam
  6569  0000                     
  6570                           	psect	temp
  6571  000059                     btemp:
  6572                           	opt callstack 0
  6573  000059                     	ds	1
  6574  0000                     int$flags	set	btemp
  6575  0000                     wtemp8	set	btemp+1
  6576  0000                     ttemp5	set	btemp+1
  6577  0000                     ttemp6	set	btemp+4
  6578  0000                     ttemp7	set	btemp+8
  6579                           tosu	equ	0xFFF
  6580                           tosh	equ	0xFFE
  6581                           tosl	equ	0xFFD
  6582                           stkptr	equ	0xFFC
  6583                           pclatu	equ	0xFFB
  6584                           pclath	equ	0xFFA
  6585                           pcl	equ	0xFF9
  6586                           tblptru	equ	0xFF8
  6587                           tblptrh	equ	0xFF7
  6588                           tblptrl	equ	0xFF6
  6589                           tablat	equ	0xFF5
  6590                           prodh	equ	0xFF4
  6591                           prodl	equ	0xFF3
  6592                           indf0	equ	0xFEF
  6593                           postinc0	equ	0xFEE
  6594                           postdec0	equ	0xFED
  6595                           preinc0	equ	0xFEC
  6596                           plusw0	equ	0xFEB
  6597                           fsr0h	equ	0xFEA
  6598                           fsr0l	equ	0xFE9
  6599                           wreg	equ	0xFE8
  6600                           indf1	equ	0xFE7
  6601                           postinc1	equ	0xFE6
  6602                           postdec1	equ	0xFE5
  6603                           preinc1	equ	0xFE4
  6604                           plusw1	equ	0xFE3
  6605                           fsr1h	equ	0xFE2
  6606                           fsr1l	equ	0xFE1
  6607                           bsr	equ	0xFE0
  6608                           indf2	equ	0xFDF
  6609                           postinc2	equ	0xFDE
  6610                           postdec2	equ	0xFDD
  6611                           preinc2	equ	0xFDC
  6612                           plusw2	equ	0xFDB
  6613                           fsr2h	equ	0xFDA
  6614                           fsr2l	equ	0xFD9
  6615                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    1261
    Data        74
    BSS         333
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      88
    BANK0           160      0     149
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    memcpy@d1	PTR void  size(2) Largest target is 36
		 -> ProcessVector(BANK0[36]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 36
		 -> ProcessVector(BANK0[36]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    memcmp@vr	PTR const void  size(2) Largest target is 36
		 -> ProcessVector.Str485Command(BANK0[9]), ProcessVector(BANK0[36]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 36
		 -> ProcessVector.Str485Command(BANK0[9]), ProcessVector(BANK0[36]), 

    memcmp@vl	PTR const void  size(2) Largest target is 45
		 -> ProcessPeriodic@StrCommand(BANK0[45]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 45
		 -> ProcessPeriodic@StrCommand(BANK0[45]), 

    Ws0010BufBitmap@Image	PTR const unsigned char  size(2) Largest target is 180
		 -> LogoClk(CODE[180]), 

    GetsRS485@RxData	PTR unsigned char  size(2) Largest target is 1
		 -> ProcessPeriodic@RxData(COMRAM[1]), 

    PutsRS485@s	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    fifo_dequeue@p_data	PTR unsigned char  size(2) Largest target is 1
		 -> ProcessPeriodic@RS485Data(COMRAM[1]), 

    fifo_dequeue@p_fifo	PTR struct . size(2) Largest target is 24
		 -> AplicationQueue(BANK0[24]), 

    fifo_queue@p_fifo	PTR struct . size(2) Largest target is 24
		 -> AplicationQueue(BANK0[24]), 

    fifo_init@p_fifo	PTR struct . size(2) Largest target is 24
		 -> AplicationQueue(BANK0[24]), 

    PrintData@StrRH	PTR unsigned char  size(2) Largest target is 5
		 -> StrRH(COMRAM[5]), 

    PrintData@StrTemp	PTR unsigned char  size(2) Largest target is 5
		 -> StrTemp(COMRAM[5]), 

    ProcessPeriodic@pf	PTR unsigned char  size(2) Largest target is 45
		 -> ProcessPeriodic@StrCommand(BANK0[45]), 

    SetProcessFunc@FunctionHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SendBT(), SendSY(), SendCX(), 

    sp__memcpy	PTR void  size(2) Largest target is 36
		 -> ProcessVector(BANK0[36]), 

    S667$PtrFunctionHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SendBT(), SendSY(), SendCX(), 

    ProcessVector.PtrFunctionHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SendBT(), SendSY(), SendCX(), 

    SetProcessFunc@Command	PTR unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SetTick1S(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SetTick1S(), Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_ProcessPeriodic
    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _ProcessPeriodic->_PrintData
    _SendSY->_PutsRS485
    _SendCX->_PutsRS485
    _SendBT->_PutsRS485
    _PutsRS485->_strlen
    _PrintLed->_Ws0010Refresh
    _PrintData->_Ws0010Buf9x16Char
    _Ws0010Buf9x16Char->_Ws0010BufGotoXY
    _ProcessInit->_SetProcessFunc
    _Ws0010Refresh->_Ws0010PutGotoXY
    _Ws0010PutGotoXY->_Ws0010PutByte
    _Ws0010BufBitmap->___awdiv
    _SetProcessFunc->_memcpy

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24649
                        _ProcessInit
                    _ProcessPeriodic
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ProcessPeriodic                                      4     4      0   15216
                                             18 COMRAM     4     4      0
                          _GetsRS485
                          _PrintData
                           _PrintLed
                             _SendBT *
                             _SendCX *
                             _SendSY *
                       _fifo_dequeue
                         _fifo_queue
                             _memcmp
 ---------------------------------------------------------------------------------
 (2) _memcmp                                              12     6      6     409
                                              2 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _fifo_queue                                           7     4      3     706
                                              2 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _fifo_dequeue                                         8     4      4     440
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _SendSY                                               0     0      0     506
                          _PutsRS485
 ---------------------------------------------------------------------------------
 (2) _SendCX                                               0     0      0     506
                          _PutsRS485
 ---------------------------------------------------------------------------------
 (2) _SendBT                                               0     0      0     506
                          _PutsRS485
 ---------------------------------------------------------------------------------
 (3) _PutsRS485                                            6     4      2     506
                                              6 COMRAM     6     4      2
                       _EUSART_Write
                  _EUSART_is_tx_done
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     166
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PrintLed                                             0     0      0    4220
                    _Ws0010BufGotoXY
                    _Ws0010BufPatern
                      _Ws0010Refresh
 ---------------------------------------------------------------------------------
 (2) _PrintData                                            4     0      4    7754
                                             14 COMRAM     4     0      4
                   _Ws0010Buf5x7Char
                  _Ws0010Buf9x16Char
                    _Ws0010BufGotoXY
                    _Ws0010BufPatern
                    _Ws0010PutGotoXY
                      _Ws0010Refresh
 ---------------------------------------------------------------------------------
 (3) _Ws0010Buf9x16Char                                    8     7      1    1786
                                              6 COMRAM     8     7      1
                    _Ws0010BufGotoXY
 ---------------------------------------------------------------------------------
 (3) _Ws0010Buf5x7Char                                     7     6      1     634
                                              2 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _GetsRS485                                            4     2      2     146
                                              2 COMRAM     4     2      2
                        _EUSART_Read
             _EUSART_get_last_status
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_get_last_status                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProcessInit                                          0     0      0    9139
                         _DelayLongo
                     _SetProcessFunc
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                    _Ws0010BufBitmap
                    _Ws0010BufGotoXY
                    _Ws0010BufPatern
                         _Ws0010Init
                    _Ws0010PutGotoXY
                      _Ws0010Refresh
                          _fifo_init
 ---------------------------------------------------------------------------------
 (2) _fifo_init                                            3     0      3     306
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _Ws0010Refresh                                        2     2      0    1425
                                              8 COMRAM     2     2      0
                      _Ws0010PutByte
                    _Ws0010PutGotoXY
 ---------------------------------------------------------------------------------
 (4) _Ws0010PutGotoXY                                      2     1      1     830
                                              6 COMRAM     2     1      1
                      _Ws0010PutByte
 ---------------------------------------------------------------------------------
 (5) _Ws0010PutByte                                        4     3      1     482
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Ws0010Init                                          15    15      0      92
                                              2 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 (3) _Ws0010BufPatern                                      3     2      1    1611
                                              2 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _Ws0010BufBitmap                                      8     5      3    2338
                                             10 COMRAM     8     5      3
                    _Ws0010BufGotoXY
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     756
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Ws0010BufGotoXY                                      4     3      1    1184
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SetProcessFunc                                       6     1      5    1209
                                             13 COMRAM     6     1      5
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     371
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _DelayLongo                                           3     3      0      46
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerHigh                       2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
                          _SetTick1S *
 ---------------------------------------------------------------------------------
 (9) _SetTick1S                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ProcessInit
     _DelayLongo
     _SetProcessFunc
       _memcpy
     _TMR0_SetInterruptHandler
     _TMR0_StartTimer
     _TMR0_StopTimer
     _Ws0010BufBitmap
       _Ws0010BufGotoXY
       ___awdiv
     _Ws0010BufGotoXY
     _Ws0010BufPatern
     _Ws0010Init
     _Ws0010PutGotoXY
       _Ws0010PutByte
     _Ws0010Refresh
       _Ws0010PutByte
       _Ws0010PutGotoXY
         _Ws0010PutByte
     _fifo_init
   _ProcessPeriodic
     _GetsRS485
       _EUSART_Read
       _EUSART_get_last_status
       _EUSART_is_rx_ready
     _PrintData
       _Ws0010Buf5x7Char
       _Ws0010Buf9x16Char
         _Ws0010BufGotoXY
       _Ws0010BufGotoXY
       _Ws0010BufPatern
       _Ws0010PutGotoXY
         _Ws0010PutByte
       _Ws0010Refresh
         _Ws0010PutByte
         _Ws0010PutGotoXY
           _Ws0010PutByte
     _PrintLed
       _Ws0010BufGotoXY
       _Ws0010BufPatern
       _Ws0010Refresh
         _Ws0010PutByte
         _Ws0010PutGotoXY
           _Ws0010PutByte
     _SendBT *
       _PutsRS485
         _EUSART_Write
         _EUSART_is_tx_done
         _strlen
     _SendCX *
       _PutsRS485
         _EUSART_Write
         _EUSART_is_tx_done
         _strlen
     _SendSY *
       _PutsRS485
         _EUSART_Write
         _EUSART_is_tx_done
         _strlen
     _fifo_dequeue *
     _fifo_queue *
     _memcmp *
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _SetTick1S *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      95       5       93.1%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      58       1       93.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B5      32        0.0%
DATA                 0      0     1B5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 29 11:29:55 2019

                               Ws0010Init@init 003D                                 ??_fifo_dequeue 0041  
                                 ___awdiv@sign 0042                         __end_of_SetProcessFunc 0CC2  
                              _timer0ReloadVal 0057                                   __CFG_CP0$OFF 000000  
                                 __CFG_CP1$OFF 000000                                   __CFG_CP2$OFF 000000  
                             fifo_queue@p_data 003F                                   __CFG_CP3$OFF 000000  
                             fifo_queue@p_fifo 003D                                            l338 0084  
                                          l427 0E2A                                            l363 0BB2  
                                          l544 0E3A                                            l561 0D38  
                                 __CFG_CPB$OFF 000000                                   __CFG_CPD$OFF 000000  
                                          _ptr 001F                 ?_EUSART_SetFramingErrorHandler 003D  
                                 __CFG_BORV$18 000000                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                               Ws0010Refresh@j 0044                 __end_of_EUSART_get_last_status 105C  
                     ProcessPeriodic@RS485Data 003A                                   ?_EUSART_Read 003B  
                                 __CFG_LVP$OFF 000000                       __size_of_Ws0010BufBitmap 00B8  
                                         l2230 100A                                           l2304 0D18  
                                         l2400 04F4                                           l2240 0E6A  
                                         l2410 0988                                           l2242 0E6E  
                                         l2324 0E56                                           l2332 0504  
                                         l2422 09AE                                           l2318 0E40  
                                         l2270 0FAC                                           l2342 05A4  
                                         l2424 09B6                                           l2416 0998  
                                         l2352 05C8                                           l2336 0554  
                                         l2280 0C4A                                           l2442 09EE  
                                         l2434 09D6                                           l2338 055A  
                                         l2370 03FC                                           l2362 03D6  
                                         l2532 0792                                           l2380 0468  
                                         l2276 0C28                                           l2604 0A86  
                                         l2550 0F0E                                           l2286 0CD4  
                                         l2294 0CF8                                           l2438 09E0  
                                         l2542 0802                                           l2382 046E  
                                         l2374 040C                                           l2614 0AC6  
                                         l2606 0A94                       __size_of_Ws0010BufGotoXY 0024  
                                         l2536 07CA                                           l2376 0418  
                                         l2386 04B8                                           l2396 04E4  
                                         l2564 0B94                                           l2804 019A  
                                         l2816 01C2                                           l2760 00B0  
                                         l2498 0A12                                           l2682 0630  
                                         l2690 06A2                                           l2594 0942  
                                         l2746 0058                                           l2844 0224  
                                         l2790 0178                                           l2766 00B4  
                                         l2688 069E                                           l2776 0156  
                                         l2868 0FBC                                           STR_1 FFF8  
                                         STR_2 FFFB                                           STR_3 FFF5  
                                         STR_4 FFF8                                           STR_5 FFF2  
                                         STR_6 FFF5                       __size_of_Ws0010BufPatern 0032  
                                         u1020 1004                                           u1005 0824  
                                         u1006 0826                                           u1015 087A  
                                         u1016 087C                                           u1050 101C  
                                         u1210 04C8                                           u1301 0A02  
                                         u1080 0C62                                           u1260 09BA  
                                         _LATA 000F89                                           _LATB 000F8A  
                                         _LATC 000F8B                                           _LATD 000F8C  
                                         _LATE 000F8D                                           u1370 0BC0  
                                         u1450 0AB4                                           u1380 0BC2  
                                         u1630 022C                                           u1640 0234  
                                         u1570 016C                                  __CFG_DEBUG$ON 000000  
                                         u1558 0144                                           u1807 084A  
                                         u1817 0858                                           u1907 0A42  
                                         u1827 0862                                           u1917 0A4C  
                                         u1837 086C                                           u1927 0A54  
                                         u1847 08A0                                           u1937 0A5C  
                                         u1857 08AE                                           u1947 0A64  
                                         u1867 08B8                                           u1957 0F18  
                                         u1877 08C2                                           u1887 0A1E  
                                         u1897 0A38                                     _Ws0010Init 09F8  
                                         _WPUB 000F7C                                _ascii_table9x16 FE66  
                                         _main 0FB0                                _TMR0_StartTimer 1060  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 0059                                     _DelayLongo 0F0A  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 0028                                  __CFG_IESO$OFF 000000  
                                __CFG_MCLRE$ON 000000                                   ___param_bank 000000  
                              __end_of_LogoClk FFF2                       __end_of_Ws0010Buf5x7Char 05D8  
                      __end_of_TMR0_Initialize 0EE6                                  ?_EUSART_Write 003B  
               __size_of_OSCILLATOR_Initialize 000A                                ?_SetProcessFunc 0048  
                __end_of_OSCILLATOR_Initialize 102A                                          ?_main 003B  
                              __end_of___awdiv 09F8                                          _ANSEL 000F7E  
                                        _T0CON 000FD5                                ___awdiv@divisor 003F  
                                        i2l159 001C                                ___awdiv@counter 0041  
                                        _RCREG 000FAE                                          _RCSTA 000FAB  
                                        _TMR0H 000FD7                                          _TMR0L 000FD6  
                                        _SPBRG 000FAF                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                                        _TRISD 000F95                                          _TRISE 000F96  
                                        _TXREG 000FAD                                          _TXSTA 000FAC  
                                __CFG_PWRT$OFF 000000              __size_of_TMR0_SetInterruptHandler 000A  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                      ?_TMR0_SetInterruptHandler 003D  
                                __CFG_WRT3$OFF 000000                            ProcessPeriodic@Mask 002A  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                          _StrRH 002F  
                             __end_of_TMR0_ISR 0FD2                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                               __CFG_EBTRB$OFF 000000                        __end_of_ProcessPeriodic 0250  
                                        pclath 000FFA                                          tablat 000FF5  
                     __size_of_Ws0010PutGotoXY 001C                                          plusw1 000FE3  
                                        plusw2 000FDB                                          ttemp5 005A  
                                        ttemp6 005D                                          ttemp7 0061  
                                        status 000FD8                                          wtemp8 005A  
                              __initialization 0AEC                               ProcessPeriodic@i 0028  
                                 __end_of_main 0FC2                                 ??_EUSART_Write 003D  
                                       ??_main 0051                                  __activetblptr 000003  
                           __size_of_GetsRS485 0032                            Ws0010BufBitmap@Size 0047  
                             __end_of_PrintLed 0BC6                        __end_of_ascii_table9x16 FF3E  
            _EUSART_DefaultFramingErrorHandler 000000                        __end_of_TMR0_StartTimer 1064  
                   _EUSART_OverrunErrorHandler 0053                               ___awdiv@dividend 003D  
                                       _ANSELH 000F7F                     __end_of_EUSART_is_rx_ready 1020  
                                  ?_Ws0010Init 003B                           __end_of_fifo_dequeue 06A6  
                                       i2l1366 0DA6                                 __CFG_WDTEN$OFF 000000  
                                       _OSCCON 000FD3                                         _SPBRGH 000FB0  
                                  ?_DelayLongo 003B                              ??_Ws0010BufBitmap 0048  
                                       _CxFlag 002D                              ??_Ws0010BufGotoXY 003E  
                            ??_Ws0010BufPatern 003E                           ProcessPeriodic@Index 002B  
                                       _SendBT 0FD2                                         _SendCX 0FE0  
                               __CFG_XINST$OFF 000000                                         _SendSY 0FEE  
                         ProcessPeriodic@RxCks 0029                               Ws0010PutByte@end 0040  
                                    ??___awdiv 0041                                 __CFG_STVREN$ON 000000  
                           __size_of_SetTick1S 003A                                         _memcmp 0A74  
                                       _memcpy 0CC2                               ?_TMR0_Initialize 003B  
                                       clear_0 0B32                                         clear_1 0B3E  
                                       clear_2 0B4A                               ___awdiv@quotient 0043  
                                       _strlen 0E60                             __size_of_PrintData 017C  
                                 __pdataCOMRAM 0001                             SetProcessFunc@Size 004A  
                                 __mediumconst FB04                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                           __size_of_PutsRS485 0054                                  ??_ProcessInit 004E  
                        __end_of_TMR0_CallBack 0F6A       TMR0_SetInterruptHandler@InterruptHandler 003D  
                                   PutsRS485@i 0045                                     PutsRS485@s 0041  
                              __CFG_HFOFST$OFF 000000                              Ws0010Refresh@dado 0043  
                __size_of_INTERRUPT_Initialize 0006                               ?_ProcessPeriodic 003B  
                              __CFG_FOSC$HSPLL 000000                           __size_of_EUSART_Read 0014  
             ??_INTERRUPT_InterruptManagerHigh 003B                ?_INTERRUPT_InterruptManagerHigh 003B  
                            _SYSTEM_Initialize 0F86                                     __accesstop 0060  
                      __end_of__initialization 0B50                                __CFG_PBADEN$OFF 000000  
                           ?_SYSTEM_Initialize 003B                                  ___rparam_used 000001  
                            __end_of_GetsRS485 0E2E                              ??_Ws0010PutGotoXY 0042  
                               __pcstackCOMRAM 003B                                   __pidataBANK0 0E90  
                          ??_SYSTEM_Initialize 003F                                      ?_TMR0_ISR 003B  
                       __size_of_Ws0010Refresh 0042                              ProcessPeriodic@pf 004F  
                       __size_of_Ws0010PutByte 00B4                            __size_of_Ws0010Init 007C  
                          Ws0010BufGotoXY@posx 0040                            Ws0010BufGotoXY@posy 003D  
                             PrintData@StrTemp 0049                            __size_of_DelayLongo 0024  
                           __size_of_fifo_init 0056                ??_EUSART_SetOverrunErrorHandler 003F  
                             ?_TMR0_StartTimer 003B                      __end_of_SYSTEM_Initialize 0F9C  
                            __end_of_SetTick1S 0DC4                                     __pbssBANK0 0060  
                                   __pbssBANK1 0100                           __end_of_EUSART_Write 1014  
                          __end_of_ProcessInit 075E                           Ws0010BufBitmap@Image 0045  
                                   __pnvCOMRAM 0051                                 PrintData@StrRH 004B  
                            __end_of_PrintData 03CC                                        ?_SendBT 003B  
                                      ?_SendCX 003B                                        ?_SendSY 003B  
                          Ws0010BufPatern@dado 003E                               ??_SetProcessFunc 004D  
                            __end_of_PutsRS485 0C70                                      ?_PrintLed 003B  
             __end_of_TMR0_SetInterruptHandler 1052                        __size_of_TMR0_StopTimer 0004  
                                   ??_TMR0_ISR 003B                              ?_Ws0010Buf5x7Char 003D  
                                      ?_memcmp 003D                                        ?_memcpy 003D  
                                      _BAUDCON 000FB8                             ??_Ws0010Buf5x7Char 003E  
                                      ?_strlen 003D                             Ws0010Buf9x16Char@j 0047  
                                   _fifo_queue 08CA                          __size_of_fifo_dequeue 00CE  
                                      i2u33_48 0F58                                        _OSCTUNE 000F9B  
                                _Ws0010Refresh 0D0A                       ??_EUSART_SetErrorHandler 003F  
                                _Ws0010PutByte 0816                                  _Ws0010_buffer 0100  
                                      _LogoClk FF3E                          ProcessPeriodic@RxData 0039  
                                      __Hparam 0000                                        __Lparam 0000  
                            __end_of_fifo_init 0C1C                                __size_of_SendBT 000E  
                              __size_of_SendCX 000E                                __size_of_SendSY 000E  
                                      _RunFlag 002C                                     ??_PrintLed 0045  
                                      _StrTemp 0034                              Ws0010PutByte@fras 003D  
                                      ___awdiv 0974                                        __pcinit 0AEC  
                              __size_of_memcmp 0078                                __size_of_memcpy 0048  
                                 _fifo_dequeue 05D8                                        __ramtop 1000  
                                      __ptext0 0FB0                                        __ptext1 0F86  
                                      __ptext2 0EBC                                        __ptext3 0DC4  
                                      __ptext4 1020                                        __ptext5 1052  
                                      __ptext6 0D4C                                        __ptext7 102A  
                                      __ptext8 1034                                        __ptext9 103E  
                         Ws0010Buf9x16Char@inv 0041                                      _T0CONbits 000FD5  
                              __size_of_strlen 0030                          _OSCILLATOR_Initialize 1020  
                     ??_PIN_MANAGER_Initialize 003D                                _Ws0010BufBitmap 075E  
                               ?_Ws0010Refresh 003B                                    _ProcessInit 06A6  
                              _Ws0010BufGotoXY 0EE6                                _Ws0010BufPatern 0E2E  
                   __size_of_SYSTEM_Initialize 0016                                 ?_Ws0010PutByte 003D  
                         end_of_initialization 0B50                                   ??_Ws0010Init 003D  
                              GetsRS485@RxData 003D                                        memcmp@l 0045  
                                      memcmp@n 0041                                        memcmp@r 0047  
        __end_of_EUSART_SetOverrunErrorHandler 1034         __size_of_EUSART_SetOverrunErrorHandler 000A  
                _EUSART_SetOverrunErrorHandler 102A                                        memcpy@d 0043  
                                      memcpy@n 0041                                        memcpy@s 0045  
                          SetProcessFunc@Index 004D                                   ??_DelayLongo 003D  
                            _EUSART_Initialize 0D4C                             ?_EUSART_Initialize 003B  
                                    _RCSTAbits 000FAB                             _EUSART_is_rx_ready 1014  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                                        strlen@a 003F  
                                      strlen@s 003D                       ??_EUSART_get_last_status 003D  
                          ??_EUSART_Initialize 003F                       _TMR0_SetInterruptHandler 1048  
                          ?_EUSART_is_rx_ready 003B                                      _PORTDbits 000F83  
                           __end_of_Ws0010Init 0A74                                    ?_fifo_queue 003D  
                           __end_of_DelayLongo 0F2E                                      _TRISEbits 000F96  
                        __size_of_EUSART_Write 000C                __size_of_EUSART_SetErrorHandler 000A  
                              _Ws0010PutGotoXY 0F6A                      __end_of_EUSART_Initialize 0D8A  
                         ??_EUSART_is_rx_ready 003D                                      _TXSTAbits 000FAC  
                               _ascii_table4x6 FB05                                 _ascii_table5x7 FC81  
                               _TMR0_StopTimer 105C                                _AplicationQueue 00B1  
                               __end_of_SendBT 0FE0                                 __end_of_SendCX 0FEE  
                               __end_of_SendSY 0FFC                   __end_of_INTERRUPT_Initialize 1058  
                                    _GetsRS485 0DFC                     _EUSART_DefaultErrorHandler 000000  
                                __pidataCOMRAM 0F2E                                   _EUSART_Write 1008  
                            __size_of_TMR0_ISR 0010                        __end_of_Ws0010BufBitmap 0816  
                               __end_of_memcmp 0AEC                                 __end_of_memcpy 0D0A  
                       ?_OSCILLATOR_Initialize 003B                        __end_of_Ws0010BufGotoXY 0F0A  
                      __end_of_Ws0010BufPatern 0E60                                 __end_of_strlen 0E90  
                              ??_Ws0010Refresh 0043                            start_initialization 0AEC  
                     __size_of_TMR0_Initialize 002A                                ??_Ws0010PutByte 003E  
              __size_of_PIN_MANAGER_Initialize 0038                                  ??_EUSART_Read 003D  
                           Ws0010BufBitmap@gap 004A                         __end_of_ascii_table4x6 FC81  
                       __end_of_ascii_table5x7 FE66                                      _SetTick1S 0D8A  
                       __end_of_TMR0_StopTimer 1060                            __size_of_fifo_queue 00AA  
               ?_EUSART_SetOverrunErrorHandler 003D                                       ??_SendBT 0047  
                                     ??_SendCX 0047                                       ??_SendSY 0047  
                     __size_of_ProcessPeriodic 0224                     _EUSART_FramingErrorHandler 0055  
                                    _PrintData 0250                         _EUSART_SetErrorHandler 103E  
                                   ?_GetsRS485 003D                         __size_of_TMR0_CallBack 001E  
                                  __pdataBANK0 00C9                               __CFG_LPT1OSC$OFF 000000  
                                     ??_memcmp 0043                              __size_of_PrintLed 006C  
                                     ??_memcpy 0043                                      _PutsRS485 0C1C  
              __size_of_EUSART_get_last_status 0004                                       ??_strlen 003F  
                      __end_of_Ws0010PutGotoXY 0F86                                    __pbssCOMRAM 001F  
                    __size_of_Ws0010Buf5x7Char 00DA                     __size_of_EUSART_Initialize 003E  
                          Ws0010PutGotoXY@posx 0042                            Ws0010PutGotoXY@posy 0041  
                          __end_of_EUSART_Read 0FB0                                     ?_SetTick1S 003B  
                        _TMR0_InterruptHandler 0025                       __size_of_TMR0_StartTimer 0004  
                              ?_TMR0_StopTimer 003B                         _PIN_MANAGER_Initialize 0DC4  
                            __CFG_CCP2MX$PORTC 000000                           Ws0010BufPatern@count 003D  
                                    __pintcode 0008                                  __pmediumconst FB04  
                                   ?_PrintData 0049                                       ?___awdiv 003D  
                                    _fifo_init 0BC6                              _Ws0010Buf9x16Char 03CC  
                                   ?_PutsRS485 0041                         Ws0010Buf9x16Char@carac 0046  
                            Ws0010Buf5x7Char@j 0043                               ?_Ws0010BufBitmap 0045  
                           ?_Ws0010Buf9x16Char 0041                               ?_Ws0010BufGotoXY 003D  
                             ?_Ws0010BufPatern 003D                            ??_Ws0010Buf9x16Char 0042  
                                 ?_ProcessInit 003B                                  _TMR0_CallBack 0F4C  
                         _INTERRUPT_Initialize 1052                         _EUSART_get_last_status 1058  
                            ??_TMR0_Initialize 003D         EUSART_SetErrorHandler@interruptHandler 003D  
                                     _LATDbits 000F8C                                       _LATEbits 000F8D  
                            _eusartRxLastError 002E                     ??_TMR0_SetInterruptHandler 003F  
                          Ws0010Buf5x7Char@inv 003D                                       _PIR1bits 000F9E  
              ??_EUSART_SetFramingErrorHandler 003F                                       _RCONbits 000FD0  
                            _EUSART_is_tx_done 0FFC                      __end_of_Ws0010Buf9x16Char 04FE  
                             __CFG_WDTPS$32768 000000                                       _TMR0_ISR 0FC2  
            _EUSART_DefaultOverrunErrorHandler 000000                                    ??_GetsRS485 003F  
                           ?_EUSART_is_tx_done 003B                                     ?_fifo_init 003D  
                            ??_ProcessPeriodic 004D                                    Ws0010Init@i 004B  
                                _ProcessVector 008D                                   ??_fifo_queue 0040  
                      __size_of_SetProcessFunc 0052                            ??_EUSART_is_tx_done 003D  
                             ?_Ws0010PutGotoXY 0041                                 ?_TMR0_CallBack 003B  
                                  _EUSART_Read 0F9C                                    _INTCON2bits 000FF1  
                                    copy_data0 0B00                                      copy_data1 0B20  
                        ?_INTERRUPT_Initialize 003B                              Ws0010Bufu32@F3253 00C9  
                            Ws0010Bufu16@F3238 000F                                       _CounterA 0023  
                                     _CounterB 0021                                    DelayLongo@f 003F  
                                  ??_SetTick1S 003B                      __end_of_EUSART_is_tx_done 1008  
                            GetsRS485@RxStatus 0040                                       __Hrparam 0000  
                        SetProcessFunc@Command 0048                             __end_of_fifo_queue 0974  
                                    memcpy@tmp 0047                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                       _PrintLed 0B5A  
                                  ??_PrintData 004D                                   GetsRS485@Ret 003F  
                      ??_OSCILLATOR_Initialize 003D                             fifo_dequeue@p_data 003F  
                          _EUSART_ErrorHandler 0051                             fifo_dequeue@p_fifo 003D  
                            ??_TMR0_StartTimer 003D                               __size_of___awdiv 0084  
                              fifo_init@p_fifo 003D                                    ??_PutsRS485 0043  
                           fifo_dequeue@result 0044                                       __ptext10 002C  
                                     __ptext11 0A74                                       __ptext20 1008  
                                     __ptext12 08CA                                       __ptext21 0B5A  
                                     __ptext13 05D8                                       __ptext30 0BC6  
                                     __ptext22 0250                                       __ptext14 0FD2  
                                     __ptext31 0D0A                                       __ptext23 03CC  
                                     __ptext15 0FE0                                       __ptext40 1060  
                                     __ptext32 0F6A                                       __ptext24 04FE  
                                     __ptext16 0FEE                                       __ptext41 1048  
                                     __ptext33 0816                                       __ptext25 0DFC  
                                     __ptext17 0C1C                                       __ptext42 0C70  
                                     __ptext34 09F8                                       __ptext26 1014  
                                     __ptext18 0E60                                       __ptext43 0CC2  
                                     __ptext35 0E2E                                       __ptext27 1058  
                                     __ptext19 0FFC                                       __ptext44 0F0A  
                                     __ptext36 075E                                       __ptext28 0F9C  
                                     __ptext37 0974                                       __ptext29 06A6  
                                     __ptext46 0FC2                                       __ptext38 0EE6  
                                     __ptext47 0F4C                                       __ptext39 105C  
                                     __ptext48 0D8A                                       __ptext49 0000  
                                 PrintLed@flag 0027                               _Ws0010Buf5x7Char 04FE  
                SetProcessFunc@FunctionHandler 004B                    __size_of_EUSART_is_rx_ready 000C  
                                __size_of_main 0012                        ?_EUSART_SetErrorHandler 003D  
EUSART_SetOverrunErrorHandler@interruptHandler 003D                     __size_of_Ws0010Buf9x16Char 0132  
                                     int$flags 0059                                    ??_fifo_init 0040  
        __end_of_EUSART_SetFramingErrorHandler 103E         __size_of_EUSART_SetFramingErrorHandler 000A  
                _EUSART_SetFramingErrorHandler 1034                                     _INTCONbits 000FF2  
                             Ws0010BufBitmap@j 004B                                ??_TMR0_CallBack 003B  
                                     memcmp@vl 003D                                       memcmp@vr 003F  
                                     memcpy@d1 003D                                       memcpy@s1 003F  
                        __end_of_Ws0010Refresh 0D4C                               Ws0010Bufu8@F3223 001B  
                       ??_INTERRUPT_Initialize 003D                          __end_of_Ws0010PutByte 08CA  
                         __size_of_ProcessInit 00B8                                       intlevel2 0000  
                             ??_TMR0_StopTimer 003D                               Ws0010BufPatern@i 003F  
                      ?_PIN_MANAGER_Initialize 003B                 __end_of_EUSART_SetErrorHandler 1048  
                        Ws0010Buf5x7Char@carac 0042                     __size_of_EUSART_is_tx_done 000C  
EUSART_SetFramingErrorHandler@interruptHandler 003D                                  ?_fifo_dequeue 003D  
       __end_of_INTERRUPT_InterruptManagerHigh 0028        __size_of_INTERRUPT_InterruptManagerHigh 0020  
               _INTERRUPT_InterruptManagerHigh 0008                                  fifo_init@size 003F  
                               _SetProcessFunc 0C70                                _TMR0_Initialize 0EBC  
                      ?_EUSART_get_last_status 003B                             EUSART_Write@txData 003D  
               __end_of_PIN_MANAGER_Initialize 0DFC                      ProcessPeriodic@StrCommand 0060  
                              Ws0010Init@F3174 0001                                _ProcessPeriodic 002C  
